// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: geyser.proto
// Protobuf C++ Version: 6.31.0

#include "geyser.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace geyser {

inline constexpr SubscribeUpdateSlot::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        dead_error_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        slot_{::uint64_t{0u}},
        parent_{::uint64_t{0u}},
        status_{static_cast< ::geyser::SlotStatus >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR SubscribeUpdateSlot::SubscribeUpdateSlot(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SubscribeUpdateSlot_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SubscribeUpdateSlotDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeUpdateSlotDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeUpdateSlotDefaultTypeInternal() {}
  union {
    SubscribeUpdateSlot _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeUpdateSlotDefaultTypeInternal _SubscribeUpdateSlot_default_instance_;

inline constexpr SubscribeUpdatePong::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SubscribeUpdatePong::SubscribeUpdatePong(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SubscribeUpdatePong_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SubscribeUpdatePongDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeUpdatePongDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeUpdatePongDefaultTypeInternal() {}
  union {
    SubscribeUpdatePong _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeUpdatePongDefaultTypeInternal _SubscribeUpdatePong_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR SubscribeUpdatePing::SubscribeUpdatePing(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(SubscribeUpdatePing_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct SubscribeUpdatePingDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeUpdatePingDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeUpdatePingDefaultTypeInternal() {}
  union {
    SubscribeUpdatePing _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeUpdatePingDefaultTypeInternal _SubscribeUpdatePing_default_instance_;

inline constexpr SubscribeUpdateEntry::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        hash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        slot_{::uint64_t{0u}},
        index_{::uint64_t{0u}},
        num_hashes_{::uint64_t{0u}},
        executed_transaction_count_{::uint64_t{0u}},
        starting_transaction_index_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR SubscribeUpdateEntry::SubscribeUpdateEntry(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SubscribeUpdateEntry_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SubscribeUpdateEntryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeUpdateEntryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeUpdateEntryDefaultTypeInternal() {}
  union {
    SubscribeUpdateEntry _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeUpdateEntryDefaultTypeInternal _SubscribeUpdateEntry_default_instance_;

inline constexpr SubscribeUpdateAccountInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        pubkey_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        owner_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        txn_signature_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        lamports_{::uint64_t{0u}},
        rent_epoch_{::uint64_t{0u}},
        write_version_{::uint64_t{0u}},
        executable_{false} {}

template <typename>
PROTOBUF_CONSTEXPR SubscribeUpdateAccountInfo::SubscribeUpdateAccountInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SubscribeUpdateAccountInfo_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SubscribeUpdateAccountInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeUpdateAccountInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeUpdateAccountInfoDefaultTypeInternal() {}
  union {
    SubscribeUpdateAccountInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeUpdateAccountInfoDefaultTypeInternal _SubscribeUpdateAccountInfo_default_instance_;

inline constexpr SubscribeRequestPing::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SubscribeRequestPing::SubscribeRequestPing(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SubscribeRequestPing_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SubscribeRequestPingDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeRequestPingDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeRequestPingDefaultTypeInternal() {}
  union {
    SubscribeRequestPing _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeRequestPingDefaultTypeInternal _SubscribeRequestPing_default_instance_;

inline constexpr SubscribeRequestFilterTransactions::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        account_include_{},
        account_exclude_{},
        account_required_{},
        signature_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        vote_{false},
        failed_{false} {}

template <typename>
PROTOBUF_CONSTEXPR SubscribeRequestFilterTransactions::SubscribeRequestFilterTransactions(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SubscribeRequestFilterTransactions_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SubscribeRequestFilterTransactionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeRequestFilterTransactionsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeRequestFilterTransactionsDefaultTypeInternal() {}
  union {
    SubscribeRequestFilterTransactions _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeRequestFilterTransactionsDefaultTypeInternal _SubscribeRequestFilterTransactions_default_instance_;

inline constexpr SubscribeRequestFilterSlots::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        filter_by_commitment_{false},
        interslot_updates_{false} {}

template <typename>
PROTOBUF_CONSTEXPR SubscribeRequestFilterSlots::SubscribeRequestFilterSlots(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SubscribeRequestFilterSlots_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SubscribeRequestFilterSlotsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeRequestFilterSlotsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeRequestFilterSlotsDefaultTypeInternal() {}
  union {
    SubscribeRequestFilterSlots _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeRequestFilterSlotsDefaultTypeInternal _SubscribeRequestFilterSlots_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR SubscribeRequestFilterEntry::SubscribeRequestFilterEntry(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(SubscribeRequestFilterEntry_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct SubscribeRequestFilterEntryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeRequestFilterEntryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeRequestFilterEntryDefaultTypeInternal() {}
  union {
    SubscribeRequestFilterEntry _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeRequestFilterEntryDefaultTypeInternal _SubscribeRequestFilterEntry_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR SubscribeRequestFilterBlocksMeta::SubscribeRequestFilterBlocksMeta(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(SubscribeRequestFilterBlocksMeta_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct SubscribeRequestFilterBlocksMetaDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeRequestFilterBlocksMetaDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeRequestFilterBlocksMetaDefaultTypeInternal() {}
  union {
    SubscribeRequestFilterBlocksMeta _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeRequestFilterBlocksMetaDefaultTypeInternal _SubscribeRequestFilterBlocksMeta_default_instance_;

inline constexpr SubscribeRequestFilterBlocks::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        account_include_{},
        include_transactions_{false},
        include_accounts_{false},
        include_entries_{false} {}

template <typename>
PROTOBUF_CONSTEXPR SubscribeRequestFilterBlocks::SubscribeRequestFilterBlocks(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SubscribeRequestFilterBlocks_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SubscribeRequestFilterBlocksDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeRequestFilterBlocksDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeRequestFilterBlocksDefaultTypeInternal() {}
  union {
    SubscribeRequestFilterBlocks _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeRequestFilterBlocksDefaultTypeInternal _SubscribeRequestFilterBlocks_default_instance_;

inline constexpr SubscribeRequestFilterAccountsFilterMemcmp::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        offset_{::uint64_t{0u}},
        data_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR SubscribeRequestFilterAccountsFilterMemcmp::SubscribeRequestFilterAccountsFilterMemcmp(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SubscribeRequestFilterAccountsFilterMemcmp_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SubscribeRequestFilterAccountsFilterMemcmpDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeRequestFilterAccountsFilterMemcmpDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeRequestFilterAccountsFilterMemcmpDefaultTypeInternal() {}
  union {
    SubscribeRequestFilterAccountsFilterMemcmp _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeRequestFilterAccountsFilterMemcmpDefaultTypeInternal _SubscribeRequestFilterAccountsFilterMemcmp_default_instance_;

inline constexpr SubscribeRequestFilterAccountsFilterLamports::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : cmp_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR SubscribeRequestFilterAccountsFilterLamports::SubscribeRequestFilterAccountsFilterLamports(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SubscribeRequestFilterAccountsFilterLamports_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SubscribeRequestFilterAccountsFilterLamportsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeRequestFilterAccountsFilterLamportsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeRequestFilterAccountsFilterLamportsDefaultTypeInternal() {}
  union {
    SubscribeRequestFilterAccountsFilterLamports _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeRequestFilterAccountsFilterLamportsDefaultTypeInternal _SubscribeRequestFilterAccountsFilterLamports_default_instance_;

inline constexpr SubscribeRequestAccountsDataSlice::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        offset_{::uint64_t{0u}},
        length_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR SubscribeRequestAccountsDataSlice::SubscribeRequestAccountsDataSlice(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SubscribeRequestAccountsDataSlice_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SubscribeRequestAccountsDataSliceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeRequestAccountsDataSliceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeRequestAccountsDataSliceDefaultTypeInternal() {}
  union {
    SubscribeRequestAccountsDataSlice _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeRequestAccountsDataSliceDefaultTypeInternal _SubscribeRequestAccountsDataSlice_default_instance_;

inline constexpr SubscribeReplayInfoResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        first_available_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR SubscribeReplayInfoResponse::SubscribeReplayInfoResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SubscribeReplayInfoResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SubscribeReplayInfoResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeReplayInfoResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeReplayInfoResponseDefaultTypeInternal() {}
  union {
    SubscribeReplayInfoResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeReplayInfoResponseDefaultTypeInternal _SubscribeReplayInfoResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR SubscribeReplayInfoRequest::SubscribeReplayInfoRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(SubscribeReplayInfoRequest_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct SubscribeReplayInfoRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeReplayInfoRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeReplayInfoRequestDefaultTypeInternal() {}
  union {
    SubscribeReplayInfoRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeReplayInfoRequestDefaultTypeInternal _SubscribeReplayInfoRequest_default_instance_;

inline constexpr PongResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        count_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PongResponse::PongResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(PongResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PongResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PongResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PongResponseDefaultTypeInternal() {}
  union {
    PongResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PongResponseDefaultTypeInternal _PongResponse_default_instance_;

inline constexpr PingRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        count_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PingRequest::PingRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(PingRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PingRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PingRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PingRequestDefaultTypeInternal() {}
  union {
    PingRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PingRequestDefaultTypeInternal _PingRequest_default_instance_;

inline constexpr IsBlockhashValidResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        slot_{::uint64_t{0u}},
        valid_{false} {}

template <typename>
PROTOBUF_CONSTEXPR IsBlockhashValidResponse::IsBlockhashValidResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(IsBlockhashValidResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct IsBlockhashValidResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR IsBlockhashValidResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~IsBlockhashValidResponseDefaultTypeInternal() {}
  union {
    IsBlockhashValidResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IsBlockhashValidResponseDefaultTypeInternal _IsBlockhashValidResponse_default_instance_;

inline constexpr IsBlockhashValidRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        blockhash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        commitment_{static_cast< ::geyser::CommitmentLevel >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR IsBlockhashValidRequest::IsBlockhashValidRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(IsBlockhashValidRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct IsBlockhashValidRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR IsBlockhashValidRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~IsBlockhashValidRequestDefaultTypeInternal() {}
  union {
    IsBlockhashValidRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IsBlockhashValidRequestDefaultTypeInternal _IsBlockhashValidRequest_default_instance_;

inline constexpr GetVersionResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        version_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR GetVersionResponse::GetVersionResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GetVersionResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetVersionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetVersionResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetVersionResponseDefaultTypeInternal() {}
  union {
    GetVersionResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetVersionResponseDefaultTypeInternal _GetVersionResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR GetVersionRequest::GetVersionRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(GetVersionRequest_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct GetVersionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetVersionRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetVersionRequestDefaultTypeInternal() {}
  union {
    GetVersionRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetVersionRequestDefaultTypeInternal _GetVersionRequest_default_instance_;

inline constexpr GetSlotResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        slot_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR GetSlotResponse::GetSlotResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GetSlotResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetSlotResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetSlotResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetSlotResponseDefaultTypeInternal() {}
  union {
    GetSlotResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetSlotResponseDefaultTypeInternal _GetSlotResponse_default_instance_;

inline constexpr GetSlotRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        commitment_{static_cast< ::geyser::CommitmentLevel >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR GetSlotRequest::GetSlotRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GetSlotRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetSlotRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetSlotRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetSlotRequestDefaultTypeInternal() {}
  union {
    GetSlotRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetSlotRequestDefaultTypeInternal _GetSlotRequest_default_instance_;

inline constexpr GetLatestBlockhashResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        blockhash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        slot_{::uint64_t{0u}},
        last_valid_block_height_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR GetLatestBlockhashResponse::GetLatestBlockhashResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GetLatestBlockhashResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetLatestBlockhashResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetLatestBlockhashResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetLatestBlockhashResponseDefaultTypeInternal() {}
  union {
    GetLatestBlockhashResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetLatestBlockhashResponseDefaultTypeInternal _GetLatestBlockhashResponse_default_instance_;

inline constexpr GetLatestBlockhashRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        commitment_{static_cast< ::geyser::CommitmentLevel >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR GetLatestBlockhashRequest::GetLatestBlockhashRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GetLatestBlockhashRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetLatestBlockhashRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetLatestBlockhashRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetLatestBlockhashRequestDefaultTypeInternal() {}
  union {
    GetLatestBlockhashRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetLatestBlockhashRequestDefaultTypeInternal _GetLatestBlockhashRequest_default_instance_;

inline constexpr GetBlockHeightResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        block_height_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR GetBlockHeightResponse::GetBlockHeightResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GetBlockHeightResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetBlockHeightResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetBlockHeightResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetBlockHeightResponseDefaultTypeInternal() {}
  union {
    GetBlockHeightResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetBlockHeightResponseDefaultTypeInternal _GetBlockHeightResponse_default_instance_;

inline constexpr GetBlockHeightRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        commitment_{static_cast< ::geyser::CommitmentLevel >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR GetBlockHeightRequest::GetBlockHeightRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GetBlockHeightRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetBlockHeightRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetBlockHeightRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetBlockHeightRequestDefaultTypeInternal() {}
  union {
    GetBlockHeightRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetBlockHeightRequestDefaultTypeInternal _GetBlockHeightRequest_default_instance_;

inline constexpr SubscribeUpdateTransactionStatus::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        signature_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        err_{nullptr},
        slot_{::uint64_t{0u}},
        index_{::uint64_t{0u}},
        is_vote_{false} {}

template <typename>
PROTOBUF_CONSTEXPR SubscribeUpdateTransactionStatus::SubscribeUpdateTransactionStatus(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SubscribeUpdateTransactionStatus_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SubscribeUpdateTransactionStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeUpdateTransactionStatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeUpdateTransactionStatusDefaultTypeInternal() {}
  union {
    SubscribeUpdateTransactionStatus _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeUpdateTransactionStatusDefaultTypeInternal _SubscribeUpdateTransactionStatus_default_instance_;

inline constexpr SubscribeUpdateAccount::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        account_{nullptr},
        slot_{::uint64_t{0u}},
        is_startup_{false} {}

template <typename>
PROTOBUF_CONSTEXPR SubscribeUpdateAccount::SubscribeUpdateAccount(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SubscribeUpdateAccount_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SubscribeUpdateAccountDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeUpdateAccountDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeUpdateAccountDefaultTypeInternal() {}
  union {
    SubscribeUpdateAccount _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeUpdateAccountDefaultTypeInternal _SubscribeUpdateAccount_default_instance_;

inline constexpr SubscribeRequestFilterAccountsFilter::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : filter_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR SubscribeRequestFilterAccountsFilter::SubscribeRequestFilterAccountsFilter(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SubscribeRequestFilterAccountsFilter_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SubscribeRequestFilterAccountsFilterDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeRequestFilterAccountsFilterDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeRequestFilterAccountsFilterDefaultTypeInternal() {}
  union {
    SubscribeRequestFilterAccountsFilter _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeRequestFilterAccountsFilterDefaultTypeInternal _SubscribeRequestFilterAccountsFilter_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR SubscribeRequest_TransactionsStatusEntry_DoNotUse::SubscribeRequest_TransactionsStatusEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : SubscribeRequest_TransactionsStatusEntry_DoNotUse::MapEntry(SubscribeRequest_TransactionsStatusEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : SubscribeRequest_TransactionsStatusEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct SubscribeRequest_TransactionsStatusEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeRequest_TransactionsStatusEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeRequest_TransactionsStatusEntry_DoNotUseDefaultTypeInternal() {}
  union {
    SubscribeRequest_TransactionsStatusEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeRequest_TransactionsStatusEntry_DoNotUseDefaultTypeInternal _SubscribeRequest_TransactionsStatusEntry_DoNotUse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR SubscribeRequest_TransactionsEntry_DoNotUse::SubscribeRequest_TransactionsEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : SubscribeRequest_TransactionsEntry_DoNotUse::MapEntry(SubscribeRequest_TransactionsEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : SubscribeRequest_TransactionsEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct SubscribeRequest_TransactionsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeRequest_TransactionsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeRequest_TransactionsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    SubscribeRequest_TransactionsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeRequest_TransactionsEntry_DoNotUseDefaultTypeInternal _SubscribeRequest_TransactionsEntry_DoNotUse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR SubscribeRequest_SlotsEntry_DoNotUse::SubscribeRequest_SlotsEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : SubscribeRequest_SlotsEntry_DoNotUse::MapEntry(SubscribeRequest_SlotsEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : SubscribeRequest_SlotsEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct SubscribeRequest_SlotsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeRequest_SlotsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeRequest_SlotsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    SubscribeRequest_SlotsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeRequest_SlotsEntry_DoNotUseDefaultTypeInternal _SubscribeRequest_SlotsEntry_DoNotUse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR SubscribeRequest_EntryEntry_DoNotUse::SubscribeRequest_EntryEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : SubscribeRequest_EntryEntry_DoNotUse::MapEntry(SubscribeRequest_EntryEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : SubscribeRequest_EntryEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct SubscribeRequest_EntryEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeRequest_EntryEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeRequest_EntryEntry_DoNotUseDefaultTypeInternal() {}
  union {
    SubscribeRequest_EntryEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeRequest_EntryEntry_DoNotUseDefaultTypeInternal _SubscribeRequest_EntryEntry_DoNotUse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR SubscribeRequest_BlocksMetaEntry_DoNotUse::SubscribeRequest_BlocksMetaEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : SubscribeRequest_BlocksMetaEntry_DoNotUse::MapEntry(SubscribeRequest_BlocksMetaEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : SubscribeRequest_BlocksMetaEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct SubscribeRequest_BlocksMetaEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeRequest_BlocksMetaEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeRequest_BlocksMetaEntry_DoNotUseDefaultTypeInternal() {}
  union {
    SubscribeRequest_BlocksMetaEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeRequest_BlocksMetaEntry_DoNotUseDefaultTypeInternal _SubscribeRequest_BlocksMetaEntry_DoNotUse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR SubscribeRequest_BlocksEntry_DoNotUse::SubscribeRequest_BlocksEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : SubscribeRequest_BlocksEntry_DoNotUse::MapEntry(SubscribeRequest_BlocksEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : SubscribeRequest_BlocksEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct SubscribeRequest_BlocksEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeRequest_BlocksEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeRequest_BlocksEntry_DoNotUseDefaultTypeInternal() {}
  union {
    SubscribeRequest_BlocksEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeRequest_BlocksEntry_DoNotUseDefaultTypeInternal _SubscribeRequest_BlocksEntry_DoNotUse_default_instance_;

inline constexpr SubscribeUpdateBlockMeta::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        blockhash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        parent_blockhash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        rewards_{nullptr},
        block_time_{nullptr},
        block_height_{nullptr},
        slot_{::uint64_t{0u}},
        parent_slot_{::uint64_t{0u}},
        executed_transaction_count_{::uint64_t{0u}},
        entries_count_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR SubscribeUpdateBlockMeta::SubscribeUpdateBlockMeta(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SubscribeUpdateBlockMeta_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SubscribeUpdateBlockMetaDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeUpdateBlockMetaDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeUpdateBlockMetaDefaultTypeInternal() {}
  union {
    SubscribeUpdateBlockMeta _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeUpdateBlockMetaDefaultTypeInternal _SubscribeUpdateBlockMeta_default_instance_;

inline constexpr SubscribeRequestFilterAccounts::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        account_{},
        owner_{},
        filters_{},
        nonempty_txn_signature_{false} {}

template <typename>
PROTOBUF_CONSTEXPR SubscribeRequestFilterAccounts::SubscribeRequestFilterAccounts(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SubscribeRequestFilterAccounts_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SubscribeRequestFilterAccountsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeRequestFilterAccountsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeRequestFilterAccountsDefaultTypeInternal() {}
  union {
    SubscribeRequestFilterAccounts _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeRequestFilterAccountsDefaultTypeInternal _SubscribeRequestFilterAccounts_default_instance_;

inline constexpr SubscribeUpdateTransactionInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        signature_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        transaction_{nullptr},
        meta_{nullptr},
        index_{::uint64_t{0u}},
        is_vote_{false} {}

template <typename>
PROTOBUF_CONSTEXPR SubscribeUpdateTransactionInfo::SubscribeUpdateTransactionInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SubscribeUpdateTransactionInfo_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SubscribeUpdateTransactionInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeUpdateTransactionInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeUpdateTransactionInfoDefaultTypeInternal() {}
  union {
    SubscribeUpdateTransactionInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeUpdateTransactionInfoDefaultTypeInternal _SubscribeUpdateTransactionInfo_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR SubscribeRequest_AccountsEntry_DoNotUse::SubscribeRequest_AccountsEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : SubscribeRequest_AccountsEntry_DoNotUse::MapEntry(SubscribeRequest_AccountsEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : SubscribeRequest_AccountsEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct SubscribeRequest_AccountsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeRequest_AccountsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeRequest_AccountsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    SubscribeRequest_AccountsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeRequest_AccountsEntry_DoNotUseDefaultTypeInternal _SubscribeRequest_AccountsEntry_DoNotUse_default_instance_;

inline constexpr SubscribeUpdateTransaction::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        transaction_{nullptr},
        slot_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR SubscribeUpdateTransaction::SubscribeUpdateTransaction(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SubscribeUpdateTransaction_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SubscribeUpdateTransactionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeUpdateTransactionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeUpdateTransactionDefaultTypeInternal() {}
  union {
    SubscribeUpdateTransaction _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeUpdateTransactionDefaultTypeInternal _SubscribeUpdateTransaction_default_instance_;

inline constexpr SubscribeUpdateBlock::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        transactions_{},
        accounts_{},
        entries_{},
        blockhash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        parent_blockhash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        rewards_{nullptr},
        block_time_{nullptr},
        block_height_{nullptr},
        slot_{::uint64_t{0u}},
        parent_slot_{::uint64_t{0u}},
        executed_transaction_count_{::uint64_t{0u}},
        updated_account_count_{::uint64_t{0u}},
        entries_count_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR SubscribeUpdateBlock::SubscribeUpdateBlock(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SubscribeUpdateBlock_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SubscribeUpdateBlockDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeUpdateBlockDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeUpdateBlockDefaultTypeInternal() {}
  union {
    SubscribeUpdateBlock _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeUpdateBlockDefaultTypeInternal _SubscribeUpdateBlock_default_instance_;

inline constexpr SubscribeRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        accounts_{},
        slots_{},
        transactions_{},
        blocks_{},
        blocks_meta_{},
        accounts_data_slice_{},
        entry_{},
        transactions_status_{},
        ping_{nullptr},
        from_slot_{::uint64_t{0u}},
        commitment_{static_cast< ::geyser::CommitmentLevel >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR SubscribeRequest::SubscribeRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SubscribeRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SubscribeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeRequestDefaultTypeInternal() {}
  union {
    SubscribeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeRequestDefaultTypeInternal _SubscribeRequest_default_instance_;

inline constexpr SubscribeUpdate::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        filters_{},
        created_at_{nullptr},
        update_oneof_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR SubscribeUpdate::SubscribeUpdate(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SubscribeUpdate_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SubscribeUpdateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeUpdateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeUpdateDefaultTypeInternal() {}
  union {
    SubscribeUpdate _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeUpdateDefaultTypeInternal _SubscribeUpdate_default_instance_;
}  // namespace geyser
static const ::_pb::EnumDescriptor* PROTOBUF_NONNULL
    file_level_enum_descriptors_geyser_2eproto[2];
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_geyser_2eproto = nullptr;
const ::uint32_t
    TableStruct_geyser_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeRequest_AccountsEntry_DoNotUse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeRequest_AccountsEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeRequest_AccountsEntry_DoNotUse, _impl_.value_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeRequest_SlotsEntry_DoNotUse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeRequest_SlotsEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeRequest_SlotsEntry_DoNotUse, _impl_.value_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeRequest_TransactionsEntry_DoNotUse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeRequest_TransactionsEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeRequest_TransactionsEntry_DoNotUse, _impl_.value_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeRequest_TransactionsStatusEntry_DoNotUse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeRequest_TransactionsStatusEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeRequest_TransactionsStatusEntry_DoNotUse, _impl_.value_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeRequest_BlocksEntry_DoNotUse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeRequest_BlocksEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeRequest_BlocksEntry_DoNotUse, _impl_.value_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeRequest_BlocksMetaEntry_DoNotUse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeRequest_BlocksMetaEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeRequest_BlocksMetaEntry_DoNotUse, _impl_.value_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeRequest_EntryEntry_DoNotUse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeRequest_EntryEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeRequest_EntryEntry_DoNotUse, _impl_.value_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeRequest, _impl_._has_bits_),
        14, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeRequest, _impl_.accounts_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeRequest, _impl_.slots_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeRequest, _impl_.transactions_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeRequest, _impl_.transactions_status_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeRequest, _impl_.blocks_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeRequest, _impl_.blocks_meta_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeRequest, _impl_.entry_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeRequest, _impl_.commitment_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeRequest, _impl_.accounts_data_slice_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeRequest, _impl_.ping_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeRequest, _impl_.from_slot_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        2,
        ~0u,
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeRequestFilterAccounts, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeRequestFilterAccounts, _impl_.account_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeRequestFilterAccounts, _impl_.owner_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeRequestFilterAccounts, _impl_.filters_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeRequestFilterAccounts, _impl_.nonempty_txn_signature_),
        ~0u,
        ~0u,
        ~0u,
        0,
        0x004, // bitmap
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeRequestFilterAccountsFilter, _impl_._oneof_case_[0]),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeRequestFilterAccountsFilter, _impl_.filter_),
        0x085, // bitmap
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeRequestFilterAccountsFilterMemcmp, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeRequestFilterAccountsFilterMemcmp, _impl_._oneof_case_[0]),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeRequestFilterAccountsFilterMemcmp, _impl_.offset_),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeRequestFilterAccountsFilterMemcmp, _impl_.data_),
        0,
        ~0u,
        ~0u,
        ~0u,
        0x004, // bitmap
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeRequestFilterAccountsFilterLamports, _impl_._oneof_case_[0]),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeRequestFilterAccountsFilterLamports, _impl_.cmp_),
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeRequestFilterSlots, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeRequestFilterSlots, _impl_.filter_by_commitment_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeRequestFilterSlots, _impl_.interslot_updates_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeRequestFilterTransactions, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeRequestFilterTransactions, _impl_.vote_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeRequestFilterTransactions, _impl_.failed_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeRequestFilterTransactions, _impl_.signature_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeRequestFilterTransactions, _impl_.account_include_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeRequestFilterTransactions, _impl_.account_exclude_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeRequestFilterTransactions, _impl_.account_required_),
        1,
        2,
        0,
        ~0u,
        ~0u,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeRequestFilterBlocks, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeRequestFilterBlocks, _impl_.account_include_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeRequestFilterBlocks, _impl_.include_transactions_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeRequestFilterBlocks, _impl_.include_accounts_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeRequestFilterBlocks, _impl_.include_entries_),
        ~0u,
        0,
        1,
        2,
        0x000, // bitmap
        0x000, // bitmap
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeRequestAccountsDataSlice, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeRequestAccountsDataSlice, _impl_.offset_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeRequestAccountsDataSlice, _impl_.length_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeRequestPing, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeRequestPing, _impl_.id_),
        0,
        0x085, // bitmap
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeUpdate, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeUpdate, _impl_._oneof_case_[0]),
        16, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeUpdate, _impl_.filters_),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeUpdate, _impl_.created_at_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeUpdate, _impl_.update_oneof_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeUpdateAccount, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeUpdateAccount, _impl_.account_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeUpdateAccount, _impl_.slot_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeUpdateAccount, _impl_.is_startup_),
        0,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeUpdateAccountInfo, _impl_._has_bits_),
        11, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeUpdateAccountInfo, _impl_.pubkey_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeUpdateAccountInfo, _impl_.lamports_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeUpdateAccountInfo, _impl_.owner_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeUpdateAccountInfo, _impl_.executable_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeUpdateAccountInfo, _impl_.rent_epoch_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeUpdateAccountInfo, _impl_.data_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeUpdateAccountInfo, _impl_.write_version_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeUpdateAccountInfo, _impl_.txn_signature_),
        0,
        4,
        1,
        7,
        5,
        2,
        6,
        3,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeUpdateSlot, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeUpdateSlot, _impl_.slot_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeUpdateSlot, _impl_.parent_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeUpdateSlot, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeUpdateSlot, _impl_.dead_error_),
        1,
        2,
        3,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeUpdateTransaction, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeUpdateTransaction, _impl_.transaction_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeUpdateTransaction, _impl_.slot_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeUpdateTransactionInfo, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeUpdateTransactionInfo, _impl_.signature_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeUpdateTransactionInfo, _impl_.is_vote_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeUpdateTransactionInfo, _impl_.transaction_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeUpdateTransactionInfo, _impl_.meta_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeUpdateTransactionInfo, _impl_.index_),
        0,
        4,
        1,
        2,
        3,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeUpdateTransactionStatus, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeUpdateTransactionStatus, _impl_.slot_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeUpdateTransactionStatus, _impl_.signature_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeUpdateTransactionStatus, _impl_.is_vote_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeUpdateTransactionStatus, _impl_.index_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeUpdateTransactionStatus, _impl_.err_),
        2,
        0,
        4,
        3,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeUpdateBlock, _impl_._has_bits_),
        16, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeUpdateBlock, _impl_.slot_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeUpdateBlock, _impl_.blockhash_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeUpdateBlock, _impl_.rewards_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeUpdateBlock, _impl_.block_time_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeUpdateBlock, _impl_.block_height_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeUpdateBlock, _impl_.parent_slot_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeUpdateBlock, _impl_.parent_blockhash_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeUpdateBlock, _impl_.executed_transaction_count_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeUpdateBlock, _impl_.transactions_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeUpdateBlock, _impl_.updated_account_count_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeUpdateBlock, _impl_.accounts_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeUpdateBlock, _impl_.entries_count_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeUpdateBlock, _impl_.entries_),
        5,
        0,
        2,
        3,
        4,
        6,
        1,
        7,
        ~0u,
        8,
        ~0u,
        9,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeUpdateBlockMeta, _impl_._has_bits_),
        12, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeUpdateBlockMeta, _impl_.slot_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeUpdateBlockMeta, _impl_.blockhash_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeUpdateBlockMeta, _impl_.rewards_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeUpdateBlockMeta, _impl_.block_time_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeUpdateBlockMeta, _impl_.block_height_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeUpdateBlockMeta, _impl_.parent_slot_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeUpdateBlockMeta, _impl_.parent_blockhash_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeUpdateBlockMeta, _impl_.executed_transaction_count_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeUpdateBlockMeta, _impl_.entries_count_),
        5,
        0,
        2,
        3,
        4,
        6,
        1,
        7,
        8,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeUpdateEntry, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeUpdateEntry, _impl_.slot_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeUpdateEntry, _impl_.index_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeUpdateEntry, _impl_.num_hashes_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeUpdateEntry, _impl_.hash_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeUpdateEntry, _impl_.executed_transaction_count_),
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeUpdateEntry, _impl_.starting_transaction_index_),
        1,
        2,
        3,
        0,
        4,
        5,
        0x000, // bitmap
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeUpdatePong, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeUpdatePong, _impl_.id_),
        0,
        0x000, // bitmap
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeReplayInfoResponse, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::geyser::SubscribeReplayInfoResponse, _impl_.first_available_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::geyser::PingRequest, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::geyser::PingRequest, _impl_.count_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::geyser::PongResponse, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::geyser::PongResponse, _impl_.count_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::geyser::GetLatestBlockhashRequest, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::geyser::GetLatestBlockhashRequest, _impl_.commitment_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::geyser::GetLatestBlockhashResponse, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::geyser::GetLatestBlockhashResponse, _impl_.slot_),
        PROTOBUF_FIELD_OFFSET(::geyser::GetLatestBlockhashResponse, _impl_.blockhash_),
        PROTOBUF_FIELD_OFFSET(::geyser::GetLatestBlockhashResponse, _impl_.last_valid_block_height_),
        1,
        0,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::geyser::GetBlockHeightRequest, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::geyser::GetBlockHeightRequest, _impl_.commitment_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::geyser::GetBlockHeightResponse, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::geyser::GetBlockHeightResponse, _impl_.block_height_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::geyser::GetSlotRequest, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::geyser::GetSlotRequest, _impl_.commitment_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::geyser::GetSlotResponse, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::geyser::GetSlotResponse, _impl_.slot_),
        0,
        0x000, // bitmap
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::geyser::GetVersionResponse, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::geyser::GetVersionResponse, _impl_.version_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::geyser::IsBlockhashValidRequest, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::geyser::IsBlockhashValidRequest, _impl_.blockhash_),
        PROTOBUF_FIELD_OFFSET(::geyser::IsBlockhashValidRequest, _impl_.commitment_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::geyser::IsBlockhashValidResponse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::geyser::IsBlockhashValidResponse, _impl_.slot_),
        PROTOBUF_FIELD_OFFSET(::geyser::IsBlockhashValidResponse, _impl_.valid_),
        0,
        1,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::geyser::SubscribeRequest_AccountsEntry_DoNotUse)},
        {7, sizeof(::geyser::SubscribeRequest_SlotsEntry_DoNotUse)},
        {14, sizeof(::geyser::SubscribeRequest_TransactionsEntry_DoNotUse)},
        {21, sizeof(::geyser::SubscribeRequest_TransactionsStatusEntry_DoNotUse)},
        {28, sizeof(::geyser::SubscribeRequest_BlocksEntry_DoNotUse)},
        {35, sizeof(::geyser::SubscribeRequest_BlocksMetaEntry_DoNotUse)},
        {42, sizeof(::geyser::SubscribeRequest_EntryEntry_DoNotUse)},
        {49, sizeof(::geyser::SubscribeRequest)},
        {74, sizeof(::geyser::SubscribeRequestFilterAccounts)},
        {85, sizeof(::geyser::SubscribeRequestFilterAccountsFilter)},
        {92, sizeof(::geyser::SubscribeRequestFilterAccountsFilterMemcmp)},
        {105, sizeof(::geyser::SubscribeRequestFilterAccountsFilterLamports)},
        {112, sizeof(::geyser::SubscribeRequestFilterSlots)},
        {119, sizeof(::geyser::SubscribeRequestFilterTransactions)},
        {134, sizeof(::geyser::SubscribeRequestFilterBlocks)},
        {145, sizeof(::geyser::SubscribeRequestFilterBlocksMeta)},
        {146, sizeof(::geyser::SubscribeRequestFilterEntry)},
        {147, sizeof(::geyser::SubscribeRequestAccountsDataSlice)},
        {154, sizeof(::geyser::SubscribeRequestPing)},
        {159, sizeof(::geyser::SubscribeUpdate)},
        {186, sizeof(::geyser::SubscribeUpdateAccount)},
        {195, sizeof(::geyser::SubscribeUpdateAccountInfo)},
        {214, sizeof(::geyser::SubscribeUpdateSlot)},
        {225, sizeof(::geyser::SubscribeUpdateTransaction)},
        {232, sizeof(::geyser::SubscribeUpdateTransactionInfo)},
        {245, sizeof(::geyser::SubscribeUpdateTransactionStatus)},
        {258, sizeof(::geyser::SubscribeUpdateBlock)},
        {287, sizeof(::geyser::SubscribeUpdateBlockMeta)},
        {308, sizeof(::geyser::SubscribeUpdateEntry)},
        {323, sizeof(::geyser::SubscribeUpdatePing)},
        {324, sizeof(::geyser::SubscribeUpdatePong)},
        {329, sizeof(::geyser::SubscribeReplayInfoRequest)},
        {330, sizeof(::geyser::SubscribeReplayInfoResponse)},
        {335, sizeof(::geyser::PingRequest)},
        {340, sizeof(::geyser::PongResponse)},
        {345, sizeof(::geyser::GetLatestBlockhashRequest)},
        {350, sizeof(::geyser::GetLatestBlockhashResponse)},
        {359, sizeof(::geyser::GetBlockHeightRequest)},
        {364, sizeof(::geyser::GetBlockHeightResponse)},
        {369, sizeof(::geyser::GetSlotRequest)},
        {374, sizeof(::geyser::GetSlotResponse)},
        {379, sizeof(::geyser::GetVersionRequest)},
        {380, sizeof(::geyser::GetVersionResponse)},
        {385, sizeof(::geyser::IsBlockhashValidRequest)},
        {392, sizeof(::geyser::IsBlockhashValidResponse)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::geyser::_SubscribeRequest_AccountsEntry_DoNotUse_default_instance_._instance,
    &::geyser::_SubscribeRequest_SlotsEntry_DoNotUse_default_instance_._instance,
    &::geyser::_SubscribeRequest_TransactionsEntry_DoNotUse_default_instance_._instance,
    &::geyser::_SubscribeRequest_TransactionsStatusEntry_DoNotUse_default_instance_._instance,
    &::geyser::_SubscribeRequest_BlocksEntry_DoNotUse_default_instance_._instance,
    &::geyser::_SubscribeRequest_BlocksMetaEntry_DoNotUse_default_instance_._instance,
    &::geyser::_SubscribeRequest_EntryEntry_DoNotUse_default_instance_._instance,
    &::geyser::_SubscribeRequest_default_instance_._instance,
    &::geyser::_SubscribeRequestFilterAccounts_default_instance_._instance,
    &::geyser::_SubscribeRequestFilterAccountsFilter_default_instance_._instance,
    &::geyser::_SubscribeRequestFilterAccountsFilterMemcmp_default_instance_._instance,
    &::geyser::_SubscribeRequestFilterAccountsFilterLamports_default_instance_._instance,
    &::geyser::_SubscribeRequestFilterSlots_default_instance_._instance,
    &::geyser::_SubscribeRequestFilterTransactions_default_instance_._instance,
    &::geyser::_SubscribeRequestFilterBlocks_default_instance_._instance,
    &::geyser::_SubscribeRequestFilterBlocksMeta_default_instance_._instance,
    &::geyser::_SubscribeRequestFilterEntry_default_instance_._instance,
    &::geyser::_SubscribeRequestAccountsDataSlice_default_instance_._instance,
    &::geyser::_SubscribeRequestPing_default_instance_._instance,
    &::geyser::_SubscribeUpdate_default_instance_._instance,
    &::geyser::_SubscribeUpdateAccount_default_instance_._instance,
    &::geyser::_SubscribeUpdateAccountInfo_default_instance_._instance,
    &::geyser::_SubscribeUpdateSlot_default_instance_._instance,
    &::geyser::_SubscribeUpdateTransaction_default_instance_._instance,
    &::geyser::_SubscribeUpdateTransactionInfo_default_instance_._instance,
    &::geyser::_SubscribeUpdateTransactionStatus_default_instance_._instance,
    &::geyser::_SubscribeUpdateBlock_default_instance_._instance,
    &::geyser::_SubscribeUpdateBlockMeta_default_instance_._instance,
    &::geyser::_SubscribeUpdateEntry_default_instance_._instance,
    &::geyser::_SubscribeUpdatePing_default_instance_._instance,
    &::geyser::_SubscribeUpdatePong_default_instance_._instance,
    &::geyser::_SubscribeReplayInfoRequest_default_instance_._instance,
    &::geyser::_SubscribeReplayInfoResponse_default_instance_._instance,
    &::geyser::_PingRequest_default_instance_._instance,
    &::geyser::_PongResponse_default_instance_._instance,
    &::geyser::_GetLatestBlockhashRequest_default_instance_._instance,
    &::geyser::_GetLatestBlockhashResponse_default_instance_._instance,
    &::geyser::_GetBlockHeightRequest_default_instance_._instance,
    &::geyser::_GetBlockHeightResponse_default_instance_._instance,
    &::geyser::_GetSlotRequest_default_instance_._instance,
    &::geyser::_GetSlotResponse_default_instance_._instance,
    &::geyser::_GetVersionRequest_default_instance_._instance,
    &::geyser::_GetVersionResponse_default_instance_._instance,
    &::geyser::_IsBlockhashValidRequest_default_instance_._instance,
    &::geyser::_IsBlockhashValidResponse_default_instance_._instance,
};
const char descriptor_table_protodef_geyser_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\014geyser.proto\022\006geyser\032\037google/protobuf/"
    "timestamp.proto\032\024solana-storage.proto\"\234\n"
    "\n\020SubscribeRequest\0228\n\010accounts\030\001 \003(\0132&.g"
    "eyser.SubscribeRequest.AccountsEntry\0222\n\005"
    "slots\030\002 \003(\0132#.geyser.SubscribeRequest.Sl"
    "otsEntry\022@\n\014transactions\030\003 \003(\0132*.geyser."
    "SubscribeRequest.TransactionsEntry\022M\n\023tr"
    "ansactions_status\030\n \003(\01320.geyser.Subscri"
    "beRequest.TransactionsStatusEntry\0224\n\006blo"
    "cks\030\004 \003(\0132$.geyser.SubscribeRequest.Bloc"
    "ksEntry\022=\n\013blocks_meta\030\005 \003(\0132(.geyser.Su"
    "bscribeRequest.BlocksMetaEntry\0222\n\005entry\030"
    "\010 \003(\0132#.geyser.SubscribeRequest.EntryEnt"
    "ry\0220\n\ncommitment\030\006 \001(\0162\027.geyser.Commitme"
    "ntLevelH\000\210\001\001\022F\n\023accounts_data_slice\030\007 \003("
    "\0132).geyser.SubscribeRequestAccountsDataS"
    "lice\022/\n\004ping\030\t \001(\0132\034.geyser.SubscribeReq"
    "uestPingH\001\210\001\001\022\026\n\tfrom_slot\030\013 \001(\004H\002\210\001\001\032W\n"
    "\rAccountsEntry\022\013\n\003key\030\001 \001(\t\0225\n\005value\030\002 \001"
    "(\0132&.geyser.SubscribeRequestFilterAccoun"
    "ts:\0028\001\032Q\n\nSlotsEntry\022\013\n\003key\030\001 \001(\t\0222\n\005val"
    "ue\030\002 \001(\0132#.geyser.SubscribeRequestFilter"
    "Slots:\0028\001\032_\n\021TransactionsEntry\022\013\n\003key\030\001 "
    "\001(\t\0229\n\005value\030\002 \001(\0132*.geyser.SubscribeReq"
    "uestFilterTransactions:\0028\001\032e\n\027Transactio"
    "nsStatusEntry\022\013\n\003key\030\001 \001(\t\0229\n\005value\030\002 \001("
    "\0132*.geyser.SubscribeRequestFilterTransac"
    "tions:\0028\001\032S\n\013BlocksEntry\022\013\n\003key\030\001 \001(\t\0223\n"
    "\005value\030\002 \001(\0132$.geyser.SubscribeRequestFi"
    "lterBlocks:\0028\001\032[\n\017BlocksMetaEntry\022\013\n\003key"
    "\030\001 \001(\t\0227\n\005value\030\002 \001(\0132(.geyser.Subscribe"
    "RequestFilterBlocksMeta:\0028\001\032Q\n\nEntryEntr"
    "y\022\013\n\003key\030\001 \001(\t\0222\n\005value\030\002 \001(\0132#.geyser.S"
    "ubscribeRequestFilterEntry:\0028\001B\r\n\013_commi"
    "tmentB\007\n\005_pingB\014\n\n_from_slot\"\277\001\n\036Subscri"
    "beRequestFilterAccounts\022\017\n\007account\030\002 \003(\t"
    "\022\r\n\005owner\030\003 \003(\t\022=\n\007filters\030\004 \003(\0132,.geyse"
    "r.SubscribeRequestFilterAccountsFilter\022#"
    "\n\026nonempty_txn_signature\030\005 \001(\010H\000\210\001\001B\031\n\027_"
    "nonempty_txn_signature\"\363\001\n$SubscribeRequ"
    "estFilterAccountsFilter\022D\n\006memcmp\030\001 \001(\0132"
    "2.geyser.SubscribeRequestFilterAccountsF"
    "ilterMemcmpH\000\022\022\n\010datasize\030\002 \001(\004H\000\022\035\n\023tok"
    "en_account_state\030\003 \001(\010H\000\022H\n\010lamports\030\004 \001"
    "(\01324.geyser.SubscribeRequestFilterAccoun"
    "tsFilterLamportsH\000B\010\n\006filter\"y\n*Subscrib"
    "eRequestFilterAccountsFilterMemcmp\022\016\n\006of"
    "fset\030\001 \001(\004\022\017\n\005bytes\030\002 \001(\014H\000\022\020\n\006base58\030\003 "
    "\001(\tH\000\022\020\n\006base64\030\004 \001(\tH\000B\006\n\004data\"m\n,Subsc"
    "ribeRequestFilterAccountsFilterLamports\022"
    "\014\n\002eq\030\001 \001(\004H\000\022\014\n\002ne\030\002 \001(\004H\000\022\014\n\002lt\030\003 \001(\004H"
    "\000\022\014\n\002gt\030\004 \001(\004H\000B\005\n\003cmp\"\217\001\n\033SubscribeRequ"
    "estFilterSlots\022!\n\024filter_by_commitment\030\001"
    " \001(\010H\000\210\001\001\022\036\n\021interslot_updates\030\002 \001(\010H\001\210\001"
    "\001B\027\n\025_filter_by_commitmentB\024\n\022_interslot"
    "_updates\"\322\001\n\"SubscribeRequestFilterTrans"
    "actions\022\021\n\004vote\030\001 \001(\010H\000\210\001\001\022\023\n\006failed\030\002 \001"
    "(\010H\001\210\001\001\022\026\n\tsignature\030\005 \001(\tH\002\210\001\001\022\027\n\017accou"
    "nt_include\030\003 \003(\t\022\027\n\017account_exclude\030\004 \003("
    "\t\022\030\n\020account_required\030\006 \003(\tB\007\n\005_voteB\t\n\007"
    "_failedB\014\n\n_signature\"\331\001\n\034SubscribeReque"
    "stFilterBlocks\022\027\n\017account_include\030\001 \003(\t\022"
    "!\n\024include_transactions\030\002 \001(\010H\000\210\001\001\022\035\n\020in"
    "clude_accounts\030\003 \001(\010H\001\210\001\001\022\034\n\017include_ent"
    "ries\030\004 \001(\010H\002\210\001\001B\027\n\025_include_transactions"
    "B\023\n\021_include_accountsB\022\n\020_include_entrie"
    "s\"\"\n SubscribeRequestFilterBlocksMeta\"\035\n"
    "\033SubscribeRequestFilterEntry\"C\n!Subscrib"
    "eRequestAccountsDataSlice\022\016\n\006offset\030\001 \001("
    "\004\022\016\n\006length\030\002 \001(\004\"\"\n\024SubscribeRequestPin"
    "g\022\n\n\002id\030\001 \001(\005\"\265\004\n\017SubscribeUpdate\022\017\n\007fil"
    "ters\030\001 \003(\t\0221\n\007account\030\002 \001(\0132\036.geyser.Sub"
    "scribeUpdateAccountH\000\022+\n\004slot\030\003 \001(\0132\033.ge"
    "yser.SubscribeUpdateSlotH\000\0229\n\013transactio"
    "n\030\004 \001(\0132\".geyser.SubscribeUpdateTransact"
    "ionH\000\022F\n\022transaction_status\030\n \001(\0132(.geys"
    "er.SubscribeUpdateTransactionStatusH\000\022-\n"
    "\005block\030\005 \001(\0132\034.geyser.SubscribeUpdateBlo"
    "ckH\000\022+\n\004ping\030\006 \001(\0132\033.geyser.SubscribeUpd"
    "atePingH\000\022+\n\004pong\030\t \001(\0132\033.geyser.Subscri"
    "beUpdatePongH\000\0226\n\nblock_meta\030\007 \001(\0132 .gey"
    "ser.SubscribeUpdateBlockMetaH\000\022-\n\005entry\030"
    "\010 \001(\0132\034.geyser.SubscribeUpdateEntryH\000\022.\n"
    "\ncreated_at\030\013 \001(\0132\032.google.protobuf.Time"
    "stampB\016\n\014update_oneof\"o\n\026SubscribeUpdate"
    "Account\0223\n\007account\030\001 \001(\0132\".geyser.Subscr"
    "ibeUpdateAccountInfo\022\014\n\004slot\030\002 \001(\004\022\022\n\nis"
    "_startup\030\003 \001(\010\"\310\001\n\032SubscribeUpdateAccoun"
    "tInfo\022\016\n\006pubkey\030\001 \001(\014\022\020\n\010lamports\030\002 \001(\004\022"
    "\r\n\005owner\030\003 \001(\014\022\022\n\nexecutable\030\004 \001(\010\022\022\n\nre"
    "nt_epoch\030\005 \001(\004\022\014\n\004data\030\006 \001(\014\022\025\n\rwrite_ve"
    "rsion\030\007 \001(\004\022\032\n\rtxn_signature\030\010 \001(\014H\000\210\001\001B"
    "\020\n\016_txn_signature\"\217\001\n\023SubscribeUpdateSlo"
    "t\022\014\n\004slot\030\001 \001(\004\022\023\n\006parent\030\002 \001(\004H\000\210\001\001\022\"\n\006"
    "status\030\003 \001(\0162\022.geyser.SlotStatus\022\027\n\ndead"
    "_error\030\004 \001(\tH\001\210\001\001B\t\n\007_parentB\r\n\013_dead_er"
    "ror\"g\n\032SubscribeUpdateTransaction\022;\n\013tra"
    "nsaction\030\001 \001(\0132&.geyser.SubscribeUpdateT"
    "ransactionInfo\022\014\n\004slot\030\002 \001(\004\"\330\001\n\036Subscri"
    "beUpdateTransactionInfo\022\021\n\tsignature\030\001 \001"
    "(\014\022\017\n\007is_vote\030\002 \001(\010\022\?\n\013transaction\030\003 \001(\013"
    "2*.solana.storage.ConfirmedBlock.Transac"
    "tion\022B\n\004meta\030\004 \001(\01324.solana.storage.Conf"
    "irmedBlock.TransactionStatusMeta\022\r\n\005inde"
    "x\030\005 \001(\004\"\241\001\n SubscribeUpdateTransactionSt"
    "atus\022\014\n\004slot\030\001 \001(\004\022\021\n\tsignature\030\002 \001(\014\022\017\n"
    "\007is_vote\030\003 \001(\010\022\r\n\005index\030\004 \001(\004\022<\n\003err\030\005 \001"
    "(\0132/.solana.storage.ConfirmedBlock.Trans"
    "actionError\"\240\004\n\024SubscribeUpdateBlock\022\014\n\004"
    "slot\030\001 \001(\004\022\021\n\tblockhash\030\002 \001(\t\0227\n\007rewards"
    "\030\003 \001(\0132&.solana.storage.ConfirmedBlock.R"
    "ewards\022@\n\nblock_time\030\004 \001(\0132,.solana.stor"
    "age.ConfirmedBlock.UnixTimestamp\022@\n\014bloc"
    "k_height\030\005 \001(\0132*.solana.storage.Confirme"
    "dBlock.BlockHeight\022\023\n\013parent_slot\030\007 \001(\004\022"
    "\030\n\020parent_blockhash\030\010 \001(\t\022\"\n\032executed_tr"
    "ansaction_count\030\t \001(\004\022<\n\014transactions\030\006 "
    "\003(\0132&.geyser.SubscribeUpdateTransactionI"
    "nfo\022\035\n\025updated_account_count\030\n \001(\004\0224\n\010ac"
    "counts\030\013 \003(\0132\".geyser.SubscribeUpdateAcc"
    "ountInfo\022\025\n\rentries_count\030\014 \001(\004\022-\n\007entri"
    "es\030\r \003(\0132\034.geyser.SubscribeUpdateEntry\"\342"
    "\002\n\030SubscribeUpdateBlockMeta\022\014\n\004slot\030\001 \001("
    "\004\022\021\n\tblockhash\030\002 \001(\t\0227\n\007rewards\030\003 \001(\0132&."
    "solana.storage.ConfirmedBlock.Rewards\022@\n"
    "\nblock_time\030\004 \001(\0132,.solana.storage.Confi"
    "rmedBlock.UnixTimestamp\022@\n\014block_height\030"
    "\005 \001(\0132*.solana.storage.ConfirmedBlock.Bl"
    "ockHeight\022\023\n\013parent_slot\030\006 \001(\004\022\030\n\020parent"
    "_blockhash\030\007 \001(\t\022\"\n\032executed_transaction"
    "_count\030\010 \001(\004\022\025\n\rentries_count\030\t \001(\004\"\235\001\n\024"
    "SubscribeUpdateEntry\022\014\n\004slot\030\001 \001(\004\022\r\n\005in"
    "dex\030\002 \001(\004\022\022\n\nnum_hashes\030\003 \001(\004\022\014\n\004hash\030\004 "
    "\001(\014\022\"\n\032executed_transaction_count\030\005 \001(\004\022"
    "\"\n\032starting_transaction_index\030\006 \001(\004\"\025\n\023S"
    "ubscribeUpdatePing\"!\n\023SubscribeUpdatePon"
    "g\022\n\n\002id\030\001 \001(\005\"\034\n\032SubscribeReplayInfoRequ"
    "est\"O\n\033SubscribeReplayInfoResponse\022\034\n\017fi"
    "rst_available\030\001 \001(\004H\000\210\001\001B\022\n\020_first_avail"
    "able\"\034\n\013PingRequest\022\r\n\005count\030\001 \001(\005\"\035\n\014Po"
    "ngResponse\022\r\n\005count\030\001 \001(\005\"\\\n\031GetLatestBl"
    "ockhashRequest\0220\n\ncommitment\030\001 \001(\0162\027.gey"
    "ser.CommitmentLevelH\000\210\001\001B\r\n\013_commitment\""
    "^\n\032GetLatestBlockhashResponse\022\014\n\004slot\030\001 "
    "\001(\004\022\021\n\tblockhash\030\002 \001(\t\022\037\n\027last_valid_blo"
    "ck_height\030\003 \001(\004\"X\n\025GetBlockHeightRequest"
    "\0220\n\ncommitment\030\001 \001(\0162\027.geyser.Commitment"
    "LevelH\000\210\001\001B\r\n\013_commitment\".\n\026GetBlockHei"
    "ghtResponse\022\024\n\014block_height\030\001 \001(\004\"Q\n\016Get"
    "SlotRequest\0220\n\ncommitment\030\001 \001(\0162\027.geyser"
    ".CommitmentLevelH\000\210\001\001B\r\n\013_commitment\"\037\n\017"
    "GetSlotResponse\022\014\n\004slot\030\001 \001(\004\"\023\n\021GetVers"
    "ionRequest\"%\n\022GetVersionResponse\022\017\n\007vers"
    "ion\030\001 \001(\t\"m\n\027IsBlockhashValidRequest\022\021\n\t"
    "blockhash\030\001 \001(\t\0220\n\ncommitment\030\002 \001(\0162\027.ge"
    "yser.CommitmentLevelH\000\210\001\001B\r\n\013_commitment"
    "\"7\n\030IsBlockhashValidResponse\022\014\n\004slot\030\001 \001"
    "(\004\022\r\n\005valid\030\002 \001(\010*>\n\017CommitmentLevel\022\r\n\t"
    "PROCESSED\020\000\022\r\n\tCONFIRMED\020\001\022\r\n\tFINALIZED\020"
    "\002*\241\001\n\nSlotStatus\022\022\n\016SLOT_PROCESSED\020\000\022\022\n\016"
    "SLOT_CONFIRMED\020\001\022\022\n\016SLOT_FINALIZED\020\002\022\035\n\031"
    "SLOT_FIRST_SHRED_RECEIVED\020\003\022\022\n\016SLOT_COMP"
    "LETED\020\004\022\025\n\021SLOT_CREATED_BANK\020\005\022\r\n\tSLOT_D"
    "EAD\020\0062\365\004\n\006Geyser\022D\n\tSubscribe\022\030.geyser.S"
    "ubscribeRequest\032\027.geyser.SubscribeUpdate"
    "\"\000(\0010\001\022`\n\023SubscribeReplayInfo\022\".geyser.S"
    "ubscribeReplayInfoRequest\032#.geyser.Subsc"
    "ribeReplayInfoResponse\"\000\0223\n\004Ping\022\023.geyse"
    "r.PingRequest\032\024.geyser.PongResponse\"\000\022]\n"
    "\022GetLatestBlockhash\022!.geyser.GetLatestBl"
    "ockhashRequest\032\".geyser.GetLatestBlockha"
    "shResponse\"\000\022Q\n\016GetBlockHeight\022\035.geyser."
    "GetBlockHeightRequest\032\036.geyser.GetBlockH"
    "eightResponse\"\000\022<\n\007GetSlot\022\026.geyser.GetS"
    "lotRequest\032\027.geyser.GetSlotResponse\"\000\022W\n"
    "\020IsBlockhashValid\022\037.geyser.IsBlockhashVa"
    "lidRequest\032 .geyser.IsBlockhashValidResp"
    "onse\"\000\022E\n\nGetVersion\022\031.geyser.GetVersion"
    "Request\032\032.geyser.GetVersionResponse\"\000B;Z"
    "9github.com/rpcpool/yellowstone-grpc/exa"
    "mples/golang/protoP\001b\006proto3"
};
static const ::_pbi::DescriptorTable* PROTOBUF_NONNULL const
    descriptor_table_geyser_2eproto_deps[2] = {
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
        &::descriptor_table_solana_2dstorage_2eproto,
};
static ::absl::once_flag descriptor_table_geyser_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_geyser_2eproto = {
    false,
    false,
    7228,
    descriptor_table_protodef_geyser_2eproto,
    "geyser.proto",
    &descriptor_table_geyser_2eproto_once,
    descriptor_table_geyser_2eproto_deps,
    2,
    45,
    schemas,
    file_default_instances,
    TableStruct_geyser_2eproto::offsets,
    file_level_enum_descriptors_geyser_2eproto,
    file_level_service_descriptors_geyser_2eproto,
};
namespace geyser {
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL CommitmentLevel_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_geyser_2eproto);
  return file_level_enum_descriptors_geyser_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t CommitmentLevel_internal_data_[] = {
    196608u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL SlotStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_geyser_2eproto);
  return file_level_enum_descriptors_geyser_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t SlotStatus_internal_data_[] = {
    458752u, 0u, };
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
SubscribeRequest_AccountsEntry_DoNotUse::SubscribeRequest_AccountsEntry_DoNotUse()
    : SuperType(SubscribeRequest_AccountsEntry_DoNotUse_class_data_.base()) {}
SubscribeRequest_AccountsEntry_DoNotUse::SubscribeRequest_AccountsEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, SubscribeRequest_AccountsEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
SubscribeRequest_AccountsEntry_DoNotUse::SubscribeRequest_AccountsEntry_DoNotUse() : SuperType() {}
SubscribeRequest_AccountsEntry_DoNotUse::SubscribeRequest_AccountsEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL SubscribeRequest_AccountsEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SubscribeRequest_AccountsEntry_DoNotUse(arena);
}
constexpr auto SubscribeRequest_AccountsEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SubscribeRequest_AccountsEntry_DoNotUse),
                                            alignof(SubscribeRequest_AccountsEntry_DoNotUse));
}
constexpr auto SubscribeRequest_AccountsEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SubscribeRequest_AccountsEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SubscribeRequest_AccountsEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SubscribeRequest_AccountsEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SubscribeRequest_AccountsEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&SubscribeRequest_AccountsEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SubscribeRequest_AccountsEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &SubscribeRequest_AccountsEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_geyser_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SubscribeRequest_AccountsEntry_DoNotUse_class_data_ =
        SubscribeRequest_AccountsEntry_DoNotUse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SubscribeRequest_AccountsEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SubscribeRequest_AccountsEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SubscribeRequest_AccountsEntry_DoNotUse_class_data_.tc_table);
  return SubscribeRequest_AccountsEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 49, 2>
SubscribeRequest_AccountsEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SubscribeRequest_AccountsEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SubscribeRequest_AccountsEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::geyser::SubscribeRequest_AccountsEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .geyser.SubscribeRequestFilterAccounts value = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(SubscribeRequest_AccountsEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SubscribeRequest_AccountsEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(SubscribeRequest_AccountsEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .geyser.SubscribeRequestFilterAccounts value = 2;
    {PROTOBUF_FIELD_OFFSET(SubscribeRequest_AccountsEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::geyser::SubscribeRequestFilterAccounts>()},
  }},
  {{
    "\45\3\0\0\0\0\0\0"
    "geyser.SubscribeRequest.AccountsEntry"
    "key"
  }},
};
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
SubscribeRequest_SlotsEntry_DoNotUse::SubscribeRequest_SlotsEntry_DoNotUse()
    : SuperType(SubscribeRequest_SlotsEntry_DoNotUse_class_data_.base()) {}
SubscribeRequest_SlotsEntry_DoNotUse::SubscribeRequest_SlotsEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, SubscribeRequest_SlotsEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
SubscribeRequest_SlotsEntry_DoNotUse::SubscribeRequest_SlotsEntry_DoNotUse() : SuperType() {}
SubscribeRequest_SlotsEntry_DoNotUse::SubscribeRequest_SlotsEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL SubscribeRequest_SlotsEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SubscribeRequest_SlotsEntry_DoNotUse(arena);
}
constexpr auto SubscribeRequest_SlotsEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SubscribeRequest_SlotsEntry_DoNotUse),
                                            alignof(SubscribeRequest_SlotsEntry_DoNotUse));
}
constexpr auto SubscribeRequest_SlotsEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SubscribeRequest_SlotsEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SubscribeRequest_SlotsEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SubscribeRequest_SlotsEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SubscribeRequest_SlotsEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&SubscribeRequest_SlotsEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SubscribeRequest_SlotsEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &SubscribeRequest_SlotsEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_geyser_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SubscribeRequest_SlotsEntry_DoNotUse_class_data_ =
        SubscribeRequest_SlotsEntry_DoNotUse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SubscribeRequest_SlotsEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SubscribeRequest_SlotsEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SubscribeRequest_SlotsEntry_DoNotUse_class_data_.tc_table);
  return SubscribeRequest_SlotsEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 46, 2>
SubscribeRequest_SlotsEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SubscribeRequest_SlotsEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SubscribeRequest_SlotsEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::geyser::SubscribeRequest_SlotsEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .geyser.SubscribeRequestFilterSlots value = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(SubscribeRequest_SlotsEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SubscribeRequest_SlotsEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(SubscribeRequest_SlotsEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .geyser.SubscribeRequestFilterSlots value = 2;
    {PROTOBUF_FIELD_OFFSET(SubscribeRequest_SlotsEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::geyser::SubscribeRequestFilterSlots>()},
  }},
  {{
    "\42\3\0\0\0\0\0\0"
    "geyser.SubscribeRequest.SlotsEntry"
    "key"
  }},
};
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
SubscribeRequest_TransactionsEntry_DoNotUse::SubscribeRequest_TransactionsEntry_DoNotUse()
    : SuperType(SubscribeRequest_TransactionsEntry_DoNotUse_class_data_.base()) {}
SubscribeRequest_TransactionsEntry_DoNotUse::SubscribeRequest_TransactionsEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, SubscribeRequest_TransactionsEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
SubscribeRequest_TransactionsEntry_DoNotUse::SubscribeRequest_TransactionsEntry_DoNotUse() : SuperType() {}
SubscribeRequest_TransactionsEntry_DoNotUse::SubscribeRequest_TransactionsEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL SubscribeRequest_TransactionsEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SubscribeRequest_TransactionsEntry_DoNotUse(arena);
}
constexpr auto SubscribeRequest_TransactionsEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SubscribeRequest_TransactionsEntry_DoNotUse),
                                            alignof(SubscribeRequest_TransactionsEntry_DoNotUse));
}
constexpr auto SubscribeRequest_TransactionsEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SubscribeRequest_TransactionsEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SubscribeRequest_TransactionsEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SubscribeRequest_TransactionsEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SubscribeRequest_TransactionsEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&SubscribeRequest_TransactionsEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SubscribeRequest_TransactionsEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &SubscribeRequest_TransactionsEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_geyser_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SubscribeRequest_TransactionsEntry_DoNotUse_class_data_ =
        SubscribeRequest_TransactionsEntry_DoNotUse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SubscribeRequest_TransactionsEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SubscribeRequest_TransactionsEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SubscribeRequest_TransactionsEntry_DoNotUse_class_data_.tc_table);
  return SubscribeRequest_TransactionsEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 53, 2>
SubscribeRequest_TransactionsEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SubscribeRequest_TransactionsEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SubscribeRequest_TransactionsEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::geyser::SubscribeRequest_TransactionsEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .geyser.SubscribeRequestFilterTransactions value = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(SubscribeRequest_TransactionsEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SubscribeRequest_TransactionsEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(SubscribeRequest_TransactionsEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .geyser.SubscribeRequestFilterTransactions value = 2;
    {PROTOBUF_FIELD_OFFSET(SubscribeRequest_TransactionsEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::geyser::SubscribeRequestFilterTransactions>()},
  }},
  {{
    "\51\3\0\0\0\0\0\0"
    "geyser.SubscribeRequest.TransactionsEntry"
    "key"
  }},
};
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
SubscribeRequest_TransactionsStatusEntry_DoNotUse::SubscribeRequest_TransactionsStatusEntry_DoNotUse()
    : SuperType(SubscribeRequest_TransactionsStatusEntry_DoNotUse_class_data_.base()) {}
SubscribeRequest_TransactionsStatusEntry_DoNotUse::SubscribeRequest_TransactionsStatusEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, SubscribeRequest_TransactionsStatusEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
SubscribeRequest_TransactionsStatusEntry_DoNotUse::SubscribeRequest_TransactionsStatusEntry_DoNotUse() : SuperType() {}
SubscribeRequest_TransactionsStatusEntry_DoNotUse::SubscribeRequest_TransactionsStatusEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL SubscribeRequest_TransactionsStatusEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SubscribeRequest_TransactionsStatusEntry_DoNotUse(arena);
}
constexpr auto SubscribeRequest_TransactionsStatusEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SubscribeRequest_TransactionsStatusEntry_DoNotUse),
                                            alignof(SubscribeRequest_TransactionsStatusEntry_DoNotUse));
}
constexpr auto SubscribeRequest_TransactionsStatusEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SubscribeRequest_TransactionsStatusEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SubscribeRequest_TransactionsStatusEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SubscribeRequest_TransactionsStatusEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SubscribeRequest_TransactionsStatusEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&SubscribeRequest_TransactionsStatusEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SubscribeRequest_TransactionsStatusEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &SubscribeRequest_TransactionsStatusEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_geyser_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SubscribeRequest_TransactionsStatusEntry_DoNotUse_class_data_ =
        SubscribeRequest_TransactionsStatusEntry_DoNotUse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SubscribeRequest_TransactionsStatusEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SubscribeRequest_TransactionsStatusEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SubscribeRequest_TransactionsStatusEntry_DoNotUse_class_data_.tc_table);
  return SubscribeRequest_TransactionsStatusEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 59, 2>
SubscribeRequest_TransactionsStatusEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SubscribeRequest_TransactionsStatusEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SubscribeRequest_TransactionsStatusEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::geyser::SubscribeRequest_TransactionsStatusEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .geyser.SubscribeRequestFilterTransactions value = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(SubscribeRequest_TransactionsStatusEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SubscribeRequest_TransactionsStatusEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(SubscribeRequest_TransactionsStatusEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .geyser.SubscribeRequestFilterTransactions value = 2;
    {PROTOBUF_FIELD_OFFSET(SubscribeRequest_TransactionsStatusEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::geyser::SubscribeRequestFilterTransactions>()},
  }},
  {{
    "\57\3\0\0\0\0\0\0"
    "geyser.SubscribeRequest.TransactionsStatusEntry"
    "key"
  }},
};
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
SubscribeRequest_BlocksEntry_DoNotUse::SubscribeRequest_BlocksEntry_DoNotUse()
    : SuperType(SubscribeRequest_BlocksEntry_DoNotUse_class_data_.base()) {}
SubscribeRequest_BlocksEntry_DoNotUse::SubscribeRequest_BlocksEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, SubscribeRequest_BlocksEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
SubscribeRequest_BlocksEntry_DoNotUse::SubscribeRequest_BlocksEntry_DoNotUse() : SuperType() {}
SubscribeRequest_BlocksEntry_DoNotUse::SubscribeRequest_BlocksEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL SubscribeRequest_BlocksEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SubscribeRequest_BlocksEntry_DoNotUse(arena);
}
constexpr auto SubscribeRequest_BlocksEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SubscribeRequest_BlocksEntry_DoNotUse),
                                            alignof(SubscribeRequest_BlocksEntry_DoNotUse));
}
constexpr auto SubscribeRequest_BlocksEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SubscribeRequest_BlocksEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SubscribeRequest_BlocksEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SubscribeRequest_BlocksEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SubscribeRequest_BlocksEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&SubscribeRequest_BlocksEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SubscribeRequest_BlocksEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &SubscribeRequest_BlocksEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_geyser_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SubscribeRequest_BlocksEntry_DoNotUse_class_data_ =
        SubscribeRequest_BlocksEntry_DoNotUse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SubscribeRequest_BlocksEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SubscribeRequest_BlocksEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SubscribeRequest_BlocksEntry_DoNotUse_class_data_.tc_table);
  return SubscribeRequest_BlocksEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 47, 2>
SubscribeRequest_BlocksEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SubscribeRequest_BlocksEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SubscribeRequest_BlocksEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::geyser::SubscribeRequest_BlocksEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .geyser.SubscribeRequestFilterBlocks value = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(SubscribeRequest_BlocksEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SubscribeRequest_BlocksEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(SubscribeRequest_BlocksEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .geyser.SubscribeRequestFilterBlocks value = 2;
    {PROTOBUF_FIELD_OFFSET(SubscribeRequest_BlocksEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::geyser::SubscribeRequestFilterBlocks>()},
  }},
  {{
    "\43\3\0\0\0\0\0\0"
    "geyser.SubscribeRequest.BlocksEntry"
    "key"
  }},
};
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
SubscribeRequest_BlocksMetaEntry_DoNotUse::SubscribeRequest_BlocksMetaEntry_DoNotUse()
    : SuperType(SubscribeRequest_BlocksMetaEntry_DoNotUse_class_data_.base()) {}
SubscribeRequest_BlocksMetaEntry_DoNotUse::SubscribeRequest_BlocksMetaEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, SubscribeRequest_BlocksMetaEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
SubscribeRequest_BlocksMetaEntry_DoNotUse::SubscribeRequest_BlocksMetaEntry_DoNotUse() : SuperType() {}
SubscribeRequest_BlocksMetaEntry_DoNotUse::SubscribeRequest_BlocksMetaEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL SubscribeRequest_BlocksMetaEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SubscribeRequest_BlocksMetaEntry_DoNotUse(arena);
}
constexpr auto SubscribeRequest_BlocksMetaEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SubscribeRequest_BlocksMetaEntry_DoNotUse),
                                            alignof(SubscribeRequest_BlocksMetaEntry_DoNotUse));
}
constexpr auto SubscribeRequest_BlocksMetaEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SubscribeRequest_BlocksMetaEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SubscribeRequest_BlocksMetaEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SubscribeRequest_BlocksMetaEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SubscribeRequest_BlocksMetaEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&SubscribeRequest_BlocksMetaEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SubscribeRequest_BlocksMetaEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &SubscribeRequest_BlocksMetaEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_geyser_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SubscribeRequest_BlocksMetaEntry_DoNotUse_class_data_ =
        SubscribeRequest_BlocksMetaEntry_DoNotUse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SubscribeRequest_BlocksMetaEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SubscribeRequest_BlocksMetaEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SubscribeRequest_BlocksMetaEntry_DoNotUse_class_data_.tc_table);
  return SubscribeRequest_BlocksMetaEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 51, 2>
SubscribeRequest_BlocksMetaEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SubscribeRequest_BlocksMetaEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SubscribeRequest_BlocksMetaEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::geyser::SubscribeRequest_BlocksMetaEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .geyser.SubscribeRequestFilterBlocksMeta value = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(SubscribeRequest_BlocksMetaEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SubscribeRequest_BlocksMetaEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(SubscribeRequest_BlocksMetaEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .geyser.SubscribeRequestFilterBlocksMeta value = 2;
    {PROTOBUF_FIELD_OFFSET(SubscribeRequest_BlocksMetaEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::geyser::SubscribeRequestFilterBlocksMeta>()},
  }},
  {{
    "\47\3\0\0\0\0\0\0"
    "geyser.SubscribeRequest.BlocksMetaEntry"
    "key"
  }},
};
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
SubscribeRequest_EntryEntry_DoNotUse::SubscribeRequest_EntryEntry_DoNotUse()
    : SuperType(SubscribeRequest_EntryEntry_DoNotUse_class_data_.base()) {}
SubscribeRequest_EntryEntry_DoNotUse::SubscribeRequest_EntryEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, SubscribeRequest_EntryEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
SubscribeRequest_EntryEntry_DoNotUse::SubscribeRequest_EntryEntry_DoNotUse() : SuperType() {}
SubscribeRequest_EntryEntry_DoNotUse::SubscribeRequest_EntryEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL SubscribeRequest_EntryEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SubscribeRequest_EntryEntry_DoNotUse(arena);
}
constexpr auto SubscribeRequest_EntryEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SubscribeRequest_EntryEntry_DoNotUse),
                                            alignof(SubscribeRequest_EntryEntry_DoNotUse));
}
constexpr auto SubscribeRequest_EntryEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SubscribeRequest_EntryEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SubscribeRequest_EntryEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SubscribeRequest_EntryEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SubscribeRequest_EntryEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&SubscribeRequest_EntryEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SubscribeRequest_EntryEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &SubscribeRequest_EntryEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_geyser_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SubscribeRequest_EntryEntry_DoNotUse_class_data_ =
        SubscribeRequest_EntryEntry_DoNotUse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SubscribeRequest_EntryEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SubscribeRequest_EntryEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SubscribeRequest_EntryEntry_DoNotUse_class_data_.tc_table);
  return SubscribeRequest_EntryEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 46, 2>
SubscribeRequest_EntryEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SubscribeRequest_EntryEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SubscribeRequest_EntryEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::geyser::SubscribeRequest_EntryEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .geyser.SubscribeRequestFilterEntry value = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(SubscribeRequest_EntryEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SubscribeRequest_EntryEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(SubscribeRequest_EntryEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .geyser.SubscribeRequestFilterEntry value = 2;
    {PROTOBUF_FIELD_OFFSET(SubscribeRequest_EntryEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::geyser::SubscribeRequestFilterEntry>()},
  }},
  {{
    "\42\3\0\0\0\0\0\0"
    "geyser.SubscribeRequest.EntryEntry"
    "key"
  }},
};
// ===================================================================

class SubscribeRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SubscribeRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_._has_bits_);
};

SubscribeRequest::SubscribeRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SubscribeRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:geyser.SubscribeRequest)
}
PROTOBUF_NDEBUG_INLINE SubscribeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::geyser::SubscribeRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        accounts_{visibility, arena, from.accounts_},
        slots_{visibility, arena, from.slots_},
        transactions_{visibility, arena, from.transactions_},
        blocks_{visibility, arena, from.blocks_},
        blocks_meta_{visibility, arena, from.blocks_meta_},
        accounts_data_slice_{visibility, arena, from.accounts_data_slice_},
        entry_{visibility, arena, from.entry_},
        transactions_status_{visibility, arena, from.transactions_status_} {}

SubscribeRequest::SubscribeRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SubscribeRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SubscribeRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubscribeRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.ping_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.ping_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, from_slot_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, from_slot_),
           offsetof(Impl_, commitment_) -
               offsetof(Impl_, from_slot_) +
               sizeof(Impl_::commitment_));

  // @@protoc_insertion_point(copy_constructor:geyser.SubscribeRequest)
}
PROTOBUF_NDEBUG_INLINE SubscribeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        accounts_{visibility, arena},
        slots_{visibility, arena},
        transactions_{visibility, arena},
        blocks_{visibility, arena},
        blocks_meta_{visibility, arena},
        accounts_data_slice_{visibility, arena},
        entry_{visibility, arena},
        transactions_status_{visibility, arena} {}

inline void SubscribeRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, ping_),
           0,
           offsetof(Impl_, commitment_) -
               offsetof(Impl_, ping_) +
               sizeof(Impl_::commitment_));
}
SubscribeRequest::~SubscribeRequest() {
  // @@protoc_insertion_point(destructor:geyser.SubscribeRequest)
  SharedDtor(*this);
}
inline void SubscribeRequest::SharedDtor(MessageLite& self) {
  SubscribeRequest& this_ = static_cast<SubscribeRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.ping_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SubscribeRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SubscribeRequest(arena);
}
constexpr auto SubscribeRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_.accounts_) +
          decltype(SubscribeRequest::_impl_.accounts_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_.accounts_) +
          decltype(SubscribeRequest::_impl_.accounts_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_.slots_) +
          decltype(SubscribeRequest::_impl_.slots_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_.slots_) +
          decltype(SubscribeRequest::_impl_.slots_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_.transactions_) +
          decltype(SubscribeRequest::_impl_.transactions_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_.transactions_) +
          decltype(SubscribeRequest::_impl_.transactions_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_.transactions_status_) +
          decltype(SubscribeRequest::_impl_.transactions_status_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_.transactions_status_) +
          decltype(SubscribeRequest::_impl_.transactions_status_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_.blocks_) +
          decltype(SubscribeRequest::_impl_.blocks_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_.blocks_) +
          decltype(SubscribeRequest::_impl_.blocks_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_.blocks_meta_) +
          decltype(SubscribeRequest::_impl_.blocks_meta_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_.blocks_meta_) +
          decltype(SubscribeRequest::_impl_.blocks_meta_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_.entry_) +
          decltype(SubscribeRequest::_impl_.entry_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_.entry_) +
          decltype(SubscribeRequest::_impl_.entry_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_.accounts_data_slice_) +
          decltype(SubscribeRequest::_impl_.accounts_data_slice_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(SubscribeRequest), alignof(SubscribeRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SubscribeRequest::PlacementNew_,
                                 sizeof(SubscribeRequest),
                                 alignof(SubscribeRequest));
  }
}
constexpr auto SubscribeRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SubscribeRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SubscribeRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SubscribeRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SubscribeRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SubscribeRequest>(), &SubscribeRequest::ByteSizeLong,
              &SubscribeRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_._cached_size_),
          false,
      },
      &SubscribeRequest::kDescriptorMethods,
      &descriptor_table_geyser_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SubscribeRequest_class_data_ =
        SubscribeRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SubscribeRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SubscribeRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SubscribeRequest_class_data_.tc_table);
  return SubscribeRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 11, 16, 106, 2>
SubscribeRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_._has_bits_),
    0, // no _extensions_
    11, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294965248,  // skipmap
    offsetof(decltype(_table_), field_entries),
    11,  // num_field_entries
    16,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SubscribeRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::geyser::SubscribeRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .geyser.SubscribeRequestPing ping = 9;
    {::_pbi::TcParser::FastMtS1,
     {74, 0, 1, PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_.ping_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint64 from_slot = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SubscribeRequest, _impl_.from_slot_), 1>(),
     {88, 1, 0, PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_.from_slot_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional .geyser.CommitmentLevel commitment = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SubscribeRequest, _impl_.commitment_), 2>(),
     {48, 2, 0, PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_.commitment_)}},
    // repeated .geyser.SubscribeRequestAccountsDataSlice accounts_data_slice = 7;
    {::_pbi::TcParser::FastMtR1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_.accounts_data_slice_)}},
  }}, {{
    65535, 65535
  }}, {{
    // map<string, .geyser.SubscribeRequestFilterAccounts> accounts = 1;
    {PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_.accounts_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<string, .geyser.SubscribeRequestFilterSlots> slots = 2;
    {PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_.slots_), -1, 4,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<string, .geyser.SubscribeRequestFilterTransactions> transactions = 3;
    {PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_.transactions_), -1, 6,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<string, .geyser.SubscribeRequestFilterBlocks> blocks = 4;
    {PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_.blocks_), -1, 8,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<string, .geyser.SubscribeRequestFilterBlocksMeta> blocks_meta = 5;
    {PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_.blocks_meta_), -1, 10,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // optional .geyser.CommitmentLevel commitment = 6;
    {PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_.commitment_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // repeated .geyser.SubscribeRequestAccountsDataSlice accounts_data_slice = 7;
    {PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_.accounts_data_slice_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // map<string, .geyser.SubscribeRequestFilterEntry> entry = 8;
    {PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_.entry_), -1, 12,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // optional .geyser.SubscribeRequestPing ping = 9;
    {PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_.ping_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // map<string, .geyser.SubscribeRequestFilterTransactions> transactions_status = 10;
    {PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_.transactions_status_), -1, 14,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // optional uint64 from_slot = 11;
    {PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_.from_slot_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::geyser::SubscribeRequestAccountsDataSlice>()},
      {::_pbi::TcParser::GetTable<::geyser::SubscribeRequestPing>()},
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       9, 11,
                                       0)},
      {::_pbi::TcParser::GetTable<::geyser::SubscribeRequestFilterAccounts>()},
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       9, 11,
                                       0)},
      {::_pbi::TcParser::GetTable<::geyser::SubscribeRequestFilterSlots>()},
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       9, 11,
                                       0)},
      {::_pbi::TcParser::GetTable<::geyser::SubscribeRequestFilterTransactions>()},
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       9, 11,
                                       0)},
      {::_pbi::TcParser::GetTable<::geyser::SubscribeRequestFilterBlocks>()},
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       9, 11,
                                       0)},
      {::_pbi::TcParser::GetTable<::geyser::SubscribeRequestFilterBlocksMeta>()},
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       9, 11,
                                       0)},
      {::_pbi::TcParser::GetTable<::geyser::SubscribeRequestFilterEntry>()},
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       9, 11,
                                       0)},
      {::_pbi::TcParser::GetTable<::geyser::SubscribeRequestFilterTransactions>()},
  }},
  {{
    "\27\10\5\14\6\13\0\0\5\0\23\0\0\0\0\0"
    "geyser.SubscribeRequest"
    "accounts"
    "slots"
    "transactions"
    "blocks"
    "blocks_meta"
    "entry"
    "transactions_status"
  }},
};
PROTOBUF_NOINLINE void SubscribeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:geyser.SubscribeRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.accounts_.Clear();
  _impl_.slots_.Clear();
  _impl_.transactions_.Clear();
  _impl_.blocks_.Clear();
  _impl_.blocks_meta_.Clear();
  _impl_.accounts_data_slice_.Clear();
  _impl_.entry_.Clear();
  _impl_.transactions_status_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.ping_ != nullptr);
    _impl_.ping_->Clear();
  }
  if ((cached_has_bits & 0x00000006u) != 0) {
    ::memset(&_impl_.from_slot_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.commitment_) -
        reinterpret_cast<char*>(&_impl_.from_slot_)) + sizeof(_impl_.commitment_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SubscribeRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SubscribeRequest& this_ = static_cast<const SubscribeRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SubscribeRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SubscribeRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:geyser.SubscribeRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // map<string, .geyser.SubscribeRequestFilterAccounts> accounts = 1;
  if (!this_._internal_accounts().empty()) {
    using MapType = ::google::protobuf::Map<std::string, ::geyser::SubscribeRequestFilterAccounts>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, ::geyser::SubscribeRequestFilterAccounts,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_MESSAGE>;
    const auto& field = this_._internal_accounts();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            1, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "geyser.SubscribeRequest.accounts");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            1, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "geyser.SubscribeRequest.accounts");
      }
    }
  }

  // map<string, .geyser.SubscribeRequestFilterSlots> slots = 2;
  if (!this_._internal_slots().empty()) {
    using MapType = ::google::protobuf::Map<std::string, ::geyser::SubscribeRequestFilterSlots>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, ::geyser::SubscribeRequestFilterSlots,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_MESSAGE>;
    const auto& field = this_._internal_slots();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            2, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "geyser.SubscribeRequest.slots");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            2, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "geyser.SubscribeRequest.slots");
      }
    }
  }

  // map<string, .geyser.SubscribeRequestFilterTransactions> transactions = 3;
  if (!this_._internal_transactions().empty()) {
    using MapType = ::google::protobuf::Map<std::string, ::geyser::SubscribeRequestFilterTransactions>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, ::geyser::SubscribeRequestFilterTransactions,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_MESSAGE>;
    const auto& field = this_._internal_transactions();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            3, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "geyser.SubscribeRequest.transactions");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            3, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "geyser.SubscribeRequest.transactions");
      }
    }
  }

  // map<string, .geyser.SubscribeRequestFilterBlocks> blocks = 4;
  if (!this_._internal_blocks().empty()) {
    using MapType = ::google::protobuf::Map<std::string, ::geyser::SubscribeRequestFilterBlocks>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, ::geyser::SubscribeRequestFilterBlocks,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_MESSAGE>;
    const auto& field = this_._internal_blocks();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            4, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "geyser.SubscribeRequest.blocks");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            4, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "geyser.SubscribeRequest.blocks");
      }
    }
  }

  // map<string, .geyser.SubscribeRequestFilterBlocksMeta> blocks_meta = 5;
  if (!this_._internal_blocks_meta().empty()) {
    using MapType = ::google::protobuf::Map<std::string, ::geyser::SubscribeRequestFilterBlocksMeta>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, ::geyser::SubscribeRequestFilterBlocksMeta,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_MESSAGE>;
    const auto& field = this_._internal_blocks_meta();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            5, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "geyser.SubscribeRequest.blocks_meta");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            5, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "geyser.SubscribeRequest.blocks_meta");
      }
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional .geyser.CommitmentLevel commitment = 6;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        6, this_._internal_commitment(), target);
  }

  // repeated .geyser.SubscribeRequestAccountsDataSlice accounts_data_slice = 7;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_accounts_data_slice_size());
       i < n; i++) {
    const auto& repfield = this_._internal_accounts_data_slice().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            7, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // map<string, .geyser.SubscribeRequestFilterEntry> entry = 8;
  if (!this_._internal_entry().empty()) {
    using MapType = ::google::protobuf::Map<std::string, ::geyser::SubscribeRequestFilterEntry>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, ::geyser::SubscribeRequestFilterEntry,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_MESSAGE>;
    const auto& field = this_._internal_entry();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            8, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "geyser.SubscribeRequest.entry");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            8, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "geyser.SubscribeRequest.entry");
      }
    }
  }

  // optional .geyser.SubscribeRequestPing ping = 9;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        9, *this_._impl_.ping_, this_._impl_.ping_->GetCachedSize(), target,
        stream);
  }

  // map<string, .geyser.SubscribeRequestFilterTransactions> transactions_status = 10;
  if (!this_._internal_transactions_status().empty()) {
    using MapType = ::google::protobuf::Map<std::string, ::geyser::SubscribeRequestFilterTransactions>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, ::geyser::SubscribeRequestFilterTransactions,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_MESSAGE>;
    const auto& field = this_._internal_transactions_status();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            10, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "geyser.SubscribeRequest.transactions_status");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            10, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "geyser.SubscribeRequest.transactions_status");
      }
    }
  }

  // optional uint64 from_slot = 11;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        11, this_._internal_from_slot(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:geyser.SubscribeRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SubscribeRequest::ByteSizeLong(const MessageLite& base) {
  const SubscribeRequest& this_ = static_cast<const SubscribeRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SubscribeRequest::ByteSizeLong() const {
  const SubscribeRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:geyser.SubscribeRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // map<string, .geyser.SubscribeRequestFilterAccounts> accounts = 1;
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_accounts_size());
      for (const auto& entry : this_._internal_accounts()) {
        total_size += _pbi::MapEntryFuncs<std::string, ::geyser::SubscribeRequestFilterAccounts,
                                       _pbi::WireFormatLite::TYPE_STRING,
                                       _pbi::WireFormatLite::TYPE_MESSAGE>::ByteSizeLong(entry.first, entry.second);
      }
    }
    // map<string, .geyser.SubscribeRequestFilterSlots> slots = 2;
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_slots_size());
      for (const auto& entry : this_._internal_slots()) {
        total_size += _pbi::MapEntryFuncs<std::string, ::geyser::SubscribeRequestFilterSlots,
                                       _pbi::WireFormatLite::TYPE_STRING,
                                       _pbi::WireFormatLite::TYPE_MESSAGE>::ByteSizeLong(entry.first, entry.second);
      }
    }
    // map<string, .geyser.SubscribeRequestFilterTransactions> transactions = 3;
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_transactions_size());
      for (const auto& entry : this_._internal_transactions()) {
        total_size += _pbi::MapEntryFuncs<std::string, ::geyser::SubscribeRequestFilterTransactions,
                                       _pbi::WireFormatLite::TYPE_STRING,
                                       _pbi::WireFormatLite::TYPE_MESSAGE>::ByteSizeLong(entry.first, entry.second);
      }
    }
    // map<string, .geyser.SubscribeRequestFilterBlocks> blocks = 4;
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_blocks_size());
      for (const auto& entry : this_._internal_blocks()) {
        total_size += _pbi::MapEntryFuncs<std::string, ::geyser::SubscribeRequestFilterBlocks,
                                       _pbi::WireFormatLite::TYPE_STRING,
                                       _pbi::WireFormatLite::TYPE_MESSAGE>::ByteSizeLong(entry.first, entry.second);
      }
    }
    // map<string, .geyser.SubscribeRequestFilterBlocksMeta> blocks_meta = 5;
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_blocks_meta_size());
      for (const auto& entry : this_._internal_blocks_meta()) {
        total_size += _pbi::MapEntryFuncs<std::string, ::geyser::SubscribeRequestFilterBlocksMeta,
                                       _pbi::WireFormatLite::TYPE_STRING,
                                       _pbi::WireFormatLite::TYPE_MESSAGE>::ByteSizeLong(entry.first, entry.second);
      }
    }
    // repeated .geyser.SubscribeRequestAccountsDataSlice accounts_data_slice = 7;
    {
      total_size += 1UL * this_._internal_accounts_data_slice_size();
      for (const auto& msg : this_._internal_accounts_data_slice()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // map<string, .geyser.SubscribeRequestFilterEntry> entry = 8;
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_entry_size());
      for (const auto& entry : this_._internal_entry()) {
        total_size += _pbi::MapEntryFuncs<std::string, ::geyser::SubscribeRequestFilterEntry,
                                       _pbi::WireFormatLite::TYPE_STRING,
                                       _pbi::WireFormatLite::TYPE_MESSAGE>::ByteSizeLong(entry.first, entry.second);
      }
    }
    // map<string, .geyser.SubscribeRequestFilterTransactions> transactions_status = 10;
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_transactions_status_size());
      for (const auto& entry : this_._internal_transactions_status()) {
        total_size += _pbi::MapEntryFuncs<std::string, ::geyser::SubscribeRequestFilterTransactions,
                                       _pbi::WireFormatLite::TYPE_STRING,
                                       _pbi::WireFormatLite::TYPE_MESSAGE>::ByteSizeLong(entry.first, entry.second);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // optional .geyser.SubscribeRequestPing ping = 9;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.ping_);
    }
    // optional uint64 from_slot = 11;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_from_slot());
    }
    // optional .geyser.CommitmentLevel commitment = 6;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this_._internal_commitment());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SubscribeRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SubscribeRequest*>(&to_msg);
  auto& from = static_cast<const SubscribeRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:geyser.SubscribeRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.accounts_.MergeFrom(from._impl_.accounts_);
  _this->_impl_.slots_.MergeFrom(from._impl_.slots_);
  _this->_impl_.transactions_.MergeFrom(from._impl_.transactions_);
  _this->_impl_.blocks_.MergeFrom(from._impl_.blocks_);
  _this->_impl_.blocks_meta_.MergeFrom(from._impl_.blocks_meta_);
  _this->_internal_mutable_accounts_data_slice()->MergeFrom(
      from._internal_accounts_data_slice());
  _this->_impl_.entry_.MergeFrom(from._impl_.entry_);
  _this->_impl_.transactions_status_.MergeFrom(from._impl_.transactions_status_);
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.ping_ != nullptr);
      if (_this->_impl_.ping_ == nullptr) {
        _this->_impl_.ping_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.ping_);
      } else {
        _this->_impl_.ping_->MergeFrom(*from._impl_.ping_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.from_slot_ = from._impl_.from_slot_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.commitment_ = from._impl_.commitment_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SubscribeRequest::CopyFrom(const SubscribeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:geyser.SubscribeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SubscribeRequest::InternalSwap(SubscribeRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.accounts_.InternalSwap(&other->_impl_.accounts_);
  _impl_.slots_.InternalSwap(&other->_impl_.slots_);
  _impl_.transactions_.InternalSwap(&other->_impl_.transactions_);
  _impl_.blocks_.InternalSwap(&other->_impl_.blocks_);
  _impl_.blocks_meta_.InternalSwap(&other->_impl_.blocks_meta_);
  _impl_.accounts_data_slice_.InternalSwap(&other->_impl_.accounts_data_slice_);
  _impl_.entry_.InternalSwap(&other->_impl_.entry_);
  _impl_.transactions_status_.InternalSwap(&other->_impl_.transactions_status_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_.commitment_)
      + sizeof(SubscribeRequest::_impl_.commitment_)
      - PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_.ping_)>(
          reinterpret_cast<char*>(&_impl_.ping_),
          reinterpret_cast<char*>(&other->_impl_.ping_));
}

::google::protobuf::Metadata SubscribeRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubscribeRequestFilterAccounts::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SubscribeRequestFilterAccounts>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SubscribeRequestFilterAccounts, _impl_._has_bits_);
};

SubscribeRequestFilterAccounts::SubscribeRequestFilterAccounts(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SubscribeRequestFilterAccounts_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:geyser.SubscribeRequestFilterAccounts)
}
PROTOBUF_NDEBUG_INLINE SubscribeRequestFilterAccounts::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::geyser::SubscribeRequestFilterAccounts& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        account_{visibility, arena, from.account_},
        owner_{visibility, arena, from.owner_},
        filters_{visibility, arena, from.filters_} {}

SubscribeRequestFilterAccounts::SubscribeRequestFilterAccounts(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SubscribeRequestFilterAccounts& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SubscribeRequestFilterAccounts_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubscribeRequestFilterAccounts* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.nonempty_txn_signature_ = from._impl_.nonempty_txn_signature_;

  // @@protoc_insertion_point(copy_constructor:geyser.SubscribeRequestFilterAccounts)
}
PROTOBUF_NDEBUG_INLINE SubscribeRequestFilterAccounts::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        account_{visibility, arena},
        owner_{visibility, arena},
        filters_{visibility, arena} {}

inline void SubscribeRequestFilterAccounts::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.nonempty_txn_signature_ = {};
}
SubscribeRequestFilterAccounts::~SubscribeRequestFilterAccounts() {
  // @@protoc_insertion_point(destructor:geyser.SubscribeRequestFilterAccounts)
  SharedDtor(*this);
}
inline void SubscribeRequestFilterAccounts::SharedDtor(MessageLite& self) {
  SubscribeRequestFilterAccounts& this_ = static_cast<SubscribeRequestFilterAccounts&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SubscribeRequestFilterAccounts::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SubscribeRequestFilterAccounts(arena);
}
constexpr auto SubscribeRequestFilterAccounts::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SubscribeRequestFilterAccounts, _impl_.account_) +
          decltype(SubscribeRequestFilterAccounts::_impl_.account_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(SubscribeRequestFilterAccounts, _impl_.owner_) +
          decltype(SubscribeRequestFilterAccounts::_impl_.owner_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(SubscribeRequestFilterAccounts, _impl_.filters_) +
          decltype(SubscribeRequestFilterAccounts::_impl_.filters_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(SubscribeRequestFilterAccounts), alignof(SubscribeRequestFilterAccounts), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SubscribeRequestFilterAccounts::PlacementNew_,
                                 sizeof(SubscribeRequestFilterAccounts),
                                 alignof(SubscribeRequestFilterAccounts));
  }
}
constexpr auto SubscribeRequestFilterAccounts::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SubscribeRequestFilterAccounts_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SubscribeRequestFilterAccounts::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SubscribeRequestFilterAccounts>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SubscribeRequestFilterAccounts::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SubscribeRequestFilterAccounts>(), &SubscribeRequestFilterAccounts::ByteSizeLong,
              &SubscribeRequestFilterAccounts::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SubscribeRequestFilterAccounts, _impl_._cached_size_),
          false,
      },
      &SubscribeRequestFilterAccounts::kDescriptorMethods,
      &descriptor_table_geyser_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SubscribeRequestFilterAccounts_class_data_ =
        SubscribeRequestFilterAccounts::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SubscribeRequestFilterAccounts::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SubscribeRequestFilterAccounts_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SubscribeRequestFilterAccounts_class_data_.tc_table);
  return SubscribeRequestFilterAccounts_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 58, 2>
SubscribeRequestFilterAccounts::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SubscribeRequestFilterAccounts, _impl_._has_bits_),
    0, // no _extensions_
    5, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967265,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SubscribeRequestFilterAccounts_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::geyser::SubscribeRequestFilterAccounts>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .geyser.SubscribeRequestFilterAccountsFilter filters = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(SubscribeRequestFilterAccounts, _impl_.filters_)}},
    // optional bool nonempty_txn_signature = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SubscribeRequestFilterAccounts, _impl_.nonempty_txn_signature_), 0>(),
     {40, 0, 0, PROTOBUF_FIELD_OFFSET(SubscribeRequestFilterAccounts, _impl_.nonempty_txn_signature_)}},
    // repeated string account = 2;
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SubscribeRequestFilterAccounts, _impl_.account_)}},
    // repeated string owner = 3;
    {::_pbi::TcParser::FastUR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(SubscribeRequestFilterAccounts, _impl_.owner_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string account = 2;
    {PROTOBUF_FIELD_OFFSET(SubscribeRequestFilterAccounts, _impl_.account_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string owner = 3;
    {PROTOBUF_FIELD_OFFSET(SubscribeRequestFilterAccounts, _impl_.owner_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated .geyser.SubscribeRequestFilterAccountsFilter filters = 4;
    {PROTOBUF_FIELD_OFFSET(SubscribeRequestFilterAccounts, _impl_.filters_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional bool nonempty_txn_signature = 5;
    {PROTOBUF_FIELD_OFFSET(SubscribeRequestFilterAccounts, _impl_.nonempty_txn_signature_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::geyser::SubscribeRequestFilterAccountsFilter>()},
  }},
  {{
    "\45\7\5\0\0\0\0\0"
    "geyser.SubscribeRequestFilterAccounts"
    "account"
    "owner"
  }},
};
PROTOBUF_NOINLINE void SubscribeRequestFilterAccounts::Clear() {
// @@protoc_insertion_point(message_clear_start:geyser.SubscribeRequestFilterAccounts)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.account_.Clear();
  _impl_.owner_.Clear();
  _impl_.filters_.Clear();
  _impl_.nonempty_txn_signature_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SubscribeRequestFilterAccounts::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SubscribeRequestFilterAccounts& this_ = static_cast<const SubscribeRequestFilterAccounts&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SubscribeRequestFilterAccounts::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SubscribeRequestFilterAccounts& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:geyser.SubscribeRequestFilterAccounts)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated string account = 2;
  for (int i = 0, n = this_._internal_account_size(); i < n; ++i) {
    const auto& s = this_._internal_account().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "geyser.SubscribeRequestFilterAccounts.account");
    target = stream->WriteString(2, s, target);
  }

  // repeated string owner = 3;
  for (int i = 0, n = this_._internal_owner_size(); i < n; ++i) {
    const auto& s = this_._internal_owner().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "geyser.SubscribeRequestFilterAccounts.owner");
    target = stream->WriteString(3, s, target);
  }

  // repeated .geyser.SubscribeRequestFilterAccountsFilter filters = 4;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_filters_size());
       i < n; i++) {
    const auto& repfield = this_._internal_filters().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            4, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional bool nonempty_txn_signature = 5;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        5, this_._internal_nonempty_txn_signature(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:geyser.SubscribeRequestFilterAccounts)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SubscribeRequestFilterAccounts::ByteSizeLong(const MessageLite& base) {
  const SubscribeRequestFilterAccounts& this_ = static_cast<const SubscribeRequestFilterAccounts&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SubscribeRequestFilterAccounts::ByteSizeLong() const {
  const SubscribeRequestFilterAccounts& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:geyser.SubscribeRequestFilterAccounts)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated string account = 2;
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_account().size());
      for (int i = 0, n = this_._internal_account().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_account().Get(i));
      }
    }
    // repeated string owner = 3;
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_owner().size());
      for (int i = 0, n = this_._internal_owner().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_owner().Get(i));
      }
    }
    // repeated .geyser.SubscribeRequestFilterAccountsFilter filters = 4;
    {
      total_size += 1UL * this_._internal_filters_size();
      for (const auto& msg : this_._internal_filters()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  total_size += static_cast<bool>(0x00000001u & cached_has_bits) * 2;
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SubscribeRequestFilterAccounts::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SubscribeRequestFilterAccounts*>(&to_msg);
  auto& from = static_cast<const SubscribeRequestFilterAccounts&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:geyser.SubscribeRequestFilterAccounts)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_account()->MergeFrom(from._internal_account());
  _this->_internal_mutable_owner()->MergeFrom(from._internal_owner());
  _this->_internal_mutable_filters()->MergeFrom(
      from._internal_filters());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _this->_impl_.nonempty_txn_signature_ = from._impl_.nonempty_txn_signature_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SubscribeRequestFilterAccounts::CopyFrom(const SubscribeRequestFilterAccounts& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:geyser.SubscribeRequestFilterAccounts)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SubscribeRequestFilterAccounts::InternalSwap(SubscribeRequestFilterAccounts* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.account_.InternalSwap(&other->_impl_.account_);
  _impl_.owner_.InternalSwap(&other->_impl_.owner_);
  _impl_.filters_.InternalSwap(&other->_impl_.filters_);
  swap(_impl_.nonempty_txn_signature_, other->_impl_.nonempty_txn_signature_);
}

::google::protobuf::Metadata SubscribeRequestFilterAccounts::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubscribeRequestFilterAccountsFilter::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::geyser::SubscribeRequestFilterAccountsFilter, _impl_._oneof_case_);
};

void SubscribeRequestFilterAccountsFilter::set_allocated_memcmp(::geyser::SubscribeRequestFilterAccountsFilterMemcmp* PROTOBUF_NULLABLE memcmp) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_filter();
  if (memcmp) {
    ::google::protobuf::Arena* submessage_arena = memcmp->GetArena();
    if (message_arena != submessage_arena) {
      memcmp = ::google::protobuf::internal::GetOwnedMessage(message_arena, memcmp, submessage_arena);
    }
    set_has_memcmp();
    _impl_.filter_.memcmp_ = memcmp;
  }
  // @@protoc_insertion_point(field_set_allocated:geyser.SubscribeRequestFilterAccountsFilter.memcmp)
}
void SubscribeRequestFilterAccountsFilter::set_allocated_lamports(::geyser::SubscribeRequestFilterAccountsFilterLamports* PROTOBUF_NULLABLE lamports) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_filter();
  if (lamports) {
    ::google::protobuf::Arena* submessage_arena = lamports->GetArena();
    if (message_arena != submessage_arena) {
      lamports = ::google::protobuf::internal::GetOwnedMessage(message_arena, lamports, submessage_arena);
    }
    set_has_lamports();
    _impl_.filter_.lamports_ = lamports;
  }
  // @@protoc_insertion_point(field_set_allocated:geyser.SubscribeRequestFilterAccountsFilter.lamports)
}
SubscribeRequestFilterAccountsFilter::SubscribeRequestFilterAccountsFilter(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SubscribeRequestFilterAccountsFilter_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:geyser.SubscribeRequestFilterAccountsFilter)
}
PROTOBUF_NDEBUG_INLINE SubscribeRequestFilterAccountsFilter::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::geyser::SubscribeRequestFilterAccountsFilter& from_msg)
      : filter_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

SubscribeRequestFilterAccountsFilter::SubscribeRequestFilterAccountsFilter(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SubscribeRequestFilterAccountsFilter& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SubscribeRequestFilterAccountsFilter_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubscribeRequestFilterAccountsFilter* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (filter_case()) {
    case FILTER_NOT_SET:
      break;
      case kMemcmp:
        _impl_.filter_.memcmp_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.filter_.memcmp_);
        break;
      case kDatasize:
        _impl_.filter_.datasize_ = from._impl_.filter_.datasize_;
        break;
      case kTokenAccountState:
        _impl_.filter_.token_account_state_ = from._impl_.filter_.token_account_state_;
        break;
      case kLamports:
        _impl_.filter_.lamports_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.filter_.lamports_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:geyser.SubscribeRequestFilterAccountsFilter)
}
PROTOBUF_NDEBUG_INLINE SubscribeRequestFilterAccountsFilter::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : filter_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void SubscribeRequestFilterAccountsFilter::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SubscribeRequestFilterAccountsFilter::~SubscribeRequestFilterAccountsFilter() {
  // @@protoc_insertion_point(destructor:geyser.SubscribeRequestFilterAccountsFilter)
  SharedDtor(*this);
}
inline void SubscribeRequestFilterAccountsFilter::SharedDtor(MessageLite& self) {
  SubscribeRequestFilterAccountsFilter& this_ = static_cast<SubscribeRequestFilterAccountsFilter&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_filter()) {
    this_.clear_filter();
  }
  this_._impl_.~Impl_();
}

void SubscribeRequestFilterAccountsFilter::clear_filter() {
// @@protoc_insertion_point(one_of_clear_start:geyser.SubscribeRequestFilterAccountsFilter)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (filter_case()) {
    case kMemcmp: {
      if (GetArena() == nullptr) {
        delete _impl_.filter_.memcmp_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.filter_.memcmp_);
      }
      break;
    }
    case kDatasize: {
      // No need to clear
      break;
    }
    case kTokenAccountState: {
      // No need to clear
      break;
    }
    case kLamports: {
      if (GetArena() == nullptr) {
        delete _impl_.filter_.lamports_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.filter_.lamports_);
      }
      break;
    }
    case FILTER_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = FILTER_NOT_SET;
}


inline void* PROTOBUF_NONNULL SubscribeRequestFilterAccountsFilter::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SubscribeRequestFilterAccountsFilter(arena);
}
constexpr auto SubscribeRequestFilterAccountsFilter::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SubscribeRequestFilterAccountsFilter),
                                            alignof(SubscribeRequestFilterAccountsFilter));
}
constexpr auto SubscribeRequestFilterAccountsFilter::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SubscribeRequestFilterAccountsFilter_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SubscribeRequestFilterAccountsFilter::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SubscribeRequestFilterAccountsFilter>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SubscribeRequestFilterAccountsFilter::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SubscribeRequestFilterAccountsFilter>(), &SubscribeRequestFilterAccountsFilter::ByteSizeLong,
              &SubscribeRequestFilterAccountsFilter::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SubscribeRequestFilterAccountsFilter, _impl_._cached_size_),
          false,
      },
      &SubscribeRequestFilterAccountsFilter::kDescriptorMethods,
      &descriptor_table_geyser_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SubscribeRequestFilterAccountsFilter_class_data_ =
        SubscribeRequestFilterAccountsFilter::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SubscribeRequestFilterAccountsFilter::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SubscribeRequestFilterAccountsFilter_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SubscribeRequestFilterAccountsFilter_class_data_.tc_table);
  return SubscribeRequestFilterAccountsFilter_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 4, 2, 0, 2>
SubscribeRequestFilterAccountsFilter::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SubscribeRequestFilterAccountsFilter_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::geyser::SubscribeRequestFilterAccountsFilter>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .geyser.SubscribeRequestFilterAccountsFilterMemcmp memcmp = 1;
    {PROTOBUF_FIELD_OFFSET(SubscribeRequestFilterAccountsFilter, _impl_.filter_.memcmp_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint64 datasize = 2;
    {PROTOBUF_FIELD_OFFSET(SubscribeRequestFilterAccountsFilter, _impl_.filter_.datasize_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUInt64)},
    // bool token_account_state = 3;
    {PROTOBUF_FIELD_OFFSET(SubscribeRequestFilterAccountsFilter, _impl_.filter_.token_account_state_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kBool)},
    // .geyser.SubscribeRequestFilterAccountsFilterLamports lamports = 4;
    {PROTOBUF_FIELD_OFFSET(SubscribeRequestFilterAccountsFilter, _impl_.filter_.lamports_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::geyser::SubscribeRequestFilterAccountsFilterMemcmp>()},
      {::_pbi::TcParser::GetTable<::geyser::SubscribeRequestFilterAccountsFilterLamports>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void SubscribeRequestFilterAccountsFilter::Clear() {
// @@protoc_insertion_point(message_clear_start:geyser.SubscribeRequestFilterAccountsFilter)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_filter();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SubscribeRequestFilterAccountsFilter::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SubscribeRequestFilterAccountsFilter& this_ = static_cast<const SubscribeRequestFilterAccountsFilter&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SubscribeRequestFilterAccountsFilter::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SubscribeRequestFilterAccountsFilter& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:geyser.SubscribeRequestFilterAccountsFilter)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (this_.filter_case()) {
    case kMemcmp: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, *this_._impl_.filter_.memcmp_, this_._impl_.filter_.memcmp_->GetCachedSize(), target,
          stream);
      break;
    }
    case kDatasize: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          2, this_._internal_datasize(), target);
      break;
    }
    case kTokenAccountState: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          3, this_._internal_token_account_state(), target);
      break;
    }
    case kLamports: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          4, *this_._impl_.filter_.lamports_, this_._impl_.filter_.lamports_->GetCachedSize(), target,
          stream);
      break;
    }
    default:
      break;
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:geyser.SubscribeRequestFilterAccountsFilter)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SubscribeRequestFilterAccountsFilter::ByteSizeLong(const MessageLite& base) {
  const SubscribeRequestFilterAccountsFilter& this_ = static_cast<const SubscribeRequestFilterAccountsFilter&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SubscribeRequestFilterAccountsFilter::ByteSizeLong() const {
  const SubscribeRequestFilterAccountsFilter& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:geyser.SubscribeRequestFilterAccountsFilter)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  switch (this_.filter_case()) {
    // .geyser.SubscribeRequestFilterAccountsFilterMemcmp memcmp = 1;
    case kMemcmp: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.filter_.memcmp_);
      break;
    }
    // uint64 datasize = 2;
    case kDatasize: {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_datasize());
      break;
    }
    // bool token_account_state = 3;
    case kTokenAccountState: {
      total_size += 2;
      break;
    }
    // .geyser.SubscribeRequestFilterAccountsFilterLamports lamports = 4;
    case kLamports: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.filter_.lamports_);
      break;
    }
    case FILTER_NOT_SET: {
      break;
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SubscribeRequestFilterAccountsFilter::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SubscribeRequestFilterAccountsFilter*>(&to_msg);
  auto& from = static_cast<const SubscribeRequestFilterAccountsFilter&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:geyser.SubscribeRequestFilterAccountsFilter)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_filter();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kMemcmp: {
        if (oneof_needs_init) {
          _this->_impl_.filter_.memcmp_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.filter_.memcmp_);
        } else {
          _this->_impl_.filter_.memcmp_->MergeFrom(*from._impl_.filter_.memcmp_);
        }
        break;
      }
      case kDatasize: {
        _this->_impl_.filter_.datasize_ = from._impl_.filter_.datasize_;
        break;
      }
      case kTokenAccountState: {
        _this->_impl_.filter_.token_account_state_ = from._impl_.filter_.token_account_state_;
        break;
      }
      case kLamports: {
        if (oneof_needs_init) {
          _this->_impl_.filter_.lamports_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.filter_.lamports_);
        } else {
          _this->_impl_.filter_.lamports_->MergeFrom(*from._impl_.filter_.lamports_);
        }
        break;
      }
      case FILTER_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SubscribeRequestFilterAccountsFilter::CopyFrom(const SubscribeRequestFilterAccountsFilter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:geyser.SubscribeRequestFilterAccountsFilter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SubscribeRequestFilterAccountsFilter::InternalSwap(SubscribeRequestFilterAccountsFilter* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.filter_, other->_impl_.filter_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata SubscribeRequestFilterAccountsFilter::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubscribeRequestFilterAccountsFilterMemcmp::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SubscribeRequestFilterAccountsFilterMemcmp>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SubscribeRequestFilterAccountsFilterMemcmp, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::geyser::SubscribeRequestFilterAccountsFilterMemcmp, _impl_._oneof_case_);
};

SubscribeRequestFilterAccountsFilterMemcmp::SubscribeRequestFilterAccountsFilterMemcmp(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SubscribeRequestFilterAccountsFilterMemcmp_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:geyser.SubscribeRequestFilterAccountsFilterMemcmp)
}
PROTOBUF_NDEBUG_INLINE SubscribeRequestFilterAccountsFilterMemcmp::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::geyser::SubscribeRequestFilterAccountsFilterMemcmp& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        data_{},
        _oneof_case_{from._oneof_case_[0]} {}

SubscribeRequestFilterAccountsFilterMemcmp::SubscribeRequestFilterAccountsFilterMemcmp(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SubscribeRequestFilterAccountsFilterMemcmp& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SubscribeRequestFilterAccountsFilterMemcmp_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubscribeRequestFilterAccountsFilterMemcmp* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.offset_ = from._impl_.offset_;
  switch (data_case()) {
    case DATA_NOT_SET:
      break;
      case kBytes:
        new (&_impl_.data_.bytes_) decltype(_impl_.data_.bytes_){arena, from._impl_.data_.bytes_};
        break;
      case kBase58:
        new (&_impl_.data_.base58_) decltype(_impl_.data_.base58_){arena, from._impl_.data_.base58_};
        break;
      case kBase64:
        new (&_impl_.data_.base64_) decltype(_impl_.data_.base64_){arena, from._impl_.data_.base64_};
        break;
  }

  // @@protoc_insertion_point(copy_constructor:geyser.SubscribeRequestFilterAccountsFilterMemcmp)
}
PROTOBUF_NDEBUG_INLINE SubscribeRequestFilterAccountsFilterMemcmp::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        data_{},
        _oneof_case_{} {}

inline void SubscribeRequestFilterAccountsFilterMemcmp::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.offset_ = {};
}
SubscribeRequestFilterAccountsFilterMemcmp::~SubscribeRequestFilterAccountsFilterMemcmp() {
  // @@protoc_insertion_point(destructor:geyser.SubscribeRequestFilterAccountsFilterMemcmp)
  SharedDtor(*this);
}
inline void SubscribeRequestFilterAccountsFilterMemcmp::SharedDtor(MessageLite& self) {
  SubscribeRequestFilterAccountsFilterMemcmp& this_ = static_cast<SubscribeRequestFilterAccountsFilterMemcmp&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_data()) {
    this_.clear_data();
  }
  this_._impl_.~Impl_();
}

void SubscribeRequestFilterAccountsFilterMemcmp::clear_data() {
// @@protoc_insertion_point(one_of_clear_start:geyser.SubscribeRequestFilterAccountsFilterMemcmp)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (data_case()) {
    case kBytes: {
      _impl_.data_.bytes_.Destroy();
      break;
    }
    case kBase58: {
      _impl_.data_.base58_.Destroy();
      break;
    }
    case kBase64: {
      _impl_.data_.base64_.Destroy();
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = DATA_NOT_SET;
}


inline void* PROTOBUF_NONNULL SubscribeRequestFilterAccountsFilterMemcmp::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SubscribeRequestFilterAccountsFilterMemcmp(arena);
}
constexpr auto SubscribeRequestFilterAccountsFilterMemcmp::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SubscribeRequestFilterAccountsFilterMemcmp),
                                            alignof(SubscribeRequestFilterAccountsFilterMemcmp));
}
constexpr auto SubscribeRequestFilterAccountsFilterMemcmp::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SubscribeRequestFilterAccountsFilterMemcmp_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SubscribeRequestFilterAccountsFilterMemcmp::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SubscribeRequestFilterAccountsFilterMemcmp>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SubscribeRequestFilterAccountsFilterMemcmp::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SubscribeRequestFilterAccountsFilterMemcmp>(), &SubscribeRequestFilterAccountsFilterMemcmp::ByteSizeLong,
              &SubscribeRequestFilterAccountsFilterMemcmp::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SubscribeRequestFilterAccountsFilterMemcmp, _impl_._cached_size_),
          false,
      },
      &SubscribeRequestFilterAccountsFilterMemcmp::kDescriptorMethods,
      &descriptor_table_geyser_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SubscribeRequestFilterAccountsFilterMemcmp_class_data_ =
        SubscribeRequestFilterAccountsFilterMemcmp::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SubscribeRequestFilterAccountsFilterMemcmp::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SubscribeRequestFilterAccountsFilterMemcmp_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SubscribeRequestFilterAccountsFilterMemcmp_class_data_.tc_table);
  return SubscribeRequestFilterAccountsFilterMemcmp_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 4, 0, 70, 2>
SubscribeRequestFilterAccountsFilterMemcmp::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SubscribeRequestFilterAccountsFilterMemcmp, _impl_._has_bits_),
    0, // no _extensions_
    4, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    SubscribeRequestFilterAccountsFilterMemcmp_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::geyser::SubscribeRequestFilterAccountsFilterMemcmp>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 offset = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SubscribeRequestFilterAccountsFilterMemcmp, _impl_.offset_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(SubscribeRequestFilterAccountsFilterMemcmp, _impl_.offset_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 offset = 1;
    {PROTOBUF_FIELD_OFFSET(SubscribeRequestFilterAccountsFilterMemcmp, _impl_.offset_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // bytes bytes = 2;
    {PROTOBUF_FIELD_OFFSET(SubscribeRequestFilterAccountsFilterMemcmp, _impl_.data_.bytes_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kBytes | ::_fl::kRepAString)},
    // string base58 = 3;
    {PROTOBUF_FIELD_OFFSET(SubscribeRequestFilterAccountsFilterMemcmp, _impl_.data_.base58_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string base64 = 4;
    {PROTOBUF_FIELD_OFFSET(SubscribeRequestFilterAccountsFilterMemcmp, _impl_.data_.base64_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\61\0\0\6\6\0\0\0"
    "geyser.SubscribeRequestFilterAccountsFilterMemcmp"
    "base58"
    "base64"
  }},
};
PROTOBUF_NOINLINE void SubscribeRequestFilterAccountsFilterMemcmp::Clear() {
// @@protoc_insertion_point(message_clear_start:geyser.SubscribeRequestFilterAccountsFilterMemcmp)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.offset_ = ::uint64_t{0u};
  clear_data();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SubscribeRequestFilterAccountsFilterMemcmp::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SubscribeRequestFilterAccountsFilterMemcmp& this_ = static_cast<const SubscribeRequestFilterAccountsFilterMemcmp&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SubscribeRequestFilterAccountsFilterMemcmp::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SubscribeRequestFilterAccountsFilterMemcmp& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:geyser.SubscribeRequestFilterAccountsFilterMemcmp)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 offset = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_offset() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          1, this_._internal_offset(), target);
    }
  }

  switch (this_.data_case()) {
    case kBytes: {
      const ::std::string& _s = this_._internal_bytes();
      target = stream->WriteBytesMaybeAliased(2, _s, target);
      break;
    }
    case kBase58: {
      const ::std::string& _s = this_._internal_base58();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "geyser.SubscribeRequestFilterAccountsFilterMemcmp.base58");
      target = stream->WriteStringMaybeAliased(3, _s, target);
      break;
    }
    case kBase64: {
      const ::std::string& _s = this_._internal_base64();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "geyser.SubscribeRequestFilterAccountsFilterMemcmp.base64");
      target = stream->WriteStringMaybeAliased(4, _s, target);
      break;
    }
    default:
      break;
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:geyser.SubscribeRequestFilterAccountsFilterMemcmp)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SubscribeRequestFilterAccountsFilterMemcmp::ByteSizeLong(const MessageLite& base) {
  const SubscribeRequestFilterAccountsFilterMemcmp& this_ = static_cast<const SubscribeRequestFilterAccountsFilterMemcmp&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SubscribeRequestFilterAccountsFilterMemcmp::ByteSizeLong() const {
  const SubscribeRequestFilterAccountsFilterMemcmp& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:geyser.SubscribeRequestFilterAccountsFilterMemcmp)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // uint64 offset = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_offset() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_offset());
      }
    }
  }
  switch (this_.data_case()) {
    // bytes bytes = 2;
    case kBytes: {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this_._internal_bytes());
      break;
    }
    // string base58 = 3;
    case kBase58: {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_base58());
      break;
    }
    // string base64 = 4;
    case kBase64: {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_base64());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SubscribeRequestFilterAccountsFilterMemcmp::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SubscribeRequestFilterAccountsFilterMemcmp*>(&to_msg);
  auto& from = static_cast<const SubscribeRequestFilterAccountsFilterMemcmp&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:geyser.SubscribeRequestFilterAccountsFilterMemcmp)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (from._internal_offset() != 0) {
      _this->_impl_.offset_ = from._impl_.offset_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_data();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kBytes: {
        if (oneof_needs_init) {
          _this->_impl_.data_.bytes_.InitDefault();
        }
        _this->_impl_.data_.bytes_.Set(from._internal_bytes(), arena);
        break;
      }
      case kBase58: {
        if (oneof_needs_init) {
          _this->_impl_.data_.base58_.InitDefault();
        }
        _this->_impl_.data_.base58_.Set(from._internal_base58(), arena);
        break;
      }
      case kBase64: {
        if (oneof_needs_init) {
          _this->_impl_.data_.base64_.InitDefault();
        }
        _this->_impl_.data_.base64_.Set(from._internal_base64(), arena);
        break;
      }
      case DATA_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SubscribeRequestFilterAccountsFilterMemcmp::CopyFrom(const SubscribeRequestFilterAccountsFilterMemcmp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:geyser.SubscribeRequestFilterAccountsFilterMemcmp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SubscribeRequestFilterAccountsFilterMemcmp::InternalSwap(SubscribeRequestFilterAccountsFilterMemcmp* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.offset_, other->_impl_.offset_);
  swap(_impl_.data_, other->_impl_.data_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata SubscribeRequestFilterAccountsFilterMemcmp::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubscribeRequestFilterAccountsFilterLamports::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::geyser::SubscribeRequestFilterAccountsFilterLamports, _impl_._oneof_case_);
};

SubscribeRequestFilterAccountsFilterLamports::SubscribeRequestFilterAccountsFilterLamports(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SubscribeRequestFilterAccountsFilterLamports_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:geyser.SubscribeRequestFilterAccountsFilterLamports)
}
SubscribeRequestFilterAccountsFilterLamports::SubscribeRequestFilterAccountsFilterLamports(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SubscribeRequestFilterAccountsFilterLamports& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SubscribeRequestFilterAccountsFilterLamports_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE SubscribeRequestFilterAccountsFilterLamports::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : cmp_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void SubscribeRequestFilterAccountsFilterLamports::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SubscribeRequestFilterAccountsFilterLamports::~SubscribeRequestFilterAccountsFilterLamports() {
  // @@protoc_insertion_point(destructor:geyser.SubscribeRequestFilterAccountsFilterLamports)
  SharedDtor(*this);
}
inline void SubscribeRequestFilterAccountsFilterLamports::SharedDtor(MessageLite& self) {
  SubscribeRequestFilterAccountsFilterLamports& this_ = static_cast<SubscribeRequestFilterAccountsFilterLamports&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_cmp()) {
    this_.clear_cmp();
  }
  this_._impl_.~Impl_();
}

void SubscribeRequestFilterAccountsFilterLamports::clear_cmp() {
// @@protoc_insertion_point(one_of_clear_start:geyser.SubscribeRequestFilterAccountsFilterLamports)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (cmp_case()) {
    case kEq: {
      // No need to clear
      break;
    }
    case kNe: {
      // No need to clear
      break;
    }
    case kLt: {
      // No need to clear
      break;
    }
    case kGt: {
      // No need to clear
      break;
    }
    case CMP_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = CMP_NOT_SET;
}


inline void* PROTOBUF_NONNULL SubscribeRequestFilterAccountsFilterLamports::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SubscribeRequestFilterAccountsFilterLamports(arena);
}
constexpr auto SubscribeRequestFilterAccountsFilterLamports::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SubscribeRequestFilterAccountsFilterLamports),
                                            alignof(SubscribeRequestFilterAccountsFilterLamports));
}
constexpr auto SubscribeRequestFilterAccountsFilterLamports::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SubscribeRequestFilterAccountsFilterLamports_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SubscribeRequestFilterAccountsFilterLamports::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SubscribeRequestFilterAccountsFilterLamports>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SubscribeRequestFilterAccountsFilterLamports::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SubscribeRequestFilterAccountsFilterLamports>(), &SubscribeRequestFilterAccountsFilterLamports::ByteSizeLong,
              &SubscribeRequestFilterAccountsFilterLamports::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SubscribeRequestFilterAccountsFilterLamports, _impl_._cached_size_),
          false,
      },
      &SubscribeRequestFilterAccountsFilterLamports::kDescriptorMethods,
      &descriptor_table_geyser_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SubscribeRequestFilterAccountsFilterLamports_class_data_ =
        SubscribeRequestFilterAccountsFilterLamports::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SubscribeRequestFilterAccountsFilterLamports::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SubscribeRequestFilterAccountsFilterLamports_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SubscribeRequestFilterAccountsFilterLamports_class_data_.tc_table);
  return SubscribeRequestFilterAccountsFilterLamports_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 4, 0, 0, 2>
SubscribeRequestFilterAccountsFilterLamports::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    SubscribeRequestFilterAccountsFilterLamports_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::geyser::SubscribeRequestFilterAccountsFilterLamports>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 eq = 1;
    {PROTOBUF_FIELD_OFFSET(SubscribeRequestFilterAccountsFilterLamports, _impl_.cmp_.eq_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUInt64)},
    // uint64 ne = 2;
    {PROTOBUF_FIELD_OFFSET(SubscribeRequestFilterAccountsFilterLamports, _impl_.cmp_.ne_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUInt64)},
    // uint64 lt = 3;
    {PROTOBUF_FIELD_OFFSET(SubscribeRequestFilterAccountsFilterLamports, _impl_.cmp_.lt_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUInt64)},
    // uint64 gt = 4;
    {PROTOBUF_FIELD_OFFSET(SubscribeRequestFilterAccountsFilterLamports, _impl_.cmp_.gt_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void SubscribeRequestFilterAccountsFilterLamports::Clear() {
// @@protoc_insertion_point(message_clear_start:geyser.SubscribeRequestFilterAccountsFilterLamports)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_cmp();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SubscribeRequestFilterAccountsFilterLamports::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SubscribeRequestFilterAccountsFilterLamports& this_ = static_cast<const SubscribeRequestFilterAccountsFilterLamports&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SubscribeRequestFilterAccountsFilterLamports::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SubscribeRequestFilterAccountsFilterLamports& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:geyser.SubscribeRequestFilterAccountsFilterLamports)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (this_.cmp_case()) {
    case kEq: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          1, this_._internal_eq(), target);
      break;
    }
    case kNe: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          2, this_._internal_ne(), target);
      break;
    }
    case kLt: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          3, this_._internal_lt(), target);
      break;
    }
    case kGt: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          4, this_._internal_gt(), target);
      break;
    }
    default:
      break;
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:geyser.SubscribeRequestFilterAccountsFilterLamports)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SubscribeRequestFilterAccountsFilterLamports::ByteSizeLong(const MessageLite& base) {
  const SubscribeRequestFilterAccountsFilterLamports& this_ = static_cast<const SubscribeRequestFilterAccountsFilterLamports&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SubscribeRequestFilterAccountsFilterLamports::ByteSizeLong() const {
  const SubscribeRequestFilterAccountsFilterLamports& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:geyser.SubscribeRequestFilterAccountsFilterLamports)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  switch (this_.cmp_case()) {
    // uint64 eq = 1;
    case kEq: {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_eq());
      break;
    }
    // uint64 ne = 2;
    case kNe: {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_ne());
      break;
    }
    // uint64 lt = 3;
    case kLt: {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_lt());
      break;
    }
    // uint64 gt = 4;
    case kGt: {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_gt());
      break;
    }
    case CMP_NOT_SET: {
      break;
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SubscribeRequestFilterAccountsFilterLamports::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SubscribeRequestFilterAccountsFilterLamports*>(&to_msg);
  auto& from = static_cast<const SubscribeRequestFilterAccountsFilterLamports&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:geyser.SubscribeRequestFilterAccountsFilterLamports)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_cmp();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kEq: {
        _this->_impl_.cmp_.eq_ = from._impl_.cmp_.eq_;
        break;
      }
      case kNe: {
        _this->_impl_.cmp_.ne_ = from._impl_.cmp_.ne_;
        break;
      }
      case kLt: {
        _this->_impl_.cmp_.lt_ = from._impl_.cmp_.lt_;
        break;
      }
      case kGt: {
        _this->_impl_.cmp_.gt_ = from._impl_.cmp_.gt_;
        break;
      }
      case CMP_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SubscribeRequestFilterAccountsFilterLamports::CopyFrom(const SubscribeRequestFilterAccountsFilterLamports& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:geyser.SubscribeRequestFilterAccountsFilterLamports)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SubscribeRequestFilterAccountsFilterLamports::InternalSwap(SubscribeRequestFilterAccountsFilterLamports* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.cmp_, other->_impl_.cmp_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata SubscribeRequestFilterAccountsFilterLamports::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubscribeRequestFilterSlots::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SubscribeRequestFilterSlots>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SubscribeRequestFilterSlots, _impl_._has_bits_);
};

SubscribeRequestFilterSlots::SubscribeRequestFilterSlots(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SubscribeRequestFilterSlots_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:geyser.SubscribeRequestFilterSlots)
}
SubscribeRequestFilterSlots::SubscribeRequestFilterSlots(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SubscribeRequestFilterSlots& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SubscribeRequestFilterSlots_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE SubscribeRequestFilterSlots::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void SubscribeRequestFilterSlots::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, filter_by_commitment_),
           0,
           offsetof(Impl_, interslot_updates_) -
               offsetof(Impl_, filter_by_commitment_) +
               sizeof(Impl_::interslot_updates_));
}
SubscribeRequestFilterSlots::~SubscribeRequestFilterSlots() {
  // @@protoc_insertion_point(destructor:geyser.SubscribeRequestFilterSlots)
  SharedDtor(*this);
}
inline void SubscribeRequestFilterSlots::SharedDtor(MessageLite& self) {
  SubscribeRequestFilterSlots& this_ = static_cast<SubscribeRequestFilterSlots&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SubscribeRequestFilterSlots::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SubscribeRequestFilterSlots(arena);
}
constexpr auto SubscribeRequestFilterSlots::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SubscribeRequestFilterSlots),
                                            alignof(SubscribeRequestFilterSlots));
}
constexpr auto SubscribeRequestFilterSlots::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SubscribeRequestFilterSlots_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SubscribeRequestFilterSlots::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SubscribeRequestFilterSlots>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SubscribeRequestFilterSlots::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SubscribeRequestFilterSlots>(), &SubscribeRequestFilterSlots::ByteSizeLong,
              &SubscribeRequestFilterSlots::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SubscribeRequestFilterSlots, _impl_._cached_size_),
          false,
      },
      &SubscribeRequestFilterSlots::kDescriptorMethods,
      &descriptor_table_geyser_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SubscribeRequestFilterSlots_class_data_ =
        SubscribeRequestFilterSlots::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SubscribeRequestFilterSlots::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SubscribeRequestFilterSlots_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SubscribeRequestFilterSlots_class_data_.tc_table);
  return SubscribeRequestFilterSlots_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
SubscribeRequestFilterSlots::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SubscribeRequestFilterSlots, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    SubscribeRequestFilterSlots_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::geyser::SubscribeRequestFilterSlots>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional bool interslot_updates = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SubscribeRequestFilterSlots, _impl_.interslot_updates_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(SubscribeRequestFilterSlots, _impl_.interslot_updates_)}},
    // optional bool filter_by_commitment = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SubscribeRequestFilterSlots, _impl_.filter_by_commitment_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(SubscribeRequestFilterSlots, _impl_.filter_by_commitment_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bool filter_by_commitment = 1;
    {PROTOBUF_FIELD_OFFSET(SubscribeRequestFilterSlots, _impl_.filter_by_commitment_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool interslot_updates = 2;
    {PROTOBUF_FIELD_OFFSET(SubscribeRequestFilterSlots, _impl_.interslot_updates_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void SubscribeRequestFilterSlots::Clear() {
// @@protoc_insertion_point(message_clear_start:geyser.SubscribeRequestFilterSlots)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.filter_by_commitment_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.interslot_updates_) -
      reinterpret_cast<char*>(&_impl_.filter_by_commitment_)) + sizeof(_impl_.interslot_updates_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SubscribeRequestFilterSlots::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SubscribeRequestFilterSlots& this_ = static_cast<const SubscribeRequestFilterSlots&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SubscribeRequestFilterSlots::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SubscribeRequestFilterSlots& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:geyser.SubscribeRequestFilterSlots)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional bool filter_by_commitment = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this_._internal_filter_by_commitment(), target);
  }

  // optional bool interslot_updates = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this_._internal_interslot_updates(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:geyser.SubscribeRequestFilterSlots)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SubscribeRequestFilterSlots::ByteSizeLong(const MessageLite& base) {
  const SubscribeRequestFilterSlots& this_ = static_cast<const SubscribeRequestFilterSlots&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SubscribeRequestFilterSlots::ByteSizeLong() const {
  const SubscribeRequestFilterSlots& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:geyser.SubscribeRequestFilterSlots)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  total_size += ::absl::popcount(0x00000003u & cached_has_bits) * 2;
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SubscribeRequestFilterSlots::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SubscribeRequestFilterSlots*>(&to_msg);
  auto& from = static_cast<const SubscribeRequestFilterSlots&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:geyser.SubscribeRequestFilterSlots)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.filter_by_commitment_ = from._impl_.filter_by_commitment_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.interslot_updates_ = from._impl_.interslot_updates_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SubscribeRequestFilterSlots::CopyFrom(const SubscribeRequestFilterSlots& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:geyser.SubscribeRequestFilterSlots)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SubscribeRequestFilterSlots::InternalSwap(SubscribeRequestFilterSlots* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SubscribeRequestFilterSlots, _impl_.interslot_updates_)
      + sizeof(SubscribeRequestFilterSlots::_impl_.interslot_updates_)
      - PROTOBUF_FIELD_OFFSET(SubscribeRequestFilterSlots, _impl_.filter_by_commitment_)>(
          reinterpret_cast<char*>(&_impl_.filter_by_commitment_),
          reinterpret_cast<char*>(&other->_impl_.filter_by_commitment_));
}

::google::protobuf::Metadata SubscribeRequestFilterSlots::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubscribeRequestFilterTransactions::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SubscribeRequestFilterTransactions>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SubscribeRequestFilterTransactions, _impl_._has_bits_);
};

SubscribeRequestFilterTransactions::SubscribeRequestFilterTransactions(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SubscribeRequestFilterTransactions_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:geyser.SubscribeRequestFilterTransactions)
}
PROTOBUF_NDEBUG_INLINE SubscribeRequestFilterTransactions::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::geyser::SubscribeRequestFilterTransactions& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        account_include_{visibility, arena, from.account_include_},
        account_exclude_{visibility, arena, from.account_exclude_},
        account_required_{visibility, arena, from.account_required_},
        signature_(arena, from.signature_) {}

SubscribeRequestFilterTransactions::SubscribeRequestFilterTransactions(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SubscribeRequestFilterTransactions& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SubscribeRequestFilterTransactions_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubscribeRequestFilterTransactions* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, vote_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, vote_),
           offsetof(Impl_, failed_) -
               offsetof(Impl_, vote_) +
               sizeof(Impl_::failed_));

  // @@protoc_insertion_point(copy_constructor:geyser.SubscribeRequestFilterTransactions)
}
PROTOBUF_NDEBUG_INLINE SubscribeRequestFilterTransactions::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        account_include_{visibility, arena},
        account_exclude_{visibility, arena},
        account_required_{visibility, arena},
        signature_(arena) {}

inline void SubscribeRequestFilterTransactions::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, vote_),
           0,
           offsetof(Impl_, failed_) -
               offsetof(Impl_, vote_) +
               sizeof(Impl_::failed_));
}
SubscribeRequestFilterTransactions::~SubscribeRequestFilterTransactions() {
  // @@protoc_insertion_point(destructor:geyser.SubscribeRequestFilterTransactions)
  SharedDtor(*this);
}
inline void SubscribeRequestFilterTransactions::SharedDtor(MessageLite& self) {
  SubscribeRequestFilterTransactions& this_ = static_cast<SubscribeRequestFilterTransactions&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.signature_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SubscribeRequestFilterTransactions::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SubscribeRequestFilterTransactions(arena);
}
constexpr auto SubscribeRequestFilterTransactions::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SubscribeRequestFilterTransactions, _impl_.account_include_) +
          decltype(SubscribeRequestFilterTransactions::_impl_.account_include_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(SubscribeRequestFilterTransactions, _impl_.account_exclude_) +
          decltype(SubscribeRequestFilterTransactions::_impl_.account_exclude_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(SubscribeRequestFilterTransactions, _impl_.account_required_) +
          decltype(SubscribeRequestFilterTransactions::_impl_.account_required_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(SubscribeRequestFilterTransactions), alignof(SubscribeRequestFilterTransactions), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SubscribeRequestFilterTransactions::PlacementNew_,
                                 sizeof(SubscribeRequestFilterTransactions),
                                 alignof(SubscribeRequestFilterTransactions));
  }
}
constexpr auto SubscribeRequestFilterTransactions::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SubscribeRequestFilterTransactions_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SubscribeRequestFilterTransactions::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SubscribeRequestFilterTransactions>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SubscribeRequestFilterTransactions::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SubscribeRequestFilterTransactions>(), &SubscribeRequestFilterTransactions::ByteSizeLong,
              &SubscribeRequestFilterTransactions::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SubscribeRequestFilterTransactions, _impl_._cached_size_),
          false,
      },
      &SubscribeRequestFilterTransactions::kDescriptorMethods,
      &descriptor_table_geyser_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SubscribeRequestFilterTransactions_class_data_ =
        SubscribeRequestFilterTransactions::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SubscribeRequestFilterTransactions::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SubscribeRequestFilterTransactions_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SubscribeRequestFilterTransactions_class_data_.tc_table);
  return SubscribeRequestFilterTransactions_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 105, 2>
SubscribeRequestFilterTransactions::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SubscribeRequestFilterTransactions, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    SubscribeRequestFilterTransactions_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::geyser::SubscribeRequestFilterTransactions>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional bool vote = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SubscribeRequestFilterTransactions, _impl_.vote_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(SubscribeRequestFilterTransactions, _impl_.vote_)}},
    // optional bool failed = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SubscribeRequestFilterTransactions, _impl_.failed_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(SubscribeRequestFilterTransactions, _impl_.failed_)}},
    // repeated string account_include = 3;
    {::_pbi::TcParser::FastUR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(SubscribeRequestFilterTransactions, _impl_.account_include_)}},
    // repeated string account_exclude = 4;
    {::_pbi::TcParser::FastUR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(SubscribeRequestFilterTransactions, _impl_.account_exclude_)}},
    // optional string signature = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 0, 0, PROTOBUF_FIELD_OFFSET(SubscribeRequestFilterTransactions, _impl_.signature_)}},
    // repeated string account_required = 6;
    {::_pbi::TcParser::FastUR1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(SubscribeRequestFilterTransactions, _impl_.account_required_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bool vote = 1;
    {PROTOBUF_FIELD_OFFSET(SubscribeRequestFilterTransactions, _impl_.vote_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool failed = 2;
    {PROTOBUF_FIELD_OFFSET(SubscribeRequestFilterTransactions, _impl_.failed_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // repeated string account_include = 3;
    {PROTOBUF_FIELD_OFFSET(SubscribeRequestFilterTransactions, _impl_.account_include_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string account_exclude = 4;
    {PROTOBUF_FIELD_OFFSET(SubscribeRequestFilterTransactions, _impl_.account_exclude_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // optional string signature = 5;
    {PROTOBUF_FIELD_OFFSET(SubscribeRequestFilterTransactions, _impl_.signature_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string account_required = 6;
    {PROTOBUF_FIELD_OFFSET(SubscribeRequestFilterTransactions, _impl_.account_required_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\51\0\0\17\17\11\20\0"
    "geyser.SubscribeRequestFilterTransactions"
    "account_include"
    "account_exclude"
    "signature"
    "account_required"
  }},
};
PROTOBUF_NOINLINE void SubscribeRequestFilterTransactions::Clear() {
// @@protoc_insertion_point(message_clear_start:geyser.SubscribeRequestFilterTransactions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.account_include_.Clear();
  _impl_.account_exclude_.Clear();
  _impl_.account_required_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.signature_.ClearNonDefaultToEmpty();
  }
  ::memset(&_impl_.vote_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.failed_) -
      reinterpret_cast<char*>(&_impl_.vote_)) + sizeof(_impl_.failed_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SubscribeRequestFilterTransactions::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SubscribeRequestFilterTransactions& this_ = static_cast<const SubscribeRequestFilterTransactions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SubscribeRequestFilterTransactions::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SubscribeRequestFilterTransactions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:geyser.SubscribeRequestFilterTransactions)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional bool vote = 1;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this_._internal_vote(), target);
  }

  // optional bool failed = 2;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this_._internal_failed(), target);
  }

  // repeated string account_include = 3;
  for (int i = 0, n = this_._internal_account_include_size(); i < n; ++i) {
    const auto& s = this_._internal_account_include().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "geyser.SubscribeRequestFilterTransactions.account_include");
    target = stream->WriteString(3, s, target);
  }

  // repeated string account_exclude = 4;
  for (int i = 0, n = this_._internal_account_exclude_size(); i < n; ++i) {
    const auto& s = this_._internal_account_exclude().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "geyser.SubscribeRequestFilterTransactions.account_exclude");
    target = stream->WriteString(4, s, target);
  }

  // optional string signature = 5;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const ::std::string& _s = this_._internal_signature();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "geyser.SubscribeRequestFilterTransactions.signature");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // repeated string account_required = 6;
  for (int i = 0, n = this_._internal_account_required_size(); i < n; ++i) {
    const auto& s = this_._internal_account_required().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "geyser.SubscribeRequestFilterTransactions.account_required");
    target = stream->WriteString(6, s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:geyser.SubscribeRequestFilterTransactions)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SubscribeRequestFilterTransactions::ByteSizeLong(const MessageLite& base) {
  const SubscribeRequestFilterTransactions& this_ = static_cast<const SubscribeRequestFilterTransactions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SubscribeRequestFilterTransactions::ByteSizeLong() const {
  const SubscribeRequestFilterTransactions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:geyser.SubscribeRequestFilterTransactions)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated string account_include = 3;
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_account_include().size());
      for (int i = 0, n = this_._internal_account_include().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_account_include().Get(i));
      }
    }
    // repeated string account_exclude = 4;
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_account_exclude().size());
      for (int i = 0, n = this_._internal_account_exclude().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_account_exclude().Get(i));
      }
    }
    // repeated string account_required = 6;
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_account_required().size());
      for (int i = 0, n = this_._internal_account_required().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_account_required().Get(i));
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  total_size += ::absl::popcount(0x00000006u & cached_has_bits) * 2;
   {
    // optional string signature = 5;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_signature());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SubscribeRequestFilterTransactions::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SubscribeRequestFilterTransactions*>(&to_msg);
  auto& from = static_cast<const SubscribeRequestFilterTransactions&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:geyser.SubscribeRequestFilterTransactions)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_account_include()->MergeFrom(from._internal_account_include());
  _this->_internal_mutable_account_exclude()->MergeFrom(from._internal_account_exclude());
  _this->_internal_mutable_account_required()->MergeFrom(from._internal_account_required());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_signature(from._internal_signature());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.vote_ = from._impl_.vote_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.failed_ = from._impl_.failed_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SubscribeRequestFilterTransactions::CopyFrom(const SubscribeRequestFilterTransactions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:geyser.SubscribeRequestFilterTransactions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SubscribeRequestFilterTransactions::InternalSwap(SubscribeRequestFilterTransactions* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.account_include_.InternalSwap(&other->_impl_.account_include_);
  _impl_.account_exclude_.InternalSwap(&other->_impl_.account_exclude_);
  _impl_.account_required_.InternalSwap(&other->_impl_.account_required_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.signature_, &other->_impl_.signature_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SubscribeRequestFilterTransactions, _impl_.failed_)
      + sizeof(SubscribeRequestFilterTransactions::_impl_.failed_)
      - PROTOBUF_FIELD_OFFSET(SubscribeRequestFilterTransactions, _impl_.vote_)>(
          reinterpret_cast<char*>(&_impl_.vote_),
          reinterpret_cast<char*>(&other->_impl_.vote_));
}

::google::protobuf::Metadata SubscribeRequestFilterTransactions::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubscribeRequestFilterBlocks::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SubscribeRequestFilterBlocks>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SubscribeRequestFilterBlocks, _impl_._has_bits_);
};

SubscribeRequestFilterBlocks::SubscribeRequestFilterBlocks(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SubscribeRequestFilterBlocks_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:geyser.SubscribeRequestFilterBlocks)
}
PROTOBUF_NDEBUG_INLINE SubscribeRequestFilterBlocks::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::geyser::SubscribeRequestFilterBlocks& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        account_include_{visibility, arena, from.account_include_} {}

SubscribeRequestFilterBlocks::SubscribeRequestFilterBlocks(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SubscribeRequestFilterBlocks& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SubscribeRequestFilterBlocks_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubscribeRequestFilterBlocks* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, include_transactions_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, include_transactions_),
           offsetof(Impl_, include_entries_) -
               offsetof(Impl_, include_transactions_) +
               sizeof(Impl_::include_entries_));

  // @@protoc_insertion_point(copy_constructor:geyser.SubscribeRequestFilterBlocks)
}
PROTOBUF_NDEBUG_INLINE SubscribeRequestFilterBlocks::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        account_include_{visibility, arena} {}

inline void SubscribeRequestFilterBlocks::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, include_transactions_),
           0,
           offsetof(Impl_, include_entries_) -
               offsetof(Impl_, include_transactions_) +
               sizeof(Impl_::include_entries_));
}
SubscribeRequestFilterBlocks::~SubscribeRequestFilterBlocks() {
  // @@protoc_insertion_point(destructor:geyser.SubscribeRequestFilterBlocks)
  SharedDtor(*this);
}
inline void SubscribeRequestFilterBlocks::SharedDtor(MessageLite& self) {
  SubscribeRequestFilterBlocks& this_ = static_cast<SubscribeRequestFilterBlocks&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SubscribeRequestFilterBlocks::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SubscribeRequestFilterBlocks(arena);
}
constexpr auto SubscribeRequestFilterBlocks::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SubscribeRequestFilterBlocks, _impl_.account_include_) +
          decltype(SubscribeRequestFilterBlocks::_impl_.account_include_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(SubscribeRequestFilterBlocks), alignof(SubscribeRequestFilterBlocks), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SubscribeRequestFilterBlocks::PlacementNew_,
                                 sizeof(SubscribeRequestFilterBlocks),
                                 alignof(SubscribeRequestFilterBlocks));
  }
}
constexpr auto SubscribeRequestFilterBlocks::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SubscribeRequestFilterBlocks_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SubscribeRequestFilterBlocks::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SubscribeRequestFilterBlocks>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SubscribeRequestFilterBlocks::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SubscribeRequestFilterBlocks>(), &SubscribeRequestFilterBlocks::ByteSizeLong,
              &SubscribeRequestFilterBlocks::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SubscribeRequestFilterBlocks, _impl_._cached_size_),
          false,
      },
      &SubscribeRequestFilterBlocks::kDescriptorMethods,
      &descriptor_table_geyser_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SubscribeRequestFilterBlocks_class_data_ =
        SubscribeRequestFilterBlocks::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SubscribeRequestFilterBlocks::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SubscribeRequestFilterBlocks_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SubscribeRequestFilterBlocks_class_data_.tc_table);
  return SubscribeRequestFilterBlocks_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 59, 2>
SubscribeRequestFilterBlocks::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SubscribeRequestFilterBlocks, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    SubscribeRequestFilterBlocks_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::geyser::SubscribeRequestFilterBlocks>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional bool include_entries = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SubscribeRequestFilterBlocks, _impl_.include_entries_), 2>(),
     {32, 2, 0, PROTOBUF_FIELD_OFFSET(SubscribeRequestFilterBlocks, _impl_.include_entries_)}},
    // repeated string account_include = 1;
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SubscribeRequestFilterBlocks, _impl_.account_include_)}},
    // optional bool include_transactions = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SubscribeRequestFilterBlocks, _impl_.include_transactions_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(SubscribeRequestFilterBlocks, _impl_.include_transactions_)}},
    // optional bool include_accounts = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SubscribeRequestFilterBlocks, _impl_.include_accounts_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(SubscribeRequestFilterBlocks, _impl_.include_accounts_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string account_include = 1;
    {PROTOBUF_FIELD_OFFSET(SubscribeRequestFilterBlocks, _impl_.account_include_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // optional bool include_transactions = 2;
    {PROTOBUF_FIELD_OFFSET(SubscribeRequestFilterBlocks, _impl_.include_transactions_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool include_accounts = 3;
    {PROTOBUF_FIELD_OFFSET(SubscribeRequestFilterBlocks, _impl_.include_accounts_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool include_entries = 4;
    {PROTOBUF_FIELD_OFFSET(SubscribeRequestFilterBlocks, _impl_.include_entries_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\43\17\0\0\0\0\0\0"
    "geyser.SubscribeRequestFilterBlocks"
    "account_include"
  }},
};
PROTOBUF_NOINLINE void SubscribeRequestFilterBlocks::Clear() {
// @@protoc_insertion_point(message_clear_start:geyser.SubscribeRequestFilterBlocks)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.account_include_.Clear();
  ::memset(&_impl_.include_transactions_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.include_entries_) -
      reinterpret_cast<char*>(&_impl_.include_transactions_)) + sizeof(_impl_.include_entries_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SubscribeRequestFilterBlocks::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SubscribeRequestFilterBlocks& this_ = static_cast<const SubscribeRequestFilterBlocks&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SubscribeRequestFilterBlocks::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SubscribeRequestFilterBlocks& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:geyser.SubscribeRequestFilterBlocks)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated string account_include = 1;
  for (int i = 0, n = this_._internal_account_include_size(); i < n; ++i) {
    const auto& s = this_._internal_account_include().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "geyser.SubscribeRequestFilterBlocks.account_include");
    target = stream->WriteString(1, s, target);
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional bool include_transactions = 2;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this_._internal_include_transactions(), target);
  }

  // optional bool include_accounts = 3;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this_._internal_include_accounts(), target);
  }

  // optional bool include_entries = 4;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        4, this_._internal_include_entries(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:geyser.SubscribeRequestFilterBlocks)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SubscribeRequestFilterBlocks::ByteSizeLong(const MessageLite& base) {
  const SubscribeRequestFilterBlocks& this_ = static_cast<const SubscribeRequestFilterBlocks&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SubscribeRequestFilterBlocks::ByteSizeLong() const {
  const SubscribeRequestFilterBlocks& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:geyser.SubscribeRequestFilterBlocks)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated string account_include = 1;
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_account_include().size());
      for (int i = 0, n = this_._internal_account_include().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_account_include().Get(i));
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  total_size += ::absl::popcount(0x00000007u & cached_has_bits) * 2;
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SubscribeRequestFilterBlocks::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SubscribeRequestFilterBlocks*>(&to_msg);
  auto& from = static_cast<const SubscribeRequestFilterBlocks&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:geyser.SubscribeRequestFilterBlocks)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_account_include()->MergeFrom(from._internal_account_include());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.include_transactions_ = from._impl_.include_transactions_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.include_accounts_ = from._impl_.include_accounts_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.include_entries_ = from._impl_.include_entries_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SubscribeRequestFilterBlocks::CopyFrom(const SubscribeRequestFilterBlocks& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:geyser.SubscribeRequestFilterBlocks)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SubscribeRequestFilterBlocks::InternalSwap(SubscribeRequestFilterBlocks* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.account_include_.InternalSwap(&other->_impl_.account_include_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SubscribeRequestFilterBlocks, _impl_.include_entries_)
      + sizeof(SubscribeRequestFilterBlocks::_impl_.include_entries_)
      - PROTOBUF_FIELD_OFFSET(SubscribeRequestFilterBlocks, _impl_.include_transactions_)>(
          reinterpret_cast<char*>(&_impl_.include_transactions_),
          reinterpret_cast<char*>(&other->_impl_.include_transactions_));
}

::google::protobuf::Metadata SubscribeRequestFilterBlocks::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubscribeRequestFilterBlocksMeta::_Internal {
 public:
};

SubscribeRequestFilterBlocksMeta::SubscribeRequestFilterBlocksMeta(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, SubscribeRequestFilterBlocksMeta_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:geyser.SubscribeRequestFilterBlocksMeta)
}
SubscribeRequestFilterBlocksMeta::SubscribeRequestFilterBlocksMeta(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SubscribeRequestFilterBlocksMeta& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, SubscribeRequestFilterBlocksMeta_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubscribeRequestFilterBlocksMeta* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:geyser.SubscribeRequestFilterBlocksMeta)
}

inline void* PROTOBUF_NONNULL SubscribeRequestFilterBlocksMeta::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SubscribeRequestFilterBlocksMeta(arena);
}
constexpr auto SubscribeRequestFilterBlocksMeta::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SubscribeRequestFilterBlocksMeta),
                                            alignof(SubscribeRequestFilterBlocksMeta));
}
constexpr auto SubscribeRequestFilterBlocksMeta::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SubscribeRequestFilterBlocksMeta_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SubscribeRequestFilterBlocksMeta::MergeImpl,
          ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<SubscribeRequestFilterBlocksMeta>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SubscribeRequestFilterBlocksMeta::SharedDtor,
          ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<SubscribeRequestFilterBlocksMeta>(), &SubscribeRequestFilterBlocksMeta::ByteSizeLong,
              &SubscribeRequestFilterBlocksMeta::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SubscribeRequestFilterBlocksMeta, _impl_._cached_size_),
          false,
      },
      &SubscribeRequestFilterBlocksMeta::kDescriptorMethods,
      &descriptor_table_geyser_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SubscribeRequestFilterBlocksMeta_class_data_ =
        SubscribeRequestFilterBlocksMeta::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SubscribeRequestFilterBlocksMeta::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SubscribeRequestFilterBlocksMeta_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SubscribeRequestFilterBlocksMeta_class_data_.tc_table);
  return SubscribeRequestFilterBlocksMeta_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2>
SubscribeRequestFilterBlocksMeta::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    SubscribeRequestFilterBlocksMeta_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::geyser::SubscribeRequestFilterBlocksMeta>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, // no field_entries, or aux_entries
  {{
  }},
};







::google::protobuf::Metadata SubscribeRequestFilterBlocksMeta::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubscribeRequestFilterEntry::_Internal {
 public:
};

SubscribeRequestFilterEntry::SubscribeRequestFilterEntry(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, SubscribeRequestFilterEntry_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:geyser.SubscribeRequestFilterEntry)
}
SubscribeRequestFilterEntry::SubscribeRequestFilterEntry(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SubscribeRequestFilterEntry& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, SubscribeRequestFilterEntry_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubscribeRequestFilterEntry* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:geyser.SubscribeRequestFilterEntry)
}

inline void* PROTOBUF_NONNULL SubscribeRequestFilterEntry::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SubscribeRequestFilterEntry(arena);
}
constexpr auto SubscribeRequestFilterEntry::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SubscribeRequestFilterEntry),
                                            alignof(SubscribeRequestFilterEntry));
}
constexpr auto SubscribeRequestFilterEntry::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SubscribeRequestFilterEntry_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SubscribeRequestFilterEntry::MergeImpl,
          ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<SubscribeRequestFilterEntry>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SubscribeRequestFilterEntry::SharedDtor,
          ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<SubscribeRequestFilterEntry>(), &SubscribeRequestFilterEntry::ByteSizeLong,
              &SubscribeRequestFilterEntry::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SubscribeRequestFilterEntry, _impl_._cached_size_),
          false,
      },
      &SubscribeRequestFilterEntry::kDescriptorMethods,
      &descriptor_table_geyser_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SubscribeRequestFilterEntry_class_data_ =
        SubscribeRequestFilterEntry::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SubscribeRequestFilterEntry::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SubscribeRequestFilterEntry_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SubscribeRequestFilterEntry_class_data_.tc_table);
  return SubscribeRequestFilterEntry_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2>
SubscribeRequestFilterEntry::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    SubscribeRequestFilterEntry_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::geyser::SubscribeRequestFilterEntry>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, // no field_entries, or aux_entries
  {{
  }},
};







::google::protobuf::Metadata SubscribeRequestFilterEntry::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubscribeRequestAccountsDataSlice::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SubscribeRequestAccountsDataSlice>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SubscribeRequestAccountsDataSlice, _impl_._has_bits_);
};

SubscribeRequestAccountsDataSlice::SubscribeRequestAccountsDataSlice(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SubscribeRequestAccountsDataSlice_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:geyser.SubscribeRequestAccountsDataSlice)
}
SubscribeRequestAccountsDataSlice::SubscribeRequestAccountsDataSlice(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SubscribeRequestAccountsDataSlice& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SubscribeRequestAccountsDataSlice_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE SubscribeRequestAccountsDataSlice::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void SubscribeRequestAccountsDataSlice::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, offset_),
           0,
           offsetof(Impl_, length_) -
               offsetof(Impl_, offset_) +
               sizeof(Impl_::length_));
}
SubscribeRequestAccountsDataSlice::~SubscribeRequestAccountsDataSlice() {
  // @@protoc_insertion_point(destructor:geyser.SubscribeRequestAccountsDataSlice)
  SharedDtor(*this);
}
inline void SubscribeRequestAccountsDataSlice::SharedDtor(MessageLite& self) {
  SubscribeRequestAccountsDataSlice& this_ = static_cast<SubscribeRequestAccountsDataSlice&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SubscribeRequestAccountsDataSlice::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SubscribeRequestAccountsDataSlice(arena);
}
constexpr auto SubscribeRequestAccountsDataSlice::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SubscribeRequestAccountsDataSlice),
                                            alignof(SubscribeRequestAccountsDataSlice));
}
constexpr auto SubscribeRequestAccountsDataSlice::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SubscribeRequestAccountsDataSlice_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SubscribeRequestAccountsDataSlice::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SubscribeRequestAccountsDataSlice>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SubscribeRequestAccountsDataSlice::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SubscribeRequestAccountsDataSlice>(), &SubscribeRequestAccountsDataSlice::ByteSizeLong,
              &SubscribeRequestAccountsDataSlice::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SubscribeRequestAccountsDataSlice, _impl_._cached_size_),
          false,
      },
      &SubscribeRequestAccountsDataSlice::kDescriptorMethods,
      &descriptor_table_geyser_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SubscribeRequestAccountsDataSlice_class_data_ =
        SubscribeRequestAccountsDataSlice::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SubscribeRequestAccountsDataSlice::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SubscribeRequestAccountsDataSlice_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SubscribeRequestAccountsDataSlice_class_data_.tc_table);
  return SubscribeRequestAccountsDataSlice_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
SubscribeRequestAccountsDataSlice::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SubscribeRequestAccountsDataSlice, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    SubscribeRequestAccountsDataSlice_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::geyser::SubscribeRequestAccountsDataSlice>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 length = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SubscribeRequestAccountsDataSlice, _impl_.length_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(SubscribeRequestAccountsDataSlice, _impl_.length_)}},
    // uint64 offset = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SubscribeRequestAccountsDataSlice, _impl_.offset_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(SubscribeRequestAccountsDataSlice, _impl_.offset_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 offset = 1;
    {PROTOBUF_FIELD_OFFSET(SubscribeRequestAccountsDataSlice, _impl_.offset_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // uint64 length = 2;
    {PROTOBUF_FIELD_OFFSET(SubscribeRequestAccountsDataSlice, _impl_.length_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void SubscribeRequestAccountsDataSlice::Clear() {
// @@protoc_insertion_point(message_clear_start:geyser.SubscribeRequestAccountsDataSlice)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    ::memset(&_impl_.offset_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.length_) -
        reinterpret_cast<char*>(&_impl_.offset_)) + sizeof(_impl_.length_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SubscribeRequestAccountsDataSlice::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SubscribeRequestAccountsDataSlice& this_ = static_cast<const SubscribeRequestAccountsDataSlice&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SubscribeRequestAccountsDataSlice::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SubscribeRequestAccountsDataSlice& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:geyser.SubscribeRequestAccountsDataSlice)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 offset = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_offset() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          1, this_._internal_offset(), target);
    }
  }

  // uint64 length = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_length() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          2, this_._internal_length(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:geyser.SubscribeRequestAccountsDataSlice)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SubscribeRequestAccountsDataSlice::ByteSizeLong(const MessageLite& base) {
  const SubscribeRequestAccountsDataSlice& this_ = static_cast<const SubscribeRequestAccountsDataSlice&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SubscribeRequestAccountsDataSlice::ByteSizeLong() const {
  const SubscribeRequestAccountsDataSlice& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:geyser.SubscribeRequestAccountsDataSlice)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // uint64 offset = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_offset() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_offset());
      }
    }
    // uint64 length = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_length() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_length());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SubscribeRequestAccountsDataSlice::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SubscribeRequestAccountsDataSlice*>(&to_msg);
  auto& from = static_cast<const SubscribeRequestAccountsDataSlice&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:geyser.SubscribeRequestAccountsDataSlice)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (from._internal_offset() != 0) {
        _this->_impl_.offset_ = from._impl_.offset_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_length() != 0) {
        _this->_impl_.length_ = from._impl_.length_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SubscribeRequestAccountsDataSlice::CopyFrom(const SubscribeRequestAccountsDataSlice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:geyser.SubscribeRequestAccountsDataSlice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SubscribeRequestAccountsDataSlice::InternalSwap(SubscribeRequestAccountsDataSlice* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SubscribeRequestAccountsDataSlice, _impl_.length_)
      + sizeof(SubscribeRequestAccountsDataSlice::_impl_.length_)
      - PROTOBUF_FIELD_OFFSET(SubscribeRequestAccountsDataSlice, _impl_.offset_)>(
          reinterpret_cast<char*>(&_impl_.offset_),
          reinterpret_cast<char*>(&other->_impl_.offset_));
}

::google::protobuf::Metadata SubscribeRequestAccountsDataSlice::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubscribeRequestPing::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SubscribeRequestPing>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SubscribeRequestPing, _impl_._has_bits_);
};

SubscribeRequestPing::SubscribeRequestPing(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SubscribeRequestPing_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:geyser.SubscribeRequestPing)
}
SubscribeRequestPing::SubscribeRequestPing(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SubscribeRequestPing& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SubscribeRequestPing_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE SubscribeRequestPing::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void SubscribeRequestPing::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.id_ = {};
}
SubscribeRequestPing::~SubscribeRequestPing() {
  // @@protoc_insertion_point(destructor:geyser.SubscribeRequestPing)
  SharedDtor(*this);
}
inline void SubscribeRequestPing::SharedDtor(MessageLite& self) {
  SubscribeRequestPing& this_ = static_cast<SubscribeRequestPing&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SubscribeRequestPing::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SubscribeRequestPing(arena);
}
constexpr auto SubscribeRequestPing::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SubscribeRequestPing),
                                            alignof(SubscribeRequestPing));
}
constexpr auto SubscribeRequestPing::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SubscribeRequestPing_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SubscribeRequestPing::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SubscribeRequestPing>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SubscribeRequestPing::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SubscribeRequestPing>(), &SubscribeRequestPing::ByteSizeLong,
              &SubscribeRequestPing::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SubscribeRequestPing, _impl_._cached_size_),
          false,
      },
      &SubscribeRequestPing::kDescriptorMethods,
      &descriptor_table_geyser_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SubscribeRequestPing_class_data_ =
        SubscribeRequestPing::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SubscribeRequestPing::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SubscribeRequestPing_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SubscribeRequestPing_class_data_.tc_table);
  return SubscribeRequestPing_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
SubscribeRequestPing::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SubscribeRequestPing, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    SubscribeRequestPing_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::geyser::SubscribeRequestPing>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SubscribeRequestPing, _impl_.id_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(SubscribeRequestPing, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 id = 1;
    {PROTOBUF_FIELD_OFFSET(SubscribeRequestPing, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void SubscribeRequestPing::Clear() {
// @@protoc_insertion_point(message_clear_start:geyser.SubscribeRequestPing)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SubscribeRequestPing::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SubscribeRequestPing& this_ = static_cast<const SubscribeRequestPing&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SubscribeRequestPing::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SubscribeRequestPing& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:geyser.SubscribeRequestPing)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 id = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_id() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
              stream, this_._internal_id(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:geyser.SubscribeRequestPing)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SubscribeRequestPing::ByteSizeLong(const MessageLite& base) {
  const SubscribeRequestPing& this_ = static_cast<const SubscribeRequestPing&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SubscribeRequestPing::ByteSizeLong() const {
  const SubscribeRequestPing& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:geyser.SubscribeRequestPing)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // int32 id = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_id() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_id());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SubscribeRequestPing::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SubscribeRequestPing*>(&to_msg);
  auto& from = static_cast<const SubscribeRequestPing&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:geyser.SubscribeRequestPing)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (from._internal_id() != 0) {
      _this->_impl_.id_ = from._impl_.id_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SubscribeRequestPing::CopyFrom(const SubscribeRequestPing& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:geyser.SubscribeRequestPing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SubscribeRequestPing::InternalSwap(SubscribeRequestPing* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.id_, other->_impl_.id_);
}

::google::protobuf::Metadata SubscribeRequestPing::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubscribeUpdate::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SubscribeUpdate>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SubscribeUpdate, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::geyser::SubscribeUpdate, _impl_._oneof_case_);
};

void SubscribeUpdate::set_allocated_account(::geyser::SubscribeUpdateAccount* PROTOBUF_NULLABLE account) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_update_oneof();
  if (account) {
    ::google::protobuf::Arena* submessage_arena = account->GetArena();
    if (message_arena != submessage_arena) {
      account = ::google::protobuf::internal::GetOwnedMessage(message_arena, account, submessage_arena);
    }
    set_has_account();
    _impl_.update_oneof_.account_ = account;
  }
  // @@protoc_insertion_point(field_set_allocated:geyser.SubscribeUpdate.account)
}
void SubscribeUpdate::set_allocated_slot(::geyser::SubscribeUpdateSlot* PROTOBUF_NULLABLE slot) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_update_oneof();
  if (slot) {
    ::google::protobuf::Arena* submessage_arena = slot->GetArena();
    if (message_arena != submessage_arena) {
      slot = ::google::protobuf::internal::GetOwnedMessage(message_arena, slot, submessage_arena);
    }
    set_has_slot();
    _impl_.update_oneof_.slot_ = slot;
  }
  // @@protoc_insertion_point(field_set_allocated:geyser.SubscribeUpdate.slot)
}
void SubscribeUpdate::set_allocated_transaction(::geyser::SubscribeUpdateTransaction* PROTOBUF_NULLABLE transaction) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_update_oneof();
  if (transaction) {
    ::google::protobuf::Arena* submessage_arena = transaction->GetArena();
    if (message_arena != submessage_arena) {
      transaction = ::google::protobuf::internal::GetOwnedMessage(message_arena, transaction, submessage_arena);
    }
    set_has_transaction();
    _impl_.update_oneof_.transaction_ = transaction;
  }
  // @@protoc_insertion_point(field_set_allocated:geyser.SubscribeUpdate.transaction)
}
void SubscribeUpdate::set_allocated_transaction_status(::geyser::SubscribeUpdateTransactionStatus* PROTOBUF_NULLABLE transaction_status) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_update_oneof();
  if (transaction_status) {
    ::google::protobuf::Arena* submessage_arena = transaction_status->GetArena();
    if (message_arena != submessage_arena) {
      transaction_status = ::google::protobuf::internal::GetOwnedMessage(message_arena, transaction_status, submessage_arena);
    }
    set_has_transaction_status();
    _impl_.update_oneof_.transaction_status_ = transaction_status;
  }
  // @@protoc_insertion_point(field_set_allocated:geyser.SubscribeUpdate.transaction_status)
}
void SubscribeUpdate::set_allocated_block(::geyser::SubscribeUpdateBlock* PROTOBUF_NULLABLE block) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_update_oneof();
  if (block) {
    ::google::protobuf::Arena* submessage_arena = block->GetArena();
    if (message_arena != submessage_arena) {
      block = ::google::protobuf::internal::GetOwnedMessage(message_arena, block, submessage_arena);
    }
    set_has_block();
    _impl_.update_oneof_.block_ = block;
  }
  // @@protoc_insertion_point(field_set_allocated:geyser.SubscribeUpdate.block)
}
void SubscribeUpdate::set_allocated_ping(::geyser::SubscribeUpdatePing* PROTOBUF_NULLABLE ping) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_update_oneof();
  if (ping) {
    ::google::protobuf::Arena* submessage_arena = ping->GetArena();
    if (message_arena != submessage_arena) {
      ping = ::google::protobuf::internal::GetOwnedMessage(message_arena, ping, submessage_arena);
    }
    set_has_ping();
    _impl_.update_oneof_.ping_ = ping;
  }
  // @@protoc_insertion_point(field_set_allocated:geyser.SubscribeUpdate.ping)
}
void SubscribeUpdate::set_allocated_pong(::geyser::SubscribeUpdatePong* PROTOBUF_NULLABLE pong) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_update_oneof();
  if (pong) {
    ::google::protobuf::Arena* submessage_arena = pong->GetArena();
    if (message_arena != submessage_arena) {
      pong = ::google::protobuf::internal::GetOwnedMessage(message_arena, pong, submessage_arena);
    }
    set_has_pong();
    _impl_.update_oneof_.pong_ = pong;
  }
  // @@protoc_insertion_point(field_set_allocated:geyser.SubscribeUpdate.pong)
}
void SubscribeUpdate::set_allocated_block_meta(::geyser::SubscribeUpdateBlockMeta* PROTOBUF_NULLABLE block_meta) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_update_oneof();
  if (block_meta) {
    ::google::protobuf::Arena* submessage_arena = block_meta->GetArena();
    if (message_arena != submessage_arena) {
      block_meta = ::google::protobuf::internal::GetOwnedMessage(message_arena, block_meta, submessage_arena);
    }
    set_has_block_meta();
    _impl_.update_oneof_.block_meta_ = block_meta;
  }
  // @@protoc_insertion_point(field_set_allocated:geyser.SubscribeUpdate.block_meta)
}
void SubscribeUpdate::set_allocated_entry(::geyser::SubscribeUpdateEntry* PROTOBUF_NULLABLE entry) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_update_oneof();
  if (entry) {
    ::google::protobuf::Arena* submessage_arena = entry->GetArena();
    if (message_arena != submessage_arena) {
      entry = ::google::protobuf::internal::GetOwnedMessage(message_arena, entry, submessage_arena);
    }
    set_has_entry();
    _impl_.update_oneof_.entry_ = entry;
  }
  // @@protoc_insertion_point(field_set_allocated:geyser.SubscribeUpdate.entry)
}
void SubscribeUpdate::clear_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.created_at_ != nullptr) _impl_.created_at_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
SubscribeUpdate::SubscribeUpdate(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SubscribeUpdate_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:geyser.SubscribeUpdate)
}
PROTOBUF_NDEBUG_INLINE SubscribeUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::geyser::SubscribeUpdate& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        filters_{visibility, arena, from.filters_},
        update_oneof_{},
        _oneof_case_{from._oneof_case_[0]} {}

SubscribeUpdate::SubscribeUpdate(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SubscribeUpdate& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SubscribeUpdate_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubscribeUpdate* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.created_at_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.created_at_)
                : nullptr;
  switch (update_oneof_case()) {
    case UPDATE_ONEOF_NOT_SET:
      break;
      case kAccount:
        _impl_.update_oneof_.account_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.update_oneof_.account_);
        break;
      case kSlot:
        _impl_.update_oneof_.slot_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.update_oneof_.slot_);
        break;
      case kTransaction:
        _impl_.update_oneof_.transaction_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.update_oneof_.transaction_);
        break;
      case kTransactionStatus:
        _impl_.update_oneof_.transaction_status_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.update_oneof_.transaction_status_);
        break;
      case kBlock:
        _impl_.update_oneof_.block_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.update_oneof_.block_);
        break;
      case kPing:
        _impl_.update_oneof_.ping_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.update_oneof_.ping_);
        break;
      case kPong:
        _impl_.update_oneof_.pong_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.update_oneof_.pong_);
        break;
      case kBlockMeta:
        _impl_.update_oneof_.block_meta_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.update_oneof_.block_meta_);
        break;
      case kEntry:
        _impl_.update_oneof_.entry_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.update_oneof_.entry_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:geyser.SubscribeUpdate)
}
PROTOBUF_NDEBUG_INLINE SubscribeUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        filters_{visibility, arena},
        update_oneof_{},
        _oneof_case_{} {}

inline void SubscribeUpdate::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.created_at_ = {};
}
SubscribeUpdate::~SubscribeUpdate() {
  // @@protoc_insertion_point(destructor:geyser.SubscribeUpdate)
  SharedDtor(*this);
}
inline void SubscribeUpdate::SharedDtor(MessageLite& self) {
  SubscribeUpdate& this_ = static_cast<SubscribeUpdate&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.created_at_;
  if (this_.has_update_oneof()) {
    this_.clear_update_oneof();
  }
  this_._impl_.~Impl_();
}

void SubscribeUpdate::clear_update_oneof() {
// @@protoc_insertion_point(one_of_clear_start:geyser.SubscribeUpdate)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (update_oneof_case()) {
    case kAccount: {
      if (GetArena() == nullptr) {
        delete _impl_.update_oneof_.account_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.update_oneof_.account_);
      }
      break;
    }
    case kSlot: {
      if (GetArena() == nullptr) {
        delete _impl_.update_oneof_.slot_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.update_oneof_.slot_);
      }
      break;
    }
    case kTransaction: {
      if (GetArena() == nullptr) {
        delete _impl_.update_oneof_.transaction_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.update_oneof_.transaction_);
      }
      break;
    }
    case kTransactionStatus: {
      if (GetArena() == nullptr) {
        delete _impl_.update_oneof_.transaction_status_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.update_oneof_.transaction_status_);
      }
      break;
    }
    case kBlock: {
      if (GetArena() == nullptr) {
        delete _impl_.update_oneof_.block_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.update_oneof_.block_);
      }
      break;
    }
    case kPing: {
      if (GetArena() == nullptr) {
        delete _impl_.update_oneof_.ping_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.update_oneof_.ping_);
      }
      break;
    }
    case kPong: {
      if (GetArena() == nullptr) {
        delete _impl_.update_oneof_.pong_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.update_oneof_.pong_);
      }
      break;
    }
    case kBlockMeta: {
      if (GetArena() == nullptr) {
        delete _impl_.update_oneof_.block_meta_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.update_oneof_.block_meta_);
      }
      break;
    }
    case kEntry: {
      if (GetArena() == nullptr) {
        delete _impl_.update_oneof_.entry_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.update_oneof_.entry_);
      }
      break;
    }
    case UPDATE_ONEOF_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = UPDATE_ONEOF_NOT_SET;
}


inline void* PROTOBUF_NONNULL SubscribeUpdate::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SubscribeUpdate(arena);
}
constexpr auto SubscribeUpdate::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SubscribeUpdate, _impl_.filters_) +
          decltype(SubscribeUpdate::_impl_.filters_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(SubscribeUpdate), alignof(SubscribeUpdate), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SubscribeUpdate::PlacementNew_,
                                 sizeof(SubscribeUpdate),
                                 alignof(SubscribeUpdate));
  }
}
constexpr auto SubscribeUpdate::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SubscribeUpdate_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SubscribeUpdate::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SubscribeUpdate>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SubscribeUpdate::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SubscribeUpdate>(), &SubscribeUpdate::ByteSizeLong,
              &SubscribeUpdate::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SubscribeUpdate, _impl_._cached_size_),
          false,
      },
      &SubscribeUpdate::kDescriptorMethods,
      &descriptor_table_geyser_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SubscribeUpdate_class_data_ =
        SubscribeUpdate::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SubscribeUpdate::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SubscribeUpdate_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SubscribeUpdate_class_data_.tc_table);
  return SubscribeUpdate_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 11, 10, 46, 2>
SubscribeUpdate::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SubscribeUpdate, _impl_._has_bits_),
    0, // no _extensions_
    11, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294965248,  // skipmap
    offsetof(decltype(_table_), field_entries),
    11,  // num_field_entries
    10,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SubscribeUpdate_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::geyser::SubscribeUpdate>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated string filters = 1;
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SubscribeUpdate, _impl_.filters_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // .google.protobuf.Timestamp created_at = 11;
    {::_pbi::TcParser::FastMtS1,
     {90, 0, 9, PROTOBUF_FIELD_OFFSET(SubscribeUpdate, _impl_.created_at_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string filters = 1;
    {PROTOBUF_FIELD_OFFSET(SubscribeUpdate, _impl_.filters_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // .geyser.SubscribeUpdateAccount account = 2;
    {PROTOBUF_FIELD_OFFSET(SubscribeUpdate, _impl_.update_oneof_.account_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .geyser.SubscribeUpdateSlot slot = 3;
    {PROTOBUF_FIELD_OFFSET(SubscribeUpdate, _impl_.update_oneof_.slot_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .geyser.SubscribeUpdateTransaction transaction = 4;
    {PROTOBUF_FIELD_OFFSET(SubscribeUpdate, _impl_.update_oneof_.transaction_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .geyser.SubscribeUpdateBlock block = 5;
    {PROTOBUF_FIELD_OFFSET(SubscribeUpdate, _impl_.update_oneof_.block_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .geyser.SubscribeUpdatePing ping = 6;
    {PROTOBUF_FIELD_OFFSET(SubscribeUpdate, _impl_.update_oneof_.ping_), _Internal::kOneofCaseOffset + 0, 4,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .geyser.SubscribeUpdateBlockMeta block_meta = 7;
    {PROTOBUF_FIELD_OFFSET(SubscribeUpdate, _impl_.update_oneof_.block_meta_), _Internal::kOneofCaseOffset + 0, 5,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .geyser.SubscribeUpdateEntry entry = 8;
    {PROTOBUF_FIELD_OFFSET(SubscribeUpdate, _impl_.update_oneof_.entry_), _Internal::kOneofCaseOffset + 0, 6,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .geyser.SubscribeUpdatePong pong = 9;
    {PROTOBUF_FIELD_OFFSET(SubscribeUpdate, _impl_.update_oneof_.pong_), _Internal::kOneofCaseOffset + 0, 7,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .geyser.SubscribeUpdateTransactionStatus transaction_status = 10;
    {PROTOBUF_FIELD_OFFSET(SubscribeUpdate, _impl_.update_oneof_.transaction_status_), _Internal::kOneofCaseOffset + 0, 8,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp created_at = 11;
    {PROTOBUF_FIELD_OFFSET(SubscribeUpdate, _impl_.created_at_), _Internal::kHasBitsOffset + 0, 9,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::geyser::SubscribeUpdateAccount>()},
      {::_pbi::TcParser::GetTable<::geyser::SubscribeUpdateSlot>()},
      {::_pbi::TcParser::GetTable<::geyser::SubscribeUpdateTransaction>()},
      {::_pbi::TcParser::GetTable<::geyser::SubscribeUpdateBlock>()},
      {::_pbi::TcParser::GetTable<::geyser::SubscribeUpdatePing>()},
      {::_pbi::TcParser::GetTable<::geyser::SubscribeUpdateBlockMeta>()},
      {::_pbi::TcParser::GetTable<::geyser::SubscribeUpdateEntry>()},
      {::_pbi::TcParser::GetTable<::geyser::SubscribeUpdatePong>()},
      {::_pbi::TcParser::GetTable<::geyser::SubscribeUpdateTransactionStatus>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }},
  {{
    "\26\7\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
    "geyser.SubscribeUpdate"
    "filters"
  }},
};
PROTOBUF_NOINLINE void SubscribeUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:geyser.SubscribeUpdate)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.filters_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.created_at_ != nullptr);
    _impl_.created_at_->Clear();
  }
  clear_update_oneof();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SubscribeUpdate::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SubscribeUpdate& this_ = static_cast<const SubscribeUpdate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SubscribeUpdate::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SubscribeUpdate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:geyser.SubscribeUpdate)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated string filters = 1;
  for (int i = 0, n = this_._internal_filters_size(); i < n; ++i) {
    const auto& s = this_._internal_filters().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "geyser.SubscribeUpdate.filters");
    target = stream->WriteString(1, s, target);
  }

  switch (this_.update_oneof_case()) {
    case kAccount: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, *this_._impl_.update_oneof_.account_, this_._impl_.update_oneof_.account_->GetCachedSize(), target,
          stream);
      break;
    }
    case kSlot: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, *this_._impl_.update_oneof_.slot_, this_._impl_.update_oneof_.slot_->GetCachedSize(), target,
          stream);
      break;
    }
    case kTransaction: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          4, *this_._impl_.update_oneof_.transaction_, this_._impl_.update_oneof_.transaction_->GetCachedSize(), target,
          stream);
      break;
    }
    case kBlock: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          5, *this_._impl_.update_oneof_.block_, this_._impl_.update_oneof_.block_->GetCachedSize(), target,
          stream);
      break;
    }
    case kPing: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          6, *this_._impl_.update_oneof_.ping_, this_._impl_.update_oneof_.ping_->GetCachedSize(), target,
          stream);
      break;
    }
    case kBlockMeta: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          7, *this_._impl_.update_oneof_.block_meta_, this_._impl_.update_oneof_.block_meta_->GetCachedSize(), target,
          stream);
      break;
    }
    case kEntry: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          8, *this_._impl_.update_oneof_.entry_, this_._impl_.update_oneof_.entry_->GetCachedSize(), target,
          stream);
      break;
    }
    case kPong: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          9, *this_._impl_.update_oneof_.pong_, this_._impl_.update_oneof_.pong_->GetCachedSize(), target,
          stream);
      break;
    }
    case kTransactionStatus: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          10, *this_._impl_.update_oneof_.transaction_status_, this_._impl_.update_oneof_.transaction_status_->GetCachedSize(), target,
          stream);
      break;
    }
    default:
      break;
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  // .google.protobuf.Timestamp created_at = 11;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        11, *this_._impl_.created_at_, this_._impl_.created_at_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:geyser.SubscribeUpdate)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SubscribeUpdate::ByteSizeLong(const MessageLite& base) {
  const SubscribeUpdate& this_ = static_cast<const SubscribeUpdate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SubscribeUpdate::ByteSizeLong() const {
  const SubscribeUpdate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:geyser.SubscribeUpdate)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated string filters = 1;
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_filters().size());
      for (int i = 0, n = this_._internal_filters().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_filters().Get(i));
      }
    }
  }
   {
    // .google.protobuf.Timestamp created_at = 11;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.created_at_);
    }
  }
  switch (this_.update_oneof_case()) {
    // .geyser.SubscribeUpdateAccount account = 2;
    case kAccount: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.update_oneof_.account_);
      break;
    }
    // .geyser.SubscribeUpdateSlot slot = 3;
    case kSlot: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.update_oneof_.slot_);
      break;
    }
    // .geyser.SubscribeUpdateTransaction transaction = 4;
    case kTransaction: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.update_oneof_.transaction_);
      break;
    }
    // .geyser.SubscribeUpdateTransactionStatus transaction_status = 10;
    case kTransactionStatus: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.update_oneof_.transaction_status_);
      break;
    }
    // .geyser.SubscribeUpdateBlock block = 5;
    case kBlock: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.update_oneof_.block_);
      break;
    }
    // .geyser.SubscribeUpdatePing ping = 6;
    case kPing: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.update_oneof_.ping_);
      break;
    }
    // .geyser.SubscribeUpdatePong pong = 9;
    case kPong: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.update_oneof_.pong_);
      break;
    }
    // .geyser.SubscribeUpdateBlockMeta block_meta = 7;
    case kBlockMeta: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.update_oneof_.block_meta_);
      break;
    }
    // .geyser.SubscribeUpdateEntry entry = 8;
    case kEntry: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.update_oneof_.entry_);
      break;
    }
    case UPDATE_ONEOF_NOT_SET: {
      break;
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SubscribeUpdate::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SubscribeUpdate*>(&to_msg);
  auto& from = static_cast<const SubscribeUpdate&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:geyser.SubscribeUpdate)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_filters()->MergeFrom(from._internal_filters());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(from._impl_.created_at_ != nullptr);
    if (_this->_impl_.created_at_ == nullptr) {
      _this->_impl_.created_at_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.created_at_);
    } else {
      _this->_impl_.created_at_->MergeFrom(*from._impl_.created_at_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_update_oneof();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kAccount: {
        if (oneof_needs_init) {
          _this->_impl_.update_oneof_.account_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.update_oneof_.account_);
        } else {
          _this->_impl_.update_oneof_.account_->MergeFrom(*from._impl_.update_oneof_.account_);
        }
        break;
      }
      case kSlot: {
        if (oneof_needs_init) {
          _this->_impl_.update_oneof_.slot_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.update_oneof_.slot_);
        } else {
          _this->_impl_.update_oneof_.slot_->MergeFrom(*from._impl_.update_oneof_.slot_);
        }
        break;
      }
      case kTransaction: {
        if (oneof_needs_init) {
          _this->_impl_.update_oneof_.transaction_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.update_oneof_.transaction_);
        } else {
          _this->_impl_.update_oneof_.transaction_->MergeFrom(*from._impl_.update_oneof_.transaction_);
        }
        break;
      }
      case kTransactionStatus: {
        if (oneof_needs_init) {
          _this->_impl_.update_oneof_.transaction_status_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.update_oneof_.transaction_status_);
        } else {
          _this->_impl_.update_oneof_.transaction_status_->MergeFrom(*from._impl_.update_oneof_.transaction_status_);
        }
        break;
      }
      case kBlock: {
        if (oneof_needs_init) {
          _this->_impl_.update_oneof_.block_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.update_oneof_.block_);
        } else {
          _this->_impl_.update_oneof_.block_->MergeFrom(*from._impl_.update_oneof_.block_);
        }
        break;
      }
      case kPing: {
        if (oneof_needs_init) {
          _this->_impl_.update_oneof_.ping_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.update_oneof_.ping_);
        } else {
          _this->_impl_.update_oneof_.ping_->MergeFrom(*from._impl_.update_oneof_.ping_);
        }
        break;
      }
      case kPong: {
        if (oneof_needs_init) {
          _this->_impl_.update_oneof_.pong_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.update_oneof_.pong_);
        } else {
          _this->_impl_.update_oneof_.pong_->MergeFrom(*from._impl_.update_oneof_.pong_);
        }
        break;
      }
      case kBlockMeta: {
        if (oneof_needs_init) {
          _this->_impl_.update_oneof_.block_meta_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.update_oneof_.block_meta_);
        } else {
          _this->_impl_.update_oneof_.block_meta_->MergeFrom(*from._impl_.update_oneof_.block_meta_);
        }
        break;
      }
      case kEntry: {
        if (oneof_needs_init) {
          _this->_impl_.update_oneof_.entry_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.update_oneof_.entry_);
        } else {
          _this->_impl_.update_oneof_.entry_->MergeFrom(*from._impl_.update_oneof_.entry_);
        }
        break;
      }
      case UPDATE_ONEOF_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SubscribeUpdate::CopyFrom(const SubscribeUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:geyser.SubscribeUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SubscribeUpdate::InternalSwap(SubscribeUpdate* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.filters_.InternalSwap(&other->_impl_.filters_);
  swap(_impl_.created_at_, other->_impl_.created_at_);
  swap(_impl_.update_oneof_, other->_impl_.update_oneof_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata SubscribeUpdate::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubscribeUpdateAccount::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SubscribeUpdateAccount>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SubscribeUpdateAccount, _impl_._has_bits_);
};

SubscribeUpdateAccount::SubscribeUpdateAccount(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SubscribeUpdateAccount_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:geyser.SubscribeUpdateAccount)
}
PROTOBUF_NDEBUG_INLINE SubscribeUpdateAccount::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::geyser::SubscribeUpdateAccount& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SubscribeUpdateAccount::SubscribeUpdateAccount(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SubscribeUpdateAccount& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SubscribeUpdateAccount_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubscribeUpdateAccount* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.account_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.account_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, slot_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, slot_),
           offsetof(Impl_, is_startup_) -
               offsetof(Impl_, slot_) +
               sizeof(Impl_::is_startup_));

  // @@protoc_insertion_point(copy_constructor:geyser.SubscribeUpdateAccount)
}
PROTOBUF_NDEBUG_INLINE SubscribeUpdateAccount::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void SubscribeUpdateAccount::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, account_),
           0,
           offsetof(Impl_, is_startup_) -
               offsetof(Impl_, account_) +
               sizeof(Impl_::is_startup_));
}
SubscribeUpdateAccount::~SubscribeUpdateAccount() {
  // @@protoc_insertion_point(destructor:geyser.SubscribeUpdateAccount)
  SharedDtor(*this);
}
inline void SubscribeUpdateAccount::SharedDtor(MessageLite& self) {
  SubscribeUpdateAccount& this_ = static_cast<SubscribeUpdateAccount&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.account_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SubscribeUpdateAccount::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SubscribeUpdateAccount(arena);
}
constexpr auto SubscribeUpdateAccount::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SubscribeUpdateAccount),
                                            alignof(SubscribeUpdateAccount));
}
constexpr auto SubscribeUpdateAccount::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SubscribeUpdateAccount_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SubscribeUpdateAccount::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SubscribeUpdateAccount>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SubscribeUpdateAccount::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SubscribeUpdateAccount>(), &SubscribeUpdateAccount::ByteSizeLong,
              &SubscribeUpdateAccount::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SubscribeUpdateAccount, _impl_._cached_size_),
          false,
      },
      &SubscribeUpdateAccount::kDescriptorMethods,
      &descriptor_table_geyser_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SubscribeUpdateAccount_class_data_ =
        SubscribeUpdateAccount::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SubscribeUpdateAccount::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SubscribeUpdateAccount_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SubscribeUpdateAccount_class_data_.tc_table);
  return SubscribeUpdateAccount_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2>
SubscribeUpdateAccount::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SubscribeUpdateAccount, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SubscribeUpdateAccount_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::geyser::SubscribeUpdateAccount>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .geyser.SubscribeUpdateAccountInfo account = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SubscribeUpdateAccount, _impl_.account_)}},
    // uint64 slot = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SubscribeUpdateAccount, _impl_.slot_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(SubscribeUpdateAccount, _impl_.slot_)}},
    // bool is_startup = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SubscribeUpdateAccount, _impl_.is_startup_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(SubscribeUpdateAccount, _impl_.is_startup_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .geyser.SubscribeUpdateAccountInfo account = 1;
    {PROTOBUF_FIELD_OFFSET(SubscribeUpdateAccount, _impl_.account_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint64 slot = 2;
    {PROTOBUF_FIELD_OFFSET(SubscribeUpdateAccount, _impl_.slot_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // bool is_startup = 3;
    {PROTOBUF_FIELD_OFFSET(SubscribeUpdateAccount, _impl_.is_startup_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::geyser::SubscribeUpdateAccountInfo>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void SubscribeUpdateAccount::Clear() {
// @@protoc_insertion_point(message_clear_start:geyser.SubscribeUpdateAccount)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.account_ != nullptr);
    _impl_.account_->Clear();
  }
  if ((cached_has_bits & 0x00000006u) != 0) {
    ::memset(&_impl_.slot_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.is_startup_) -
        reinterpret_cast<char*>(&_impl_.slot_)) + sizeof(_impl_.is_startup_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SubscribeUpdateAccount::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SubscribeUpdateAccount& this_ = static_cast<const SubscribeUpdateAccount&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SubscribeUpdateAccount::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SubscribeUpdateAccount& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:geyser.SubscribeUpdateAccount)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .geyser.SubscribeUpdateAccountInfo account = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.account_, this_._impl_.account_->GetCachedSize(), target,
        stream);
  }

  // uint64 slot = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    if (this_._internal_slot() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          2, this_._internal_slot(), target);
    }
  }

  // bool is_startup = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    if (this_._internal_is_startup() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          3, this_._internal_is_startup(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:geyser.SubscribeUpdateAccount)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SubscribeUpdateAccount::ByteSizeLong(const MessageLite& base) {
  const SubscribeUpdateAccount& this_ = static_cast<const SubscribeUpdateAccount&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SubscribeUpdateAccount::ByteSizeLong() const {
  const SubscribeUpdateAccount& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:geyser.SubscribeUpdateAccount)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // .geyser.SubscribeUpdateAccountInfo account = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.account_);
    }
    // uint64 slot = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_slot() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_slot());
      }
    }
    // bool is_startup = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_is_startup() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SubscribeUpdateAccount::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SubscribeUpdateAccount*>(&to_msg);
  auto& from = static_cast<const SubscribeUpdateAccount&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:geyser.SubscribeUpdateAccount)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.account_ != nullptr);
      if (_this->_impl_.account_ == nullptr) {
        _this->_impl_.account_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.account_);
      } else {
        _this->_impl_.account_->MergeFrom(*from._impl_.account_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_slot() != 0) {
        _this->_impl_.slot_ = from._impl_.slot_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_is_startup() != 0) {
        _this->_impl_.is_startup_ = from._impl_.is_startup_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SubscribeUpdateAccount::CopyFrom(const SubscribeUpdateAccount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:geyser.SubscribeUpdateAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SubscribeUpdateAccount::InternalSwap(SubscribeUpdateAccount* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SubscribeUpdateAccount, _impl_.is_startup_)
      + sizeof(SubscribeUpdateAccount::_impl_.is_startup_)
      - PROTOBUF_FIELD_OFFSET(SubscribeUpdateAccount, _impl_.account_)>(
          reinterpret_cast<char*>(&_impl_.account_),
          reinterpret_cast<char*>(&other->_impl_.account_));
}

::google::protobuf::Metadata SubscribeUpdateAccount::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubscribeUpdateAccountInfo::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SubscribeUpdateAccountInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SubscribeUpdateAccountInfo, _impl_._has_bits_);
};

SubscribeUpdateAccountInfo::SubscribeUpdateAccountInfo(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SubscribeUpdateAccountInfo_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:geyser.SubscribeUpdateAccountInfo)
}
PROTOBUF_NDEBUG_INLINE SubscribeUpdateAccountInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::geyser::SubscribeUpdateAccountInfo& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        pubkey_(arena, from.pubkey_),
        owner_(arena, from.owner_),
        data_(arena, from.data_),
        txn_signature_(arena, from.txn_signature_) {}

SubscribeUpdateAccountInfo::SubscribeUpdateAccountInfo(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SubscribeUpdateAccountInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SubscribeUpdateAccountInfo_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubscribeUpdateAccountInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, lamports_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, lamports_),
           offsetof(Impl_, executable_) -
               offsetof(Impl_, lamports_) +
               sizeof(Impl_::executable_));

  // @@protoc_insertion_point(copy_constructor:geyser.SubscribeUpdateAccountInfo)
}
PROTOBUF_NDEBUG_INLINE SubscribeUpdateAccountInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        pubkey_(arena),
        owner_(arena),
        data_(arena),
        txn_signature_(arena) {}

inline void SubscribeUpdateAccountInfo::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, lamports_),
           0,
           offsetof(Impl_, executable_) -
               offsetof(Impl_, lamports_) +
               sizeof(Impl_::executable_));
}
SubscribeUpdateAccountInfo::~SubscribeUpdateAccountInfo() {
  // @@protoc_insertion_point(destructor:geyser.SubscribeUpdateAccountInfo)
  SharedDtor(*this);
}
inline void SubscribeUpdateAccountInfo::SharedDtor(MessageLite& self) {
  SubscribeUpdateAccountInfo& this_ = static_cast<SubscribeUpdateAccountInfo&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.pubkey_.Destroy();
  this_._impl_.owner_.Destroy();
  this_._impl_.data_.Destroy();
  this_._impl_.txn_signature_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SubscribeUpdateAccountInfo::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SubscribeUpdateAccountInfo(arena);
}
constexpr auto SubscribeUpdateAccountInfo::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SubscribeUpdateAccountInfo),
                                            alignof(SubscribeUpdateAccountInfo));
}
constexpr auto SubscribeUpdateAccountInfo::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SubscribeUpdateAccountInfo_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SubscribeUpdateAccountInfo::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SubscribeUpdateAccountInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SubscribeUpdateAccountInfo::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SubscribeUpdateAccountInfo>(), &SubscribeUpdateAccountInfo::ByteSizeLong,
              &SubscribeUpdateAccountInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SubscribeUpdateAccountInfo, _impl_._cached_size_),
          false,
      },
      &SubscribeUpdateAccountInfo::kDescriptorMethods,
      &descriptor_table_geyser_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SubscribeUpdateAccountInfo_class_data_ =
        SubscribeUpdateAccountInfo::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SubscribeUpdateAccountInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SubscribeUpdateAccountInfo_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SubscribeUpdateAccountInfo_class_data_.tc_table);
  return SubscribeUpdateAccountInfo_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 0, 0, 2>
SubscribeUpdateAccountInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SubscribeUpdateAccountInfo, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    SubscribeUpdateAccountInfo_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::geyser::SubscribeUpdateAccountInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional bytes txn_signature = 8;
    {::_pbi::TcParser::FastBS1,
     {66, 3, 0, PROTOBUF_FIELD_OFFSET(SubscribeUpdateAccountInfo, _impl_.txn_signature_)}},
    // bytes pubkey = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SubscribeUpdateAccountInfo, _impl_.pubkey_)}},
    // uint64 lamports = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SubscribeUpdateAccountInfo, _impl_.lamports_), 4>(),
     {16, 4, 0, PROTOBUF_FIELD_OFFSET(SubscribeUpdateAccountInfo, _impl_.lamports_)}},
    // bytes owner = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(SubscribeUpdateAccountInfo, _impl_.owner_)}},
    // bool executable = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SubscribeUpdateAccountInfo, _impl_.executable_), 7>(),
     {32, 7, 0, PROTOBUF_FIELD_OFFSET(SubscribeUpdateAccountInfo, _impl_.executable_)}},
    // uint64 rent_epoch = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SubscribeUpdateAccountInfo, _impl_.rent_epoch_), 5>(),
     {40, 5, 0, PROTOBUF_FIELD_OFFSET(SubscribeUpdateAccountInfo, _impl_.rent_epoch_)}},
    // bytes data = 6;
    {::_pbi::TcParser::FastBS1,
     {50, 2, 0, PROTOBUF_FIELD_OFFSET(SubscribeUpdateAccountInfo, _impl_.data_)}},
    // uint64 write_version = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SubscribeUpdateAccountInfo, _impl_.write_version_), 6>(),
     {56, 6, 0, PROTOBUF_FIELD_OFFSET(SubscribeUpdateAccountInfo, _impl_.write_version_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes pubkey = 1;
    {PROTOBUF_FIELD_OFFSET(SubscribeUpdateAccountInfo, _impl_.pubkey_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // uint64 lamports = 2;
    {PROTOBUF_FIELD_OFFSET(SubscribeUpdateAccountInfo, _impl_.lamports_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // bytes owner = 3;
    {PROTOBUF_FIELD_OFFSET(SubscribeUpdateAccountInfo, _impl_.owner_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // bool executable = 4;
    {PROTOBUF_FIELD_OFFSET(SubscribeUpdateAccountInfo, _impl_.executable_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // uint64 rent_epoch = 5;
    {PROTOBUF_FIELD_OFFSET(SubscribeUpdateAccountInfo, _impl_.rent_epoch_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // bytes data = 6;
    {PROTOBUF_FIELD_OFFSET(SubscribeUpdateAccountInfo, _impl_.data_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // uint64 write_version = 7;
    {PROTOBUF_FIELD_OFFSET(SubscribeUpdateAccountInfo, _impl_.write_version_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional bytes txn_signature = 8;
    {PROTOBUF_FIELD_OFFSET(SubscribeUpdateAccountInfo, _impl_.txn_signature_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void SubscribeUpdateAccountInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:geyser.SubscribeUpdateAccountInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.pubkey_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.owner_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.data_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _impl_.txn_signature_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x000000f0u) != 0) {
    ::memset(&_impl_.lamports_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.executable_) -
        reinterpret_cast<char*>(&_impl_.lamports_)) + sizeof(_impl_.executable_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SubscribeUpdateAccountInfo::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SubscribeUpdateAccountInfo& this_ = static_cast<const SubscribeUpdateAccountInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SubscribeUpdateAccountInfo::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SubscribeUpdateAccountInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:geyser.SubscribeUpdateAccountInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes pubkey = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_pubkey().empty()) {
      const ::std::string& _s = this_._internal_pubkey();
      target = stream->WriteBytesMaybeAliased(1, _s, target);
    }
  }

  // uint64 lamports = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000010u) != 0) {
    if (this_._internal_lamports() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          2, this_._internal_lamports(), target);
    }
  }

  // bytes owner = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_owner().empty()) {
      const ::std::string& _s = this_._internal_owner();
      target = stream->WriteBytesMaybeAliased(3, _s, target);
    }
  }

  // bool executable = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000080u) != 0) {
    if (this_._internal_executable() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          4, this_._internal_executable(), target);
    }
  }

  // uint64 rent_epoch = 5;
  if ((this_._impl_._has_bits_[0] & 0x00000020u) != 0) {
    if (this_._internal_rent_epoch() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          5, this_._internal_rent_epoch(), target);
    }
  }

  // bytes data = 6;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (!this_._internal_data().empty()) {
      const ::std::string& _s = this_._internal_data();
      target = stream->WriteBytesMaybeAliased(6, _s, target);
    }
  }

  // uint64 write_version = 7;
  if ((this_._impl_._has_bits_[0] & 0x00000040u) != 0) {
    if (this_._internal_write_version() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          7, this_._internal_write_version(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional bytes txn_signature = 8;
  if ((cached_has_bits & 0x00000008u) != 0) {
    const ::std::string& _s = this_._internal_txn_signature();
    target = stream->WriteBytesMaybeAliased(8, _s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:geyser.SubscribeUpdateAccountInfo)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SubscribeUpdateAccountInfo::ByteSizeLong(const MessageLite& base) {
  const SubscribeUpdateAccountInfo& this_ = static_cast<const SubscribeUpdateAccountInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SubscribeUpdateAccountInfo::ByteSizeLong() const {
  const SubscribeUpdateAccountInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:geyser.SubscribeUpdateAccountInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    // bytes pubkey = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_pubkey().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_pubkey());
      }
    }
    // bytes owner = 3;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_owner().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_owner());
      }
    }
    // bytes data = 6;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!this_._internal_data().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_data());
      }
    }
    // optional bytes txn_signature = 8;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this_._internal_txn_signature());
    }
    // uint64 lamports = 2;
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (this_._internal_lamports() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_lamports());
      }
    }
    // uint64 rent_epoch = 5;
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (this_._internal_rent_epoch() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_rent_epoch());
      }
    }
    // uint64 write_version = 7;
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (this_._internal_write_version() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_write_version());
      }
    }
    // bool executable = 4;
    if ((cached_has_bits & 0x00000080u) != 0) {
      if (this_._internal_executable() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SubscribeUpdateAccountInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SubscribeUpdateAccountInfo*>(&to_msg);
  auto& from = static_cast<const SubscribeUpdateAccountInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:geyser.SubscribeUpdateAccountInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_pubkey().empty()) {
        _this->_internal_set_pubkey(from._internal_pubkey());
      } else {
        if (_this->_impl_.pubkey_.IsDefault()) {
          _this->_internal_set_pubkey("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_owner().empty()) {
        _this->_internal_set_owner(from._internal_owner());
      } else {
        if (_this->_impl_.owner_.IsDefault()) {
          _this->_internal_set_owner("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!from._internal_data().empty()) {
        _this->_internal_set_data(from._internal_data());
      } else {
        if (_this->_impl_.data_.IsDefault()) {
          _this->_internal_set_data("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_internal_set_txn_signature(from._internal_txn_signature());
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (from._internal_lamports() != 0) {
        _this->_impl_.lamports_ = from._impl_.lamports_;
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (from._internal_rent_epoch() != 0) {
        _this->_impl_.rent_epoch_ = from._impl_.rent_epoch_;
      }
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (from._internal_write_version() != 0) {
        _this->_impl_.write_version_ = from._impl_.write_version_;
      }
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      if (from._internal_executable() != 0) {
        _this->_impl_.executable_ = from._impl_.executable_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SubscribeUpdateAccountInfo::CopyFrom(const SubscribeUpdateAccountInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:geyser.SubscribeUpdateAccountInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SubscribeUpdateAccountInfo::InternalSwap(SubscribeUpdateAccountInfo* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.pubkey_, &other->_impl_.pubkey_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.owner_, &other->_impl_.owner_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, &other->_impl_.data_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.txn_signature_, &other->_impl_.txn_signature_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SubscribeUpdateAccountInfo, _impl_.executable_)
      + sizeof(SubscribeUpdateAccountInfo::_impl_.executable_)
      - PROTOBUF_FIELD_OFFSET(SubscribeUpdateAccountInfo, _impl_.lamports_)>(
          reinterpret_cast<char*>(&_impl_.lamports_),
          reinterpret_cast<char*>(&other->_impl_.lamports_));
}

::google::protobuf::Metadata SubscribeUpdateAccountInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubscribeUpdateSlot::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SubscribeUpdateSlot>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SubscribeUpdateSlot, _impl_._has_bits_);
};

SubscribeUpdateSlot::SubscribeUpdateSlot(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SubscribeUpdateSlot_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:geyser.SubscribeUpdateSlot)
}
PROTOBUF_NDEBUG_INLINE SubscribeUpdateSlot::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::geyser::SubscribeUpdateSlot& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        dead_error_(arena, from.dead_error_) {}

SubscribeUpdateSlot::SubscribeUpdateSlot(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SubscribeUpdateSlot& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SubscribeUpdateSlot_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubscribeUpdateSlot* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, slot_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, slot_),
           offsetof(Impl_, status_) -
               offsetof(Impl_, slot_) +
               sizeof(Impl_::status_));

  // @@protoc_insertion_point(copy_constructor:geyser.SubscribeUpdateSlot)
}
PROTOBUF_NDEBUG_INLINE SubscribeUpdateSlot::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        dead_error_(arena) {}

inline void SubscribeUpdateSlot::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, slot_),
           0,
           offsetof(Impl_, status_) -
               offsetof(Impl_, slot_) +
               sizeof(Impl_::status_));
}
SubscribeUpdateSlot::~SubscribeUpdateSlot() {
  // @@protoc_insertion_point(destructor:geyser.SubscribeUpdateSlot)
  SharedDtor(*this);
}
inline void SubscribeUpdateSlot::SharedDtor(MessageLite& self) {
  SubscribeUpdateSlot& this_ = static_cast<SubscribeUpdateSlot&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.dead_error_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SubscribeUpdateSlot::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SubscribeUpdateSlot(arena);
}
constexpr auto SubscribeUpdateSlot::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SubscribeUpdateSlot),
                                            alignof(SubscribeUpdateSlot));
}
constexpr auto SubscribeUpdateSlot::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SubscribeUpdateSlot_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SubscribeUpdateSlot::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SubscribeUpdateSlot>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SubscribeUpdateSlot::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SubscribeUpdateSlot>(), &SubscribeUpdateSlot::ByteSizeLong,
              &SubscribeUpdateSlot::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SubscribeUpdateSlot, _impl_._cached_size_),
          false,
      },
      &SubscribeUpdateSlot::kDescriptorMethods,
      &descriptor_table_geyser_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SubscribeUpdateSlot_class_data_ =
        SubscribeUpdateSlot::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SubscribeUpdateSlot::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SubscribeUpdateSlot_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SubscribeUpdateSlot_class_data_.tc_table);
  return SubscribeUpdateSlot_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 45, 2>
SubscribeUpdateSlot::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SubscribeUpdateSlot, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    SubscribeUpdateSlot_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::geyser::SubscribeUpdateSlot>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional string dead_error = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(SubscribeUpdateSlot, _impl_.dead_error_)}},
    // uint64 slot = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SubscribeUpdateSlot, _impl_.slot_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(SubscribeUpdateSlot, _impl_.slot_)}},
    // optional uint64 parent = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SubscribeUpdateSlot, _impl_.parent_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(SubscribeUpdateSlot, _impl_.parent_)}},
    // .geyser.SlotStatus status = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SubscribeUpdateSlot, _impl_.status_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(SubscribeUpdateSlot, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 slot = 1;
    {PROTOBUF_FIELD_OFFSET(SubscribeUpdateSlot, _impl_.slot_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint64 parent = 2;
    {PROTOBUF_FIELD_OFFSET(SubscribeUpdateSlot, _impl_.parent_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // .geyser.SlotStatus status = 3;
    {PROTOBUF_FIELD_OFFSET(SubscribeUpdateSlot, _impl_.status_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // optional string dead_error = 4;
    {PROTOBUF_FIELD_OFFSET(SubscribeUpdateSlot, _impl_.dead_error_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\32\0\0\0\12\0\0\0"
    "geyser.SubscribeUpdateSlot"
    "dead_error"
  }},
};
PROTOBUF_NOINLINE void SubscribeUpdateSlot::Clear() {
// @@protoc_insertion_point(message_clear_start:geyser.SubscribeUpdateSlot)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.dead_error_.ClearNonDefaultToEmpty();
  }
  if ((cached_has_bits & 0x0000000eu) != 0) {
    ::memset(&_impl_.slot_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.status_) -
        reinterpret_cast<char*>(&_impl_.slot_)) + sizeof(_impl_.status_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SubscribeUpdateSlot::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SubscribeUpdateSlot& this_ = static_cast<const SubscribeUpdateSlot&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SubscribeUpdateSlot::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SubscribeUpdateSlot& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:geyser.SubscribeUpdateSlot)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 slot = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_slot() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          1, this_._internal_slot(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint64 parent = 2;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this_._internal_parent(), target);
  }

  // .geyser.SlotStatus status = 3;
  if ((cached_has_bits & 0x00000008u) != 0) {
    if (this_._internal_status() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          3, this_._internal_status(), target);
    }
  }

  // optional string dead_error = 4;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const ::std::string& _s = this_._internal_dead_error();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "geyser.SubscribeUpdateSlot.dead_error");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:geyser.SubscribeUpdateSlot)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SubscribeUpdateSlot::ByteSizeLong(const MessageLite& base) {
  const SubscribeUpdateSlot& this_ = static_cast<const SubscribeUpdateSlot&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SubscribeUpdateSlot::ByteSizeLong() const {
  const SubscribeUpdateSlot& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:geyser.SubscribeUpdateSlot)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // optional string dead_error = 4;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_dead_error());
    }
    // uint64 slot = 1;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_slot() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_slot());
      }
    }
    // optional uint64 parent = 2;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_parent());
    }
    // .geyser.SlotStatus status = 3;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_status() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_status());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SubscribeUpdateSlot::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SubscribeUpdateSlot*>(&to_msg);
  auto& from = static_cast<const SubscribeUpdateSlot&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:geyser.SubscribeUpdateSlot)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_dead_error(from._internal_dead_error());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_slot() != 0) {
        _this->_impl_.slot_ = from._impl_.slot_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.parent_ = from._impl_.parent_;
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_status() != 0) {
        _this->_impl_.status_ = from._impl_.status_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SubscribeUpdateSlot::CopyFrom(const SubscribeUpdateSlot& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:geyser.SubscribeUpdateSlot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SubscribeUpdateSlot::InternalSwap(SubscribeUpdateSlot* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.dead_error_, &other->_impl_.dead_error_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SubscribeUpdateSlot, _impl_.status_)
      + sizeof(SubscribeUpdateSlot::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(SubscribeUpdateSlot, _impl_.slot_)>(
          reinterpret_cast<char*>(&_impl_.slot_),
          reinterpret_cast<char*>(&other->_impl_.slot_));
}

::google::protobuf::Metadata SubscribeUpdateSlot::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubscribeUpdateTransaction::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SubscribeUpdateTransaction>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SubscribeUpdateTransaction, _impl_._has_bits_);
};

SubscribeUpdateTransaction::SubscribeUpdateTransaction(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SubscribeUpdateTransaction_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:geyser.SubscribeUpdateTransaction)
}
PROTOBUF_NDEBUG_INLINE SubscribeUpdateTransaction::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::geyser::SubscribeUpdateTransaction& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SubscribeUpdateTransaction::SubscribeUpdateTransaction(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SubscribeUpdateTransaction& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SubscribeUpdateTransaction_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubscribeUpdateTransaction* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.transaction_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.transaction_)
                : nullptr;
  _impl_.slot_ = from._impl_.slot_;

  // @@protoc_insertion_point(copy_constructor:geyser.SubscribeUpdateTransaction)
}
PROTOBUF_NDEBUG_INLINE SubscribeUpdateTransaction::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void SubscribeUpdateTransaction::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, transaction_),
           0,
           offsetof(Impl_, slot_) -
               offsetof(Impl_, transaction_) +
               sizeof(Impl_::slot_));
}
SubscribeUpdateTransaction::~SubscribeUpdateTransaction() {
  // @@protoc_insertion_point(destructor:geyser.SubscribeUpdateTransaction)
  SharedDtor(*this);
}
inline void SubscribeUpdateTransaction::SharedDtor(MessageLite& self) {
  SubscribeUpdateTransaction& this_ = static_cast<SubscribeUpdateTransaction&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.transaction_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SubscribeUpdateTransaction::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SubscribeUpdateTransaction(arena);
}
constexpr auto SubscribeUpdateTransaction::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SubscribeUpdateTransaction),
                                            alignof(SubscribeUpdateTransaction));
}
constexpr auto SubscribeUpdateTransaction::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SubscribeUpdateTransaction_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SubscribeUpdateTransaction::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SubscribeUpdateTransaction>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SubscribeUpdateTransaction::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SubscribeUpdateTransaction>(), &SubscribeUpdateTransaction::ByteSizeLong,
              &SubscribeUpdateTransaction::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SubscribeUpdateTransaction, _impl_._cached_size_),
          false,
      },
      &SubscribeUpdateTransaction::kDescriptorMethods,
      &descriptor_table_geyser_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SubscribeUpdateTransaction_class_data_ =
        SubscribeUpdateTransaction::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SubscribeUpdateTransaction::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SubscribeUpdateTransaction_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SubscribeUpdateTransaction_class_data_.tc_table);
  return SubscribeUpdateTransaction_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2>
SubscribeUpdateTransaction::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SubscribeUpdateTransaction, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SubscribeUpdateTransaction_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::geyser::SubscribeUpdateTransaction>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 slot = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SubscribeUpdateTransaction, _impl_.slot_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(SubscribeUpdateTransaction, _impl_.slot_)}},
    // .geyser.SubscribeUpdateTransactionInfo transaction = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SubscribeUpdateTransaction, _impl_.transaction_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .geyser.SubscribeUpdateTransactionInfo transaction = 1;
    {PROTOBUF_FIELD_OFFSET(SubscribeUpdateTransaction, _impl_.transaction_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint64 slot = 2;
    {PROTOBUF_FIELD_OFFSET(SubscribeUpdateTransaction, _impl_.slot_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::geyser::SubscribeUpdateTransactionInfo>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void SubscribeUpdateTransaction::Clear() {
// @@protoc_insertion_point(message_clear_start:geyser.SubscribeUpdateTransaction)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.transaction_ != nullptr);
    _impl_.transaction_->Clear();
  }
  _impl_.slot_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SubscribeUpdateTransaction::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SubscribeUpdateTransaction& this_ = static_cast<const SubscribeUpdateTransaction&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SubscribeUpdateTransaction::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SubscribeUpdateTransaction& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:geyser.SubscribeUpdateTransaction)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .geyser.SubscribeUpdateTransactionInfo transaction = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.transaction_, this_._impl_.transaction_->GetCachedSize(), target,
        stream);
  }

  // uint64 slot = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    if (this_._internal_slot() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          2, this_._internal_slot(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:geyser.SubscribeUpdateTransaction)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SubscribeUpdateTransaction::ByteSizeLong(const MessageLite& base) {
  const SubscribeUpdateTransaction& this_ = static_cast<const SubscribeUpdateTransaction&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SubscribeUpdateTransaction::ByteSizeLong() const {
  const SubscribeUpdateTransaction& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:geyser.SubscribeUpdateTransaction)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // .geyser.SubscribeUpdateTransactionInfo transaction = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.transaction_);
    }
    // uint64 slot = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_slot() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_slot());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SubscribeUpdateTransaction::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SubscribeUpdateTransaction*>(&to_msg);
  auto& from = static_cast<const SubscribeUpdateTransaction&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:geyser.SubscribeUpdateTransaction)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.transaction_ != nullptr);
      if (_this->_impl_.transaction_ == nullptr) {
        _this->_impl_.transaction_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.transaction_);
      } else {
        _this->_impl_.transaction_->MergeFrom(*from._impl_.transaction_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_slot() != 0) {
        _this->_impl_.slot_ = from._impl_.slot_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SubscribeUpdateTransaction::CopyFrom(const SubscribeUpdateTransaction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:geyser.SubscribeUpdateTransaction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SubscribeUpdateTransaction::InternalSwap(SubscribeUpdateTransaction* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SubscribeUpdateTransaction, _impl_.slot_)
      + sizeof(SubscribeUpdateTransaction::_impl_.slot_)
      - PROTOBUF_FIELD_OFFSET(SubscribeUpdateTransaction, _impl_.transaction_)>(
          reinterpret_cast<char*>(&_impl_.transaction_),
          reinterpret_cast<char*>(&other->_impl_.transaction_));
}

::google::protobuf::Metadata SubscribeUpdateTransaction::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubscribeUpdateTransactionInfo::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SubscribeUpdateTransactionInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SubscribeUpdateTransactionInfo, _impl_._has_bits_);
};

void SubscribeUpdateTransactionInfo::clear_transaction() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.transaction_ != nullptr) _impl_.transaction_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void SubscribeUpdateTransactionInfo::clear_meta() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.meta_ != nullptr) _impl_.meta_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
SubscribeUpdateTransactionInfo::SubscribeUpdateTransactionInfo(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SubscribeUpdateTransactionInfo_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:geyser.SubscribeUpdateTransactionInfo)
}
PROTOBUF_NDEBUG_INLINE SubscribeUpdateTransactionInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::geyser::SubscribeUpdateTransactionInfo& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        signature_(arena, from.signature_) {}

SubscribeUpdateTransactionInfo::SubscribeUpdateTransactionInfo(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SubscribeUpdateTransactionInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SubscribeUpdateTransactionInfo_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubscribeUpdateTransactionInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.transaction_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.transaction_)
                : nullptr;
  _impl_.meta_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.meta_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, index_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, index_),
           offsetof(Impl_, is_vote_) -
               offsetof(Impl_, index_) +
               sizeof(Impl_::is_vote_));

  // @@protoc_insertion_point(copy_constructor:geyser.SubscribeUpdateTransactionInfo)
}
PROTOBUF_NDEBUG_INLINE SubscribeUpdateTransactionInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        signature_(arena) {}

inline void SubscribeUpdateTransactionInfo::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, transaction_),
           0,
           offsetof(Impl_, is_vote_) -
               offsetof(Impl_, transaction_) +
               sizeof(Impl_::is_vote_));
}
SubscribeUpdateTransactionInfo::~SubscribeUpdateTransactionInfo() {
  // @@protoc_insertion_point(destructor:geyser.SubscribeUpdateTransactionInfo)
  SharedDtor(*this);
}
inline void SubscribeUpdateTransactionInfo::SharedDtor(MessageLite& self) {
  SubscribeUpdateTransactionInfo& this_ = static_cast<SubscribeUpdateTransactionInfo&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.signature_.Destroy();
  delete this_._impl_.transaction_;
  delete this_._impl_.meta_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SubscribeUpdateTransactionInfo::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SubscribeUpdateTransactionInfo(arena);
}
constexpr auto SubscribeUpdateTransactionInfo::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SubscribeUpdateTransactionInfo),
                                            alignof(SubscribeUpdateTransactionInfo));
}
constexpr auto SubscribeUpdateTransactionInfo::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SubscribeUpdateTransactionInfo_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SubscribeUpdateTransactionInfo::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SubscribeUpdateTransactionInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SubscribeUpdateTransactionInfo::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SubscribeUpdateTransactionInfo>(), &SubscribeUpdateTransactionInfo::ByteSizeLong,
              &SubscribeUpdateTransactionInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SubscribeUpdateTransactionInfo, _impl_._cached_size_),
          false,
      },
      &SubscribeUpdateTransactionInfo::kDescriptorMethods,
      &descriptor_table_geyser_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SubscribeUpdateTransactionInfo_class_data_ =
        SubscribeUpdateTransactionInfo::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SubscribeUpdateTransactionInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SubscribeUpdateTransactionInfo_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SubscribeUpdateTransactionInfo_class_data_.tc_table);
  return SubscribeUpdateTransactionInfo_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 2, 0, 2>
SubscribeUpdateTransactionInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SubscribeUpdateTransactionInfo, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SubscribeUpdateTransactionInfo_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::geyser::SubscribeUpdateTransactionInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bytes signature = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SubscribeUpdateTransactionInfo, _impl_.signature_)}},
    // bool is_vote = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SubscribeUpdateTransactionInfo, _impl_.is_vote_), 4>(),
     {16, 4, 0, PROTOBUF_FIELD_OFFSET(SubscribeUpdateTransactionInfo, _impl_.is_vote_)}},
    // .solana.storage.ConfirmedBlock.Transaction transaction = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(SubscribeUpdateTransactionInfo, _impl_.transaction_)}},
    // .solana.storage.ConfirmedBlock.TransactionStatusMeta meta = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 2, 1, PROTOBUF_FIELD_OFFSET(SubscribeUpdateTransactionInfo, _impl_.meta_)}},
    // uint64 index = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SubscribeUpdateTransactionInfo, _impl_.index_), 3>(),
     {40, 3, 0, PROTOBUF_FIELD_OFFSET(SubscribeUpdateTransactionInfo, _impl_.index_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes signature = 1;
    {PROTOBUF_FIELD_OFFSET(SubscribeUpdateTransactionInfo, _impl_.signature_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // bool is_vote = 2;
    {PROTOBUF_FIELD_OFFSET(SubscribeUpdateTransactionInfo, _impl_.is_vote_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // .solana.storage.ConfirmedBlock.Transaction transaction = 3;
    {PROTOBUF_FIELD_OFFSET(SubscribeUpdateTransactionInfo, _impl_.transaction_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .solana.storage.ConfirmedBlock.TransactionStatusMeta meta = 4;
    {PROTOBUF_FIELD_OFFSET(SubscribeUpdateTransactionInfo, _impl_.meta_), _Internal::kHasBitsOffset + 2, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint64 index = 5;
    {PROTOBUF_FIELD_OFFSET(SubscribeUpdateTransactionInfo, _impl_.index_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::solana::storage::ConfirmedBlock::Transaction>()},
      {::_pbi::TcParser::GetTable<::solana::storage::ConfirmedBlock::TransactionStatusMeta>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void SubscribeUpdateTransactionInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:geyser.SubscribeUpdateTransactionInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.signature_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.transaction_ != nullptr);
      _impl_.transaction_->Clear();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.meta_ != nullptr);
      _impl_.meta_->Clear();
    }
  }
  if ((cached_has_bits & 0x00000018u) != 0) {
    ::memset(&_impl_.index_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.is_vote_) -
        reinterpret_cast<char*>(&_impl_.index_)) + sizeof(_impl_.is_vote_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SubscribeUpdateTransactionInfo::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SubscribeUpdateTransactionInfo& this_ = static_cast<const SubscribeUpdateTransactionInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SubscribeUpdateTransactionInfo::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SubscribeUpdateTransactionInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:geyser.SubscribeUpdateTransactionInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes signature = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_signature().empty()) {
      const ::std::string& _s = this_._internal_signature();
      target = stream->WriteBytesMaybeAliased(1, _s, target);
    }
  }

  // bool is_vote = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000010u) != 0) {
    if (this_._internal_is_vote() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          2, this_._internal_is_vote(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .solana.storage.ConfirmedBlock.Transaction transaction = 3;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.transaction_, this_._impl_.transaction_->GetCachedSize(), target,
        stream);
  }

  // .solana.storage.ConfirmedBlock.TransactionStatusMeta meta = 4;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.meta_, this_._impl_.meta_->GetCachedSize(), target,
        stream);
  }

  // uint64 index = 5;
  if ((cached_has_bits & 0x00000008u) != 0) {
    if (this_._internal_index() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          5, this_._internal_index(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:geyser.SubscribeUpdateTransactionInfo)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SubscribeUpdateTransactionInfo::ByteSizeLong(const MessageLite& base) {
  const SubscribeUpdateTransactionInfo& this_ = static_cast<const SubscribeUpdateTransactionInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SubscribeUpdateTransactionInfo::ByteSizeLong() const {
  const SubscribeUpdateTransactionInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:geyser.SubscribeUpdateTransactionInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    // bytes signature = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_signature().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_signature());
      }
    }
    // .solana.storage.ConfirmedBlock.Transaction transaction = 3;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.transaction_);
    }
    // .solana.storage.ConfirmedBlock.TransactionStatusMeta meta = 4;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.meta_);
    }
    // uint64 index = 5;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_index() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_index());
      }
    }
    // bool is_vote = 2;
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (this_._internal_is_vote() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SubscribeUpdateTransactionInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SubscribeUpdateTransactionInfo*>(&to_msg);
  auto& from = static_cast<const SubscribeUpdateTransactionInfo&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:geyser.SubscribeUpdateTransactionInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_signature().empty()) {
        _this->_internal_set_signature(from._internal_signature());
      } else {
        if (_this->_impl_.signature_.IsDefault()) {
          _this->_internal_set_signature("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.transaction_ != nullptr);
      if (_this->_impl_.transaction_ == nullptr) {
        _this->_impl_.transaction_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.transaction_);
      } else {
        _this->_impl_.transaction_->MergeFrom(*from._impl_.transaction_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.meta_ != nullptr);
      if (_this->_impl_.meta_ == nullptr) {
        _this->_impl_.meta_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.meta_);
      } else {
        _this->_impl_.meta_->MergeFrom(*from._impl_.meta_);
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_index() != 0) {
        _this->_impl_.index_ = from._impl_.index_;
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (from._internal_is_vote() != 0) {
        _this->_impl_.is_vote_ = from._impl_.is_vote_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SubscribeUpdateTransactionInfo::CopyFrom(const SubscribeUpdateTransactionInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:geyser.SubscribeUpdateTransactionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SubscribeUpdateTransactionInfo::InternalSwap(SubscribeUpdateTransactionInfo* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.signature_, &other->_impl_.signature_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SubscribeUpdateTransactionInfo, _impl_.is_vote_)
      + sizeof(SubscribeUpdateTransactionInfo::_impl_.is_vote_)
      - PROTOBUF_FIELD_OFFSET(SubscribeUpdateTransactionInfo, _impl_.transaction_)>(
          reinterpret_cast<char*>(&_impl_.transaction_),
          reinterpret_cast<char*>(&other->_impl_.transaction_));
}

::google::protobuf::Metadata SubscribeUpdateTransactionInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubscribeUpdateTransactionStatus::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SubscribeUpdateTransactionStatus>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SubscribeUpdateTransactionStatus, _impl_._has_bits_);
};

void SubscribeUpdateTransactionStatus::clear_err() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.err_ != nullptr) _impl_.err_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
SubscribeUpdateTransactionStatus::SubscribeUpdateTransactionStatus(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SubscribeUpdateTransactionStatus_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:geyser.SubscribeUpdateTransactionStatus)
}
PROTOBUF_NDEBUG_INLINE SubscribeUpdateTransactionStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::geyser::SubscribeUpdateTransactionStatus& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        signature_(arena, from.signature_) {}

SubscribeUpdateTransactionStatus::SubscribeUpdateTransactionStatus(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SubscribeUpdateTransactionStatus& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SubscribeUpdateTransactionStatus_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubscribeUpdateTransactionStatus* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.err_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.err_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, slot_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, slot_),
           offsetof(Impl_, is_vote_) -
               offsetof(Impl_, slot_) +
               sizeof(Impl_::is_vote_));

  // @@protoc_insertion_point(copy_constructor:geyser.SubscribeUpdateTransactionStatus)
}
PROTOBUF_NDEBUG_INLINE SubscribeUpdateTransactionStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        signature_(arena) {}

inline void SubscribeUpdateTransactionStatus::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, err_),
           0,
           offsetof(Impl_, is_vote_) -
               offsetof(Impl_, err_) +
               sizeof(Impl_::is_vote_));
}
SubscribeUpdateTransactionStatus::~SubscribeUpdateTransactionStatus() {
  // @@protoc_insertion_point(destructor:geyser.SubscribeUpdateTransactionStatus)
  SharedDtor(*this);
}
inline void SubscribeUpdateTransactionStatus::SharedDtor(MessageLite& self) {
  SubscribeUpdateTransactionStatus& this_ = static_cast<SubscribeUpdateTransactionStatus&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.signature_.Destroy();
  delete this_._impl_.err_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SubscribeUpdateTransactionStatus::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SubscribeUpdateTransactionStatus(arena);
}
constexpr auto SubscribeUpdateTransactionStatus::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SubscribeUpdateTransactionStatus),
                                            alignof(SubscribeUpdateTransactionStatus));
}
constexpr auto SubscribeUpdateTransactionStatus::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SubscribeUpdateTransactionStatus_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SubscribeUpdateTransactionStatus::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SubscribeUpdateTransactionStatus>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SubscribeUpdateTransactionStatus::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SubscribeUpdateTransactionStatus>(), &SubscribeUpdateTransactionStatus::ByteSizeLong,
              &SubscribeUpdateTransactionStatus::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SubscribeUpdateTransactionStatus, _impl_._cached_size_),
          false,
      },
      &SubscribeUpdateTransactionStatus::kDescriptorMethods,
      &descriptor_table_geyser_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SubscribeUpdateTransactionStatus_class_data_ =
        SubscribeUpdateTransactionStatus::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SubscribeUpdateTransactionStatus::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SubscribeUpdateTransactionStatus_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SubscribeUpdateTransactionStatus_class_data_.tc_table);
  return SubscribeUpdateTransactionStatus_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 0, 2>
SubscribeUpdateTransactionStatus::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SubscribeUpdateTransactionStatus, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SubscribeUpdateTransactionStatus_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::geyser::SubscribeUpdateTransactionStatus>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 slot = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SubscribeUpdateTransactionStatus, _impl_.slot_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(SubscribeUpdateTransactionStatus, _impl_.slot_)}},
    // bytes signature = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(SubscribeUpdateTransactionStatus, _impl_.signature_)}},
    // bool is_vote = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SubscribeUpdateTransactionStatus, _impl_.is_vote_), 4>(),
     {24, 4, 0, PROTOBUF_FIELD_OFFSET(SubscribeUpdateTransactionStatus, _impl_.is_vote_)}},
    // uint64 index = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SubscribeUpdateTransactionStatus, _impl_.index_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(SubscribeUpdateTransactionStatus, _impl_.index_)}},
    // .solana.storage.ConfirmedBlock.TransactionError err = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 1, 0, PROTOBUF_FIELD_OFFSET(SubscribeUpdateTransactionStatus, _impl_.err_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 slot = 1;
    {PROTOBUF_FIELD_OFFSET(SubscribeUpdateTransactionStatus, _impl_.slot_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // bytes signature = 2;
    {PROTOBUF_FIELD_OFFSET(SubscribeUpdateTransactionStatus, _impl_.signature_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // bool is_vote = 3;
    {PROTOBUF_FIELD_OFFSET(SubscribeUpdateTransactionStatus, _impl_.is_vote_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // uint64 index = 4;
    {PROTOBUF_FIELD_OFFSET(SubscribeUpdateTransactionStatus, _impl_.index_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // .solana.storage.ConfirmedBlock.TransactionError err = 5;
    {PROTOBUF_FIELD_OFFSET(SubscribeUpdateTransactionStatus, _impl_.err_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::solana::storage::ConfirmedBlock::TransactionError>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void SubscribeUpdateTransactionStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:geyser.SubscribeUpdateTransactionStatus)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.signature_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.err_ != nullptr);
      _impl_.err_->Clear();
    }
  }
  if ((cached_has_bits & 0x0000001cu) != 0) {
    ::memset(&_impl_.slot_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.is_vote_) -
        reinterpret_cast<char*>(&_impl_.slot_)) + sizeof(_impl_.is_vote_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SubscribeUpdateTransactionStatus::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SubscribeUpdateTransactionStatus& this_ = static_cast<const SubscribeUpdateTransactionStatus&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SubscribeUpdateTransactionStatus::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SubscribeUpdateTransactionStatus& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:geyser.SubscribeUpdateTransactionStatus)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 slot = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_slot() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          1, this_._internal_slot(), target);
    }
  }

  // bytes signature = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_signature().empty()) {
      const ::std::string& _s = this_._internal_signature();
      target = stream->WriteBytesMaybeAliased(2, _s, target);
    }
  }

  // bool is_vote = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000010u) != 0) {
    if (this_._internal_is_vote() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          3, this_._internal_is_vote(), target);
    }
  }

  // uint64 index = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (this_._internal_index() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          4, this_._internal_index(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .solana.storage.ConfirmedBlock.TransactionError err = 5;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *this_._impl_.err_, this_._impl_.err_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:geyser.SubscribeUpdateTransactionStatus)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SubscribeUpdateTransactionStatus::ByteSizeLong(const MessageLite& base) {
  const SubscribeUpdateTransactionStatus& this_ = static_cast<const SubscribeUpdateTransactionStatus&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SubscribeUpdateTransactionStatus::ByteSizeLong() const {
  const SubscribeUpdateTransactionStatus& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:geyser.SubscribeUpdateTransactionStatus)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    // bytes signature = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_signature().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_signature());
      }
    }
    // .solana.storage.ConfirmedBlock.TransactionError err = 5;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.err_);
    }
    // uint64 slot = 1;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_slot() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_slot());
      }
    }
    // uint64 index = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_index() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_index());
      }
    }
    // bool is_vote = 3;
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (this_._internal_is_vote() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SubscribeUpdateTransactionStatus::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SubscribeUpdateTransactionStatus*>(&to_msg);
  auto& from = static_cast<const SubscribeUpdateTransactionStatus&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:geyser.SubscribeUpdateTransactionStatus)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_signature().empty()) {
        _this->_internal_set_signature(from._internal_signature());
      } else {
        if (_this->_impl_.signature_.IsDefault()) {
          _this->_internal_set_signature("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.err_ != nullptr);
      if (_this->_impl_.err_ == nullptr) {
        _this->_impl_.err_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.err_);
      } else {
        _this->_impl_.err_->MergeFrom(*from._impl_.err_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_slot() != 0) {
        _this->_impl_.slot_ = from._impl_.slot_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_index() != 0) {
        _this->_impl_.index_ = from._impl_.index_;
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (from._internal_is_vote() != 0) {
        _this->_impl_.is_vote_ = from._impl_.is_vote_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SubscribeUpdateTransactionStatus::CopyFrom(const SubscribeUpdateTransactionStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:geyser.SubscribeUpdateTransactionStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SubscribeUpdateTransactionStatus::InternalSwap(SubscribeUpdateTransactionStatus* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.signature_, &other->_impl_.signature_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SubscribeUpdateTransactionStatus, _impl_.is_vote_)
      + sizeof(SubscribeUpdateTransactionStatus::_impl_.is_vote_)
      - PROTOBUF_FIELD_OFFSET(SubscribeUpdateTransactionStatus, _impl_.err_)>(
          reinterpret_cast<char*>(&_impl_.err_),
          reinterpret_cast<char*>(&other->_impl_.err_));
}

::google::protobuf::Metadata SubscribeUpdateTransactionStatus::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubscribeUpdateBlock::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SubscribeUpdateBlock>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SubscribeUpdateBlock, _impl_._has_bits_);
};

void SubscribeUpdateBlock::clear_rewards() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.rewards_ != nullptr) _impl_.rewards_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void SubscribeUpdateBlock::clear_block_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.block_time_ != nullptr) _impl_.block_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void SubscribeUpdateBlock::clear_block_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.block_height_ != nullptr) _impl_.block_height_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
SubscribeUpdateBlock::SubscribeUpdateBlock(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SubscribeUpdateBlock_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:geyser.SubscribeUpdateBlock)
}
PROTOBUF_NDEBUG_INLINE SubscribeUpdateBlock::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::geyser::SubscribeUpdateBlock& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        transactions_{visibility, arena, from.transactions_},
        accounts_{visibility, arena, from.accounts_},
        entries_{visibility, arena, from.entries_},
        blockhash_(arena, from.blockhash_),
        parent_blockhash_(arena, from.parent_blockhash_) {}

SubscribeUpdateBlock::SubscribeUpdateBlock(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SubscribeUpdateBlock& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SubscribeUpdateBlock_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubscribeUpdateBlock* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.rewards_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.rewards_)
                : nullptr;
  _impl_.block_time_ = ((cached_has_bits & 0x00000008u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.block_time_)
                : nullptr;
  _impl_.block_height_ = ((cached_has_bits & 0x00000010u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.block_height_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, slot_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, slot_),
           offsetof(Impl_, entries_count_) -
               offsetof(Impl_, slot_) +
               sizeof(Impl_::entries_count_));

  // @@protoc_insertion_point(copy_constructor:geyser.SubscribeUpdateBlock)
}
PROTOBUF_NDEBUG_INLINE SubscribeUpdateBlock::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        transactions_{visibility, arena},
        accounts_{visibility, arena},
        entries_{visibility, arena},
        blockhash_(arena),
        parent_blockhash_(arena) {}

inline void SubscribeUpdateBlock::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, rewards_),
           0,
           offsetof(Impl_, entries_count_) -
               offsetof(Impl_, rewards_) +
               sizeof(Impl_::entries_count_));
}
SubscribeUpdateBlock::~SubscribeUpdateBlock() {
  // @@protoc_insertion_point(destructor:geyser.SubscribeUpdateBlock)
  SharedDtor(*this);
}
inline void SubscribeUpdateBlock::SharedDtor(MessageLite& self) {
  SubscribeUpdateBlock& this_ = static_cast<SubscribeUpdateBlock&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.blockhash_.Destroy();
  this_._impl_.parent_blockhash_.Destroy();
  delete this_._impl_.rewards_;
  delete this_._impl_.block_time_;
  delete this_._impl_.block_height_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SubscribeUpdateBlock::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SubscribeUpdateBlock(arena);
}
constexpr auto SubscribeUpdateBlock::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SubscribeUpdateBlock, _impl_.transactions_) +
          decltype(SubscribeUpdateBlock::_impl_.transactions_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(SubscribeUpdateBlock, _impl_.accounts_) +
          decltype(SubscribeUpdateBlock::_impl_.accounts_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(SubscribeUpdateBlock, _impl_.entries_) +
          decltype(SubscribeUpdateBlock::_impl_.entries_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(SubscribeUpdateBlock), alignof(SubscribeUpdateBlock), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SubscribeUpdateBlock::PlacementNew_,
                                 sizeof(SubscribeUpdateBlock),
                                 alignof(SubscribeUpdateBlock));
  }
}
constexpr auto SubscribeUpdateBlock::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SubscribeUpdateBlock_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SubscribeUpdateBlock::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SubscribeUpdateBlock>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SubscribeUpdateBlock::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SubscribeUpdateBlock>(), &SubscribeUpdateBlock::ByteSizeLong,
              &SubscribeUpdateBlock::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SubscribeUpdateBlock, _impl_._cached_size_),
          false,
      },
      &SubscribeUpdateBlock::kDescriptorMethods,
      &descriptor_table_geyser_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SubscribeUpdateBlock_class_data_ =
        SubscribeUpdateBlock::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SubscribeUpdateBlock::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SubscribeUpdateBlock_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SubscribeUpdateBlock_class_data_.tc_table);
  return SubscribeUpdateBlock_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 13, 6, 69, 2>
SubscribeUpdateBlock::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SubscribeUpdateBlock, _impl_._has_bits_),
    0, // no _extensions_
    13, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294959104,  // skipmap
    offsetof(decltype(_table_), field_entries),
    13,  // num_field_entries
    6,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SubscribeUpdateBlock_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::geyser::SubscribeUpdateBlock>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 slot = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SubscribeUpdateBlock, _impl_.slot_), 5>(),
     {8, 5, 0, PROTOBUF_FIELD_OFFSET(SubscribeUpdateBlock, _impl_.slot_)}},
    // string blockhash = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(SubscribeUpdateBlock, _impl_.blockhash_)}},
    // .solana.storage.ConfirmedBlock.Rewards rewards = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(SubscribeUpdateBlock, _impl_.rewards_)}},
    // .solana.storage.ConfirmedBlock.UnixTimestamp block_time = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 3, 1, PROTOBUF_FIELD_OFFSET(SubscribeUpdateBlock, _impl_.block_time_)}},
    // .solana.storage.ConfirmedBlock.BlockHeight block_height = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 4, 2, PROTOBUF_FIELD_OFFSET(SubscribeUpdateBlock, _impl_.block_height_)}},
    // repeated .geyser.SubscribeUpdateTransactionInfo transactions = 6;
    {::_pbi::TcParser::FastMtR1,
     {50, 63, 3, PROTOBUF_FIELD_OFFSET(SubscribeUpdateBlock, _impl_.transactions_)}},
    // uint64 parent_slot = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SubscribeUpdateBlock, _impl_.parent_slot_), 6>(),
     {56, 6, 0, PROTOBUF_FIELD_OFFSET(SubscribeUpdateBlock, _impl_.parent_slot_)}},
    // string parent_blockhash = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 1, 0, PROTOBUF_FIELD_OFFSET(SubscribeUpdateBlock, _impl_.parent_blockhash_)}},
    // uint64 executed_transaction_count = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SubscribeUpdateBlock, _impl_.executed_transaction_count_), 7>(),
     {72, 7, 0, PROTOBUF_FIELD_OFFSET(SubscribeUpdateBlock, _impl_.executed_transaction_count_)}},
    // uint64 updated_account_count = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SubscribeUpdateBlock, _impl_.updated_account_count_), 8>(),
     {80, 8, 0, PROTOBUF_FIELD_OFFSET(SubscribeUpdateBlock, _impl_.updated_account_count_)}},
    // repeated .geyser.SubscribeUpdateAccountInfo accounts = 11;
    {::_pbi::TcParser::FastMtR1,
     {90, 63, 4, PROTOBUF_FIELD_OFFSET(SubscribeUpdateBlock, _impl_.accounts_)}},
    // uint64 entries_count = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SubscribeUpdateBlock, _impl_.entries_count_), 9>(),
     {96, 9, 0, PROTOBUF_FIELD_OFFSET(SubscribeUpdateBlock, _impl_.entries_count_)}},
    // repeated .geyser.SubscribeUpdateEntry entries = 13;
    {::_pbi::TcParser::FastMtR1,
     {106, 63, 5, PROTOBUF_FIELD_OFFSET(SubscribeUpdateBlock, _impl_.entries_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 slot = 1;
    {PROTOBUF_FIELD_OFFSET(SubscribeUpdateBlock, _impl_.slot_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // string blockhash = 2;
    {PROTOBUF_FIELD_OFFSET(SubscribeUpdateBlock, _impl_.blockhash_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .solana.storage.ConfirmedBlock.Rewards rewards = 3;
    {PROTOBUF_FIELD_OFFSET(SubscribeUpdateBlock, _impl_.rewards_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .solana.storage.ConfirmedBlock.UnixTimestamp block_time = 4;
    {PROTOBUF_FIELD_OFFSET(SubscribeUpdateBlock, _impl_.block_time_), _Internal::kHasBitsOffset + 3, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .solana.storage.ConfirmedBlock.BlockHeight block_height = 5;
    {PROTOBUF_FIELD_OFFSET(SubscribeUpdateBlock, _impl_.block_height_), _Internal::kHasBitsOffset + 4, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .geyser.SubscribeUpdateTransactionInfo transactions = 6;
    {PROTOBUF_FIELD_OFFSET(SubscribeUpdateBlock, _impl_.transactions_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint64 parent_slot = 7;
    {PROTOBUF_FIELD_OFFSET(SubscribeUpdateBlock, _impl_.parent_slot_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // string parent_blockhash = 8;
    {PROTOBUF_FIELD_OFFSET(SubscribeUpdateBlock, _impl_.parent_blockhash_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 executed_transaction_count = 9;
    {PROTOBUF_FIELD_OFFSET(SubscribeUpdateBlock, _impl_.executed_transaction_count_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // uint64 updated_account_count = 10;
    {PROTOBUF_FIELD_OFFSET(SubscribeUpdateBlock, _impl_.updated_account_count_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // repeated .geyser.SubscribeUpdateAccountInfo accounts = 11;
    {PROTOBUF_FIELD_OFFSET(SubscribeUpdateBlock, _impl_.accounts_), -1, 4,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint64 entries_count = 12;
    {PROTOBUF_FIELD_OFFSET(SubscribeUpdateBlock, _impl_.entries_count_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // repeated .geyser.SubscribeUpdateEntry entries = 13;
    {PROTOBUF_FIELD_OFFSET(SubscribeUpdateBlock, _impl_.entries_), -1, 5,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::solana::storage::ConfirmedBlock::Rewards>()},
      {::_pbi::TcParser::GetTable<::solana::storage::ConfirmedBlock::UnixTimestamp>()},
      {::_pbi::TcParser::GetTable<::solana::storage::ConfirmedBlock::BlockHeight>()},
      {::_pbi::TcParser::GetTable<::geyser::SubscribeUpdateTransactionInfo>()},
      {::_pbi::TcParser::GetTable<::geyser::SubscribeUpdateAccountInfo>()},
      {::_pbi::TcParser::GetTable<::geyser::SubscribeUpdateEntry>()},
  }},
  {{
    "\33\0\11\0\0\0\0\0\20\0\0\0\0\0\0\0"
    "geyser.SubscribeUpdateBlock"
    "blockhash"
    "parent_blockhash"
  }},
};
PROTOBUF_NOINLINE void SubscribeUpdateBlock::Clear() {
// @@protoc_insertion_point(message_clear_start:geyser.SubscribeUpdateBlock)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.transactions_.Clear();
  _impl_.accounts_.Clear();
  _impl_.entries_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.blockhash_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.parent_blockhash_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.rewards_ != nullptr);
      _impl_.rewards_->Clear();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(_impl_.block_time_ != nullptr);
      _impl_.block_time_->Clear();
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      ABSL_DCHECK(_impl_.block_height_ != nullptr);
      _impl_.block_height_->Clear();
    }
  }
  if ((cached_has_bits & 0x000000e0u) != 0) {
    ::memset(&_impl_.slot_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.executed_transaction_count_) -
        reinterpret_cast<char*>(&_impl_.slot_)) + sizeof(_impl_.executed_transaction_count_));
  }
  if ((cached_has_bits & 0x00000300u) != 0) {
    ::memset(&_impl_.updated_account_count_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.entries_count_) -
        reinterpret_cast<char*>(&_impl_.updated_account_count_)) + sizeof(_impl_.entries_count_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SubscribeUpdateBlock::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SubscribeUpdateBlock& this_ = static_cast<const SubscribeUpdateBlock&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SubscribeUpdateBlock::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SubscribeUpdateBlock& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:geyser.SubscribeUpdateBlock)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 slot = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000020u) != 0) {
    if (this_._internal_slot() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          1, this_._internal_slot(), target);
    }
  }

  // string blockhash = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_blockhash().empty()) {
      const ::std::string& _s = this_._internal_blockhash();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "geyser.SubscribeUpdateBlock.blockhash");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .solana.storage.ConfirmedBlock.Rewards rewards = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.rewards_, this_._impl_.rewards_->GetCachedSize(), target,
        stream);
  }

  // .solana.storage.ConfirmedBlock.UnixTimestamp block_time = 4;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.block_time_, this_._impl_.block_time_->GetCachedSize(), target,
        stream);
  }

  // .solana.storage.ConfirmedBlock.BlockHeight block_height = 5;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *this_._impl_.block_height_, this_._impl_.block_height_->GetCachedSize(), target,
        stream);
  }

  // repeated .geyser.SubscribeUpdateTransactionInfo transactions = 6;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_transactions_size());
       i < n; i++) {
    const auto& repfield = this_._internal_transactions().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            6, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // uint64 parent_slot = 7;
  if ((cached_has_bits & 0x00000040u) != 0) {
    if (this_._internal_parent_slot() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          7, this_._internal_parent_slot(), target);
    }
  }

  // string parent_blockhash = 8;
  if ((cached_has_bits & 0x00000002u) != 0) {
    if (!this_._internal_parent_blockhash().empty()) {
      const ::std::string& _s = this_._internal_parent_blockhash();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "geyser.SubscribeUpdateBlock.parent_blockhash");
      target = stream->WriteStringMaybeAliased(8, _s, target);
    }
  }

  // uint64 executed_transaction_count = 9;
  if ((cached_has_bits & 0x00000080u) != 0) {
    if (this_._internal_executed_transaction_count() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          9, this_._internal_executed_transaction_count(), target);
    }
  }

  // uint64 updated_account_count = 10;
  if ((cached_has_bits & 0x00000100u) != 0) {
    if (this_._internal_updated_account_count() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          10, this_._internal_updated_account_count(), target);
    }
  }

  // repeated .geyser.SubscribeUpdateAccountInfo accounts = 11;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_accounts_size());
       i < n; i++) {
    const auto& repfield = this_._internal_accounts().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            11, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // uint64 entries_count = 12;
  if ((cached_has_bits & 0x00000200u) != 0) {
    if (this_._internal_entries_count() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          12, this_._internal_entries_count(), target);
    }
  }

  // repeated .geyser.SubscribeUpdateEntry entries = 13;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_entries_size());
       i < n; i++) {
    const auto& repfield = this_._internal_entries().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            13, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:geyser.SubscribeUpdateBlock)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SubscribeUpdateBlock::ByteSizeLong(const MessageLite& base) {
  const SubscribeUpdateBlock& this_ = static_cast<const SubscribeUpdateBlock&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SubscribeUpdateBlock::ByteSizeLong() const {
  const SubscribeUpdateBlock& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:geyser.SubscribeUpdateBlock)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .geyser.SubscribeUpdateTransactionInfo transactions = 6;
    {
      total_size += 1UL * this_._internal_transactions_size();
      for (const auto& msg : this_._internal_transactions()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .geyser.SubscribeUpdateAccountInfo accounts = 11;
    {
      total_size += 1UL * this_._internal_accounts_size();
      for (const auto& msg : this_._internal_accounts()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .geyser.SubscribeUpdateEntry entries = 13;
    {
      total_size += 1UL * this_._internal_entries_size();
      for (const auto& msg : this_._internal_entries()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    // string blockhash = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_blockhash().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_blockhash());
      }
    }
    // string parent_blockhash = 8;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_parent_blockhash().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_parent_blockhash());
      }
    }
    // .solana.storage.ConfirmedBlock.Rewards rewards = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.rewards_);
    }
    // .solana.storage.ConfirmedBlock.UnixTimestamp block_time = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.block_time_);
    }
    // .solana.storage.ConfirmedBlock.BlockHeight block_height = 5;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.block_height_);
    }
    // uint64 slot = 1;
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (this_._internal_slot() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_slot());
      }
    }
    // uint64 parent_slot = 7;
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (this_._internal_parent_slot() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_parent_slot());
      }
    }
    // uint64 executed_transaction_count = 9;
    if ((cached_has_bits & 0x00000080u) != 0) {
      if (this_._internal_executed_transaction_count() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_executed_transaction_count());
      }
    }
  }
  if ((cached_has_bits & 0x00000300u) != 0) {
    // uint64 updated_account_count = 10;
    if ((cached_has_bits & 0x00000100u) != 0) {
      if (this_._internal_updated_account_count() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_updated_account_count());
      }
    }
    // uint64 entries_count = 12;
    if ((cached_has_bits & 0x00000200u) != 0) {
      if (this_._internal_entries_count() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_entries_count());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SubscribeUpdateBlock::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SubscribeUpdateBlock*>(&to_msg);
  auto& from = static_cast<const SubscribeUpdateBlock&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:geyser.SubscribeUpdateBlock)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_transactions()->MergeFrom(
      from._internal_transactions());
  _this->_internal_mutable_accounts()->MergeFrom(
      from._internal_accounts());
  _this->_internal_mutable_entries()->MergeFrom(
      from._internal_entries());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_blockhash().empty()) {
        _this->_internal_set_blockhash(from._internal_blockhash());
      } else {
        if (_this->_impl_.blockhash_.IsDefault()) {
          _this->_internal_set_blockhash("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_parent_blockhash().empty()) {
        _this->_internal_set_parent_blockhash(from._internal_parent_blockhash());
      } else {
        if (_this->_impl_.parent_blockhash_.IsDefault()) {
          _this->_internal_set_parent_blockhash("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.rewards_ != nullptr);
      if (_this->_impl_.rewards_ == nullptr) {
        _this->_impl_.rewards_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.rewards_);
      } else {
        _this->_impl_.rewards_->MergeFrom(*from._impl_.rewards_);
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(from._impl_.block_time_ != nullptr);
      if (_this->_impl_.block_time_ == nullptr) {
        _this->_impl_.block_time_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.block_time_);
      } else {
        _this->_impl_.block_time_->MergeFrom(*from._impl_.block_time_);
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      ABSL_DCHECK(from._impl_.block_height_ != nullptr);
      if (_this->_impl_.block_height_ == nullptr) {
        _this->_impl_.block_height_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.block_height_);
      } else {
        _this->_impl_.block_height_->MergeFrom(*from._impl_.block_height_);
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (from._internal_slot() != 0) {
        _this->_impl_.slot_ = from._impl_.slot_;
      }
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (from._internal_parent_slot() != 0) {
        _this->_impl_.parent_slot_ = from._impl_.parent_slot_;
      }
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      if (from._internal_executed_transaction_count() != 0) {
        _this->_impl_.executed_transaction_count_ = from._impl_.executed_transaction_count_;
      }
    }
  }
  if ((cached_has_bits & 0x00000300u) != 0) {
    if ((cached_has_bits & 0x00000100u) != 0) {
      if (from._internal_updated_account_count() != 0) {
        _this->_impl_.updated_account_count_ = from._impl_.updated_account_count_;
      }
    }
    if ((cached_has_bits & 0x00000200u) != 0) {
      if (from._internal_entries_count() != 0) {
        _this->_impl_.entries_count_ = from._impl_.entries_count_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SubscribeUpdateBlock::CopyFrom(const SubscribeUpdateBlock& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:geyser.SubscribeUpdateBlock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SubscribeUpdateBlock::InternalSwap(SubscribeUpdateBlock* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.transactions_.InternalSwap(&other->_impl_.transactions_);
  _impl_.accounts_.InternalSwap(&other->_impl_.accounts_);
  _impl_.entries_.InternalSwap(&other->_impl_.entries_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.blockhash_, &other->_impl_.blockhash_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.parent_blockhash_, &other->_impl_.parent_blockhash_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SubscribeUpdateBlock, _impl_.entries_count_)
      + sizeof(SubscribeUpdateBlock::_impl_.entries_count_)
      - PROTOBUF_FIELD_OFFSET(SubscribeUpdateBlock, _impl_.rewards_)>(
          reinterpret_cast<char*>(&_impl_.rewards_),
          reinterpret_cast<char*>(&other->_impl_.rewards_));
}

::google::protobuf::Metadata SubscribeUpdateBlock::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubscribeUpdateBlockMeta::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SubscribeUpdateBlockMeta>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SubscribeUpdateBlockMeta, _impl_._has_bits_);
};

void SubscribeUpdateBlockMeta::clear_rewards() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.rewards_ != nullptr) _impl_.rewards_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void SubscribeUpdateBlockMeta::clear_block_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.block_time_ != nullptr) _impl_.block_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void SubscribeUpdateBlockMeta::clear_block_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.block_height_ != nullptr) _impl_.block_height_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
SubscribeUpdateBlockMeta::SubscribeUpdateBlockMeta(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SubscribeUpdateBlockMeta_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:geyser.SubscribeUpdateBlockMeta)
}
PROTOBUF_NDEBUG_INLINE SubscribeUpdateBlockMeta::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::geyser::SubscribeUpdateBlockMeta& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        blockhash_(arena, from.blockhash_),
        parent_blockhash_(arena, from.parent_blockhash_) {}

SubscribeUpdateBlockMeta::SubscribeUpdateBlockMeta(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SubscribeUpdateBlockMeta& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SubscribeUpdateBlockMeta_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubscribeUpdateBlockMeta* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.rewards_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.rewards_)
                : nullptr;
  _impl_.block_time_ = ((cached_has_bits & 0x00000008u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.block_time_)
                : nullptr;
  _impl_.block_height_ = ((cached_has_bits & 0x00000010u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.block_height_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, slot_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, slot_),
           offsetof(Impl_, entries_count_) -
               offsetof(Impl_, slot_) +
               sizeof(Impl_::entries_count_));

  // @@protoc_insertion_point(copy_constructor:geyser.SubscribeUpdateBlockMeta)
}
PROTOBUF_NDEBUG_INLINE SubscribeUpdateBlockMeta::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        blockhash_(arena),
        parent_blockhash_(arena) {}

inline void SubscribeUpdateBlockMeta::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, rewards_),
           0,
           offsetof(Impl_, entries_count_) -
               offsetof(Impl_, rewards_) +
               sizeof(Impl_::entries_count_));
}
SubscribeUpdateBlockMeta::~SubscribeUpdateBlockMeta() {
  // @@protoc_insertion_point(destructor:geyser.SubscribeUpdateBlockMeta)
  SharedDtor(*this);
}
inline void SubscribeUpdateBlockMeta::SharedDtor(MessageLite& self) {
  SubscribeUpdateBlockMeta& this_ = static_cast<SubscribeUpdateBlockMeta&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.blockhash_.Destroy();
  this_._impl_.parent_blockhash_.Destroy();
  delete this_._impl_.rewards_;
  delete this_._impl_.block_time_;
  delete this_._impl_.block_height_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SubscribeUpdateBlockMeta::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SubscribeUpdateBlockMeta(arena);
}
constexpr auto SubscribeUpdateBlockMeta::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SubscribeUpdateBlockMeta),
                                            alignof(SubscribeUpdateBlockMeta));
}
constexpr auto SubscribeUpdateBlockMeta::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SubscribeUpdateBlockMeta_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SubscribeUpdateBlockMeta::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SubscribeUpdateBlockMeta>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SubscribeUpdateBlockMeta::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SubscribeUpdateBlockMeta>(), &SubscribeUpdateBlockMeta::ByteSizeLong,
              &SubscribeUpdateBlockMeta::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SubscribeUpdateBlockMeta, _impl_._cached_size_),
          false,
      },
      &SubscribeUpdateBlockMeta::kDescriptorMethods,
      &descriptor_table_geyser_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SubscribeUpdateBlockMeta_class_data_ =
        SubscribeUpdateBlockMeta::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SubscribeUpdateBlockMeta::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SubscribeUpdateBlockMeta_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SubscribeUpdateBlockMeta_class_data_.tc_table);
  return SubscribeUpdateBlockMeta_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 3, 73, 2>
SubscribeUpdateBlockMeta::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SubscribeUpdateBlockMeta, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SubscribeUpdateBlockMeta_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::geyser::SubscribeUpdateBlockMeta>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 slot = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SubscribeUpdateBlockMeta, _impl_.slot_), 5>(),
     {8, 5, 0, PROTOBUF_FIELD_OFFSET(SubscribeUpdateBlockMeta, _impl_.slot_)}},
    // string blockhash = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(SubscribeUpdateBlockMeta, _impl_.blockhash_)}},
    // .solana.storage.ConfirmedBlock.Rewards rewards = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(SubscribeUpdateBlockMeta, _impl_.rewards_)}},
    // .solana.storage.ConfirmedBlock.UnixTimestamp block_time = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 3, 1, PROTOBUF_FIELD_OFFSET(SubscribeUpdateBlockMeta, _impl_.block_time_)}},
    // .solana.storage.ConfirmedBlock.BlockHeight block_height = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 4, 2, PROTOBUF_FIELD_OFFSET(SubscribeUpdateBlockMeta, _impl_.block_height_)}},
    // uint64 parent_slot = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SubscribeUpdateBlockMeta, _impl_.parent_slot_), 6>(),
     {48, 6, 0, PROTOBUF_FIELD_OFFSET(SubscribeUpdateBlockMeta, _impl_.parent_slot_)}},
    // string parent_blockhash = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 1, 0, PROTOBUF_FIELD_OFFSET(SubscribeUpdateBlockMeta, _impl_.parent_blockhash_)}},
    // uint64 executed_transaction_count = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SubscribeUpdateBlockMeta, _impl_.executed_transaction_count_), 7>(),
     {64, 7, 0, PROTOBUF_FIELD_OFFSET(SubscribeUpdateBlockMeta, _impl_.executed_transaction_count_)}},
    // uint64 entries_count = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SubscribeUpdateBlockMeta, _impl_.entries_count_), 8>(),
     {72, 8, 0, PROTOBUF_FIELD_OFFSET(SubscribeUpdateBlockMeta, _impl_.entries_count_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 slot = 1;
    {PROTOBUF_FIELD_OFFSET(SubscribeUpdateBlockMeta, _impl_.slot_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // string blockhash = 2;
    {PROTOBUF_FIELD_OFFSET(SubscribeUpdateBlockMeta, _impl_.blockhash_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .solana.storage.ConfirmedBlock.Rewards rewards = 3;
    {PROTOBUF_FIELD_OFFSET(SubscribeUpdateBlockMeta, _impl_.rewards_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .solana.storage.ConfirmedBlock.UnixTimestamp block_time = 4;
    {PROTOBUF_FIELD_OFFSET(SubscribeUpdateBlockMeta, _impl_.block_time_), _Internal::kHasBitsOffset + 3, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .solana.storage.ConfirmedBlock.BlockHeight block_height = 5;
    {PROTOBUF_FIELD_OFFSET(SubscribeUpdateBlockMeta, _impl_.block_height_), _Internal::kHasBitsOffset + 4, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint64 parent_slot = 6;
    {PROTOBUF_FIELD_OFFSET(SubscribeUpdateBlockMeta, _impl_.parent_slot_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // string parent_blockhash = 7;
    {PROTOBUF_FIELD_OFFSET(SubscribeUpdateBlockMeta, _impl_.parent_blockhash_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 executed_transaction_count = 8;
    {PROTOBUF_FIELD_OFFSET(SubscribeUpdateBlockMeta, _impl_.executed_transaction_count_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // uint64 entries_count = 9;
    {PROTOBUF_FIELD_OFFSET(SubscribeUpdateBlockMeta, _impl_.entries_count_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::solana::storage::ConfirmedBlock::Rewards>()},
      {::_pbi::TcParser::GetTable<::solana::storage::ConfirmedBlock::UnixTimestamp>()},
      {::_pbi::TcParser::GetTable<::solana::storage::ConfirmedBlock::BlockHeight>()},
  }},
  {{
    "\37\0\11\0\0\0\0\20\0\0\0\0\0\0\0\0"
    "geyser.SubscribeUpdateBlockMeta"
    "blockhash"
    "parent_blockhash"
  }},
};
PROTOBUF_NOINLINE void SubscribeUpdateBlockMeta::Clear() {
// @@protoc_insertion_point(message_clear_start:geyser.SubscribeUpdateBlockMeta)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.blockhash_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.parent_blockhash_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.rewards_ != nullptr);
      _impl_.rewards_->Clear();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(_impl_.block_time_ != nullptr);
      _impl_.block_time_->Clear();
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      ABSL_DCHECK(_impl_.block_height_ != nullptr);
      _impl_.block_height_->Clear();
    }
  }
  if ((cached_has_bits & 0x000000e0u) != 0) {
    ::memset(&_impl_.slot_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.executed_transaction_count_) -
        reinterpret_cast<char*>(&_impl_.slot_)) + sizeof(_impl_.executed_transaction_count_));
  }
  _impl_.entries_count_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SubscribeUpdateBlockMeta::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SubscribeUpdateBlockMeta& this_ = static_cast<const SubscribeUpdateBlockMeta&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SubscribeUpdateBlockMeta::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SubscribeUpdateBlockMeta& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:geyser.SubscribeUpdateBlockMeta)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 slot = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000020u) != 0) {
    if (this_._internal_slot() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          1, this_._internal_slot(), target);
    }
  }

  // string blockhash = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_blockhash().empty()) {
      const ::std::string& _s = this_._internal_blockhash();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "geyser.SubscribeUpdateBlockMeta.blockhash");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .solana.storage.ConfirmedBlock.Rewards rewards = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.rewards_, this_._impl_.rewards_->GetCachedSize(), target,
        stream);
  }

  // .solana.storage.ConfirmedBlock.UnixTimestamp block_time = 4;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.block_time_, this_._impl_.block_time_->GetCachedSize(), target,
        stream);
  }

  // .solana.storage.ConfirmedBlock.BlockHeight block_height = 5;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *this_._impl_.block_height_, this_._impl_.block_height_->GetCachedSize(), target,
        stream);
  }

  // uint64 parent_slot = 6;
  if ((cached_has_bits & 0x00000040u) != 0) {
    if (this_._internal_parent_slot() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          6, this_._internal_parent_slot(), target);
    }
  }

  // string parent_blockhash = 7;
  if ((cached_has_bits & 0x00000002u) != 0) {
    if (!this_._internal_parent_blockhash().empty()) {
      const ::std::string& _s = this_._internal_parent_blockhash();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "geyser.SubscribeUpdateBlockMeta.parent_blockhash");
      target = stream->WriteStringMaybeAliased(7, _s, target);
    }
  }

  // uint64 executed_transaction_count = 8;
  if ((cached_has_bits & 0x00000080u) != 0) {
    if (this_._internal_executed_transaction_count() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          8, this_._internal_executed_transaction_count(), target);
    }
  }

  // uint64 entries_count = 9;
  if ((cached_has_bits & 0x00000100u) != 0) {
    if (this_._internal_entries_count() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          9, this_._internal_entries_count(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:geyser.SubscribeUpdateBlockMeta)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SubscribeUpdateBlockMeta::ByteSizeLong(const MessageLite& base) {
  const SubscribeUpdateBlockMeta& this_ = static_cast<const SubscribeUpdateBlockMeta&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SubscribeUpdateBlockMeta::ByteSizeLong() const {
  const SubscribeUpdateBlockMeta& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:geyser.SubscribeUpdateBlockMeta)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    // string blockhash = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_blockhash().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_blockhash());
      }
    }
    // string parent_blockhash = 7;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_parent_blockhash().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_parent_blockhash());
      }
    }
    // .solana.storage.ConfirmedBlock.Rewards rewards = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.rewards_);
    }
    // .solana.storage.ConfirmedBlock.UnixTimestamp block_time = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.block_time_);
    }
    // .solana.storage.ConfirmedBlock.BlockHeight block_height = 5;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.block_height_);
    }
    // uint64 slot = 1;
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (this_._internal_slot() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_slot());
      }
    }
    // uint64 parent_slot = 6;
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (this_._internal_parent_slot() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_parent_slot());
      }
    }
    // uint64 executed_transaction_count = 8;
    if ((cached_has_bits & 0x00000080u) != 0) {
      if (this_._internal_executed_transaction_count() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_executed_transaction_count());
      }
    }
  }
   {
    // uint64 entries_count = 9;
    if ((cached_has_bits & 0x00000100u) != 0) {
      if (this_._internal_entries_count() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_entries_count());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SubscribeUpdateBlockMeta::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SubscribeUpdateBlockMeta*>(&to_msg);
  auto& from = static_cast<const SubscribeUpdateBlockMeta&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:geyser.SubscribeUpdateBlockMeta)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_blockhash().empty()) {
        _this->_internal_set_blockhash(from._internal_blockhash());
      } else {
        if (_this->_impl_.blockhash_.IsDefault()) {
          _this->_internal_set_blockhash("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_parent_blockhash().empty()) {
        _this->_internal_set_parent_blockhash(from._internal_parent_blockhash());
      } else {
        if (_this->_impl_.parent_blockhash_.IsDefault()) {
          _this->_internal_set_parent_blockhash("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.rewards_ != nullptr);
      if (_this->_impl_.rewards_ == nullptr) {
        _this->_impl_.rewards_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.rewards_);
      } else {
        _this->_impl_.rewards_->MergeFrom(*from._impl_.rewards_);
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(from._impl_.block_time_ != nullptr);
      if (_this->_impl_.block_time_ == nullptr) {
        _this->_impl_.block_time_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.block_time_);
      } else {
        _this->_impl_.block_time_->MergeFrom(*from._impl_.block_time_);
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      ABSL_DCHECK(from._impl_.block_height_ != nullptr);
      if (_this->_impl_.block_height_ == nullptr) {
        _this->_impl_.block_height_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.block_height_);
      } else {
        _this->_impl_.block_height_->MergeFrom(*from._impl_.block_height_);
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (from._internal_slot() != 0) {
        _this->_impl_.slot_ = from._impl_.slot_;
      }
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (from._internal_parent_slot() != 0) {
        _this->_impl_.parent_slot_ = from._impl_.parent_slot_;
      }
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      if (from._internal_executed_transaction_count() != 0) {
        _this->_impl_.executed_transaction_count_ = from._impl_.executed_transaction_count_;
      }
    }
  }
  if ((cached_has_bits & 0x00000100u) != 0) {
    if (from._internal_entries_count() != 0) {
      _this->_impl_.entries_count_ = from._impl_.entries_count_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SubscribeUpdateBlockMeta::CopyFrom(const SubscribeUpdateBlockMeta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:geyser.SubscribeUpdateBlockMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SubscribeUpdateBlockMeta::InternalSwap(SubscribeUpdateBlockMeta* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.blockhash_, &other->_impl_.blockhash_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.parent_blockhash_, &other->_impl_.parent_blockhash_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SubscribeUpdateBlockMeta, _impl_.entries_count_)
      + sizeof(SubscribeUpdateBlockMeta::_impl_.entries_count_)
      - PROTOBUF_FIELD_OFFSET(SubscribeUpdateBlockMeta, _impl_.rewards_)>(
          reinterpret_cast<char*>(&_impl_.rewards_),
          reinterpret_cast<char*>(&other->_impl_.rewards_));
}

::google::protobuf::Metadata SubscribeUpdateBlockMeta::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubscribeUpdateEntry::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SubscribeUpdateEntry>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SubscribeUpdateEntry, _impl_._has_bits_);
};

SubscribeUpdateEntry::SubscribeUpdateEntry(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SubscribeUpdateEntry_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:geyser.SubscribeUpdateEntry)
}
PROTOBUF_NDEBUG_INLINE SubscribeUpdateEntry::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::geyser::SubscribeUpdateEntry& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        hash_(arena, from.hash_) {}

SubscribeUpdateEntry::SubscribeUpdateEntry(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SubscribeUpdateEntry& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SubscribeUpdateEntry_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubscribeUpdateEntry* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, slot_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, slot_),
           offsetof(Impl_, starting_transaction_index_) -
               offsetof(Impl_, slot_) +
               sizeof(Impl_::starting_transaction_index_));

  // @@protoc_insertion_point(copy_constructor:geyser.SubscribeUpdateEntry)
}
PROTOBUF_NDEBUG_INLINE SubscribeUpdateEntry::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        hash_(arena) {}

inline void SubscribeUpdateEntry::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, slot_),
           0,
           offsetof(Impl_, starting_transaction_index_) -
               offsetof(Impl_, slot_) +
               sizeof(Impl_::starting_transaction_index_));
}
SubscribeUpdateEntry::~SubscribeUpdateEntry() {
  // @@protoc_insertion_point(destructor:geyser.SubscribeUpdateEntry)
  SharedDtor(*this);
}
inline void SubscribeUpdateEntry::SharedDtor(MessageLite& self) {
  SubscribeUpdateEntry& this_ = static_cast<SubscribeUpdateEntry&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.hash_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SubscribeUpdateEntry::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SubscribeUpdateEntry(arena);
}
constexpr auto SubscribeUpdateEntry::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SubscribeUpdateEntry),
                                            alignof(SubscribeUpdateEntry));
}
constexpr auto SubscribeUpdateEntry::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SubscribeUpdateEntry_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SubscribeUpdateEntry::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SubscribeUpdateEntry>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SubscribeUpdateEntry::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SubscribeUpdateEntry>(), &SubscribeUpdateEntry::ByteSizeLong,
              &SubscribeUpdateEntry::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SubscribeUpdateEntry, _impl_._cached_size_),
          false,
      },
      &SubscribeUpdateEntry::kDescriptorMethods,
      &descriptor_table_geyser_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SubscribeUpdateEntry_class_data_ =
        SubscribeUpdateEntry::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SubscribeUpdateEntry::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SubscribeUpdateEntry_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SubscribeUpdateEntry_class_data_.tc_table);
  return SubscribeUpdateEntry_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 0, 2>
SubscribeUpdateEntry::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SubscribeUpdateEntry, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    SubscribeUpdateEntry_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::geyser::SubscribeUpdateEntry>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 slot = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SubscribeUpdateEntry, _impl_.slot_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(SubscribeUpdateEntry, _impl_.slot_)}},
    // uint64 index = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SubscribeUpdateEntry, _impl_.index_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(SubscribeUpdateEntry, _impl_.index_)}},
    // uint64 num_hashes = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SubscribeUpdateEntry, _impl_.num_hashes_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(SubscribeUpdateEntry, _impl_.num_hashes_)}},
    // bytes hash = 4;
    {::_pbi::TcParser::FastBS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(SubscribeUpdateEntry, _impl_.hash_)}},
    // uint64 executed_transaction_count = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SubscribeUpdateEntry, _impl_.executed_transaction_count_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(SubscribeUpdateEntry, _impl_.executed_transaction_count_)}},
    // uint64 starting_transaction_index = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SubscribeUpdateEntry, _impl_.starting_transaction_index_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(SubscribeUpdateEntry, _impl_.starting_transaction_index_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 slot = 1;
    {PROTOBUF_FIELD_OFFSET(SubscribeUpdateEntry, _impl_.slot_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // uint64 index = 2;
    {PROTOBUF_FIELD_OFFSET(SubscribeUpdateEntry, _impl_.index_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // uint64 num_hashes = 3;
    {PROTOBUF_FIELD_OFFSET(SubscribeUpdateEntry, _impl_.num_hashes_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // bytes hash = 4;
    {PROTOBUF_FIELD_OFFSET(SubscribeUpdateEntry, _impl_.hash_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // uint64 executed_transaction_count = 5;
    {PROTOBUF_FIELD_OFFSET(SubscribeUpdateEntry, _impl_.executed_transaction_count_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // uint64 starting_transaction_index = 6;
    {PROTOBUF_FIELD_OFFSET(SubscribeUpdateEntry, _impl_.starting_transaction_index_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void SubscribeUpdateEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:geyser.SubscribeUpdateEntry)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.hash_.ClearNonDefaultToEmpty();
  }
  if ((cached_has_bits & 0x0000003eu) != 0) {
    ::memset(&_impl_.slot_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.starting_transaction_index_) -
        reinterpret_cast<char*>(&_impl_.slot_)) + sizeof(_impl_.starting_transaction_index_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SubscribeUpdateEntry::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SubscribeUpdateEntry& this_ = static_cast<const SubscribeUpdateEntry&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SubscribeUpdateEntry::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SubscribeUpdateEntry& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:geyser.SubscribeUpdateEntry)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 slot = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_slot() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          1, this_._internal_slot(), target);
    }
  }

  // uint64 index = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_index() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          2, this_._internal_index(), target);
    }
  }

  // uint64 num_hashes = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (this_._internal_num_hashes() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          3, this_._internal_num_hashes(), target);
    }
  }

  // bytes hash = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_hash().empty()) {
      const ::std::string& _s = this_._internal_hash();
      target = stream->WriteBytesMaybeAliased(4, _s, target);
    }
  }

  // uint64 executed_transaction_count = 5;
  if ((this_._impl_._has_bits_[0] & 0x00000010u) != 0) {
    if (this_._internal_executed_transaction_count() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          5, this_._internal_executed_transaction_count(), target);
    }
  }

  // uint64 starting_transaction_index = 6;
  if ((this_._impl_._has_bits_[0] & 0x00000020u) != 0) {
    if (this_._internal_starting_transaction_index() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          6, this_._internal_starting_transaction_index(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:geyser.SubscribeUpdateEntry)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SubscribeUpdateEntry::ByteSizeLong(const MessageLite& base) {
  const SubscribeUpdateEntry& this_ = static_cast<const SubscribeUpdateEntry&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SubscribeUpdateEntry::ByteSizeLong() const {
  const SubscribeUpdateEntry& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:geyser.SubscribeUpdateEntry)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    // bytes hash = 4;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_hash().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_hash());
      }
    }
    // uint64 slot = 1;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_slot() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_slot());
      }
    }
    // uint64 index = 2;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_index() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_index());
      }
    }
    // uint64 num_hashes = 3;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_num_hashes() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_num_hashes());
      }
    }
    // uint64 executed_transaction_count = 5;
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (this_._internal_executed_transaction_count() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_executed_transaction_count());
      }
    }
    // uint64 starting_transaction_index = 6;
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (this_._internal_starting_transaction_index() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_starting_transaction_index());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SubscribeUpdateEntry::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SubscribeUpdateEntry*>(&to_msg);
  auto& from = static_cast<const SubscribeUpdateEntry&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:geyser.SubscribeUpdateEntry)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_hash().empty()) {
        _this->_internal_set_hash(from._internal_hash());
      } else {
        if (_this->_impl_.hash_.IsDefault()) {
          _this->_internal_set_hash("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_slot() != 0) {
        _this->_impl_.slot_ = from._impl_.slot_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_index() != 0) {
        _this->_impl_.index_ = from._impl_.index_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_num_hashes() != 0) {
        _this->_impl_.num_hashes_ = from._impl_.num_hashes_;
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (from._internal_executed_transaction_count() != 0) {
        _this->_impl_.executed_transaction_count_ = from._impl_.executed_transaction_count_;
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (from._internal_starting_transaction_index() != 0) {
        _this->_impl_.starting_transaction_index_ = from._impl_.starting_transaction_index_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SubscribeUpdateEntry::CopyFrom(const SubscribeUpdateEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:geyser.SubscribeUpdateEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SubscribeUpdateEntry::InternalSwap(SubscribeUpdateEntry* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.hash_, &other->_impl_.hash_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SubscribeUpdateEntry, _impl_.starting_transaction_index_)
      + sizeof(SubscribeUpdateEntry::_impl_.starting_transaction_index_)
      - PROTOBUF_FIELD_OFFSET(SubscribeUpdateEntry, _impl_.slot_)>(
          reinterpret_cast<char*>(&_impl_.slot_),
          reinterpret_cast<char*>(&other->_impl_.slot_));
}

::google::protobuf::Metadata SubscribeUpdateEntry::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubscribeUpdatePing::_Internal {
 public:
};

SubscribeUpdatePing::SubscribeUpdatePing(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, SubscribeUpdatePing_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:geyser.SubscribeUpdatePing)
}
SubscribeUpdatePing::SubscribeUpdatePing(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SubscribeUpdatePing& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, SubscribeUpdatePing_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubscribeUpdatePing* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:geyser.SubscribeUpdatePing)
}

inline void* PROTOBUF_NONNULL SubscribeUpdatePing::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SubscribeUpdatePing(arena);
}
constexpr auto SubscribeUpdatePing::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SubscribeUpdatePing),
                                            alignof(SubscribeUpdatePing));
}
constexpr auto SubscribeUpdatePing::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SubscribeUpdatePing_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SubscribeUpdatePing::MergeImpl,
          ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<SubscribeUpdatePing>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SubscribeUpdatePing::SharedDtor,
          ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<SubscribeUpdatePing>(), &SubscribeUpdatePing::ByteSizeLong,
              &SubscribeUpdatePing::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SubscribeUpdatePing, _impl_._cached_size_),
          false,
      },
      &SubscribeUpdatePing::kDescriptorMethods,
      &descriptor_table_geyser_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SubscribeUpdatePing_class_data_ =
        SubscribeUpdatePing::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SubscribeUpdatePing::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SubscribeUpdatePing_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SubscribeUpdatePing_class_data_.tc_table);
  return SubscribeUpdatePing_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2>
SubscribeUpdatePing::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    SubscribeUpdatePing_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::geyser::SubscribeUpdatePing>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, // no field_entries, or aux_entries
  {{
  }},
};







::google::protobuf::Metadata SubscribeUpdatePing::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubscribeUpdatePong::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SubscribeUpdatePong>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SubscribeUpdatePong, _impl_._has_bits_);
};

SubscribeUpdatePong::SubscribeUpdatePong(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SubscribeUpdatePong_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:geyser.SubscribeUpdatePong)
}
SubscribeUpdatePong::SubscribeUpdatePong(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SubscribeUpdatePong& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SubscribeUpdatePong_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE SubscribeUpdatePong::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void SubscribeUpdatePong::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.id_ = {};
}
SubscribeUpdatePong::~SubscribeUpdatePong() {
  // @@protoc_insertion_point(destructor:geyser.SubscribeUpdatePong)
  SharedDtor(*this);
}
inline void SubscribeUpdatePong::SharedDtor(MessageLite& self) {
  SubscribeUpdatePong& this_ = static_cast<SubscribeUpdatePong&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SubscribeUpdatePong::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SubscribeUpdatePong(arena);
}
constexpr auto SubscribeUpdatePong::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SubscribeUpdatePong),
                                            alignof(SubscribeUpdatePong));
}
constexpr auto SubscribeUpdatePong::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SubscribeUpdatePong_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SubscribeUpdatePong::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SubscribeUpdatePong>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SubscribeUpdatePong::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SubscribeUpdatePong>(), &SubscribeUpdatePong::ByteSizeLong,
              &SubscribeUpdatePong::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SubscribeUpdatePong, _impl_._cached_size_),
          false,
      },
      &SubscribeUpdatePong::kDescriptorMethods,
      &descriptor_table_geyser_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SubscribeUpdatePong_class_data_ =
        SubscribeUpdatePong::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SubscribeUpdatePong::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SubscribeUpdatePong_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SubscribeUpdatePong_class_data_.tc_table);
  return SubscribeUpdatePong_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
SubscribeUpdatePong::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SubscribeUpdatePong, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    SubscribeUpdatePong_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::geyser::SubscribeUpdatePong>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SubscribeUpdatePong, _impl_.id_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(SubscribeUpdatePong, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 id = 1;
    {PROTOBUF_FIELD_OFFSET(SubscribeUpdatePong, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void SubscribeUpdatePong::Clear() {
// @@protoc_insertion_point(message_clear_start:geyser.SubscribeUpdatePong)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SubscribeUpdatePong::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SubscribeUpdatePong& this_ = static_cast<const SubscribeUpdatePong&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SubscribeUpdatePong::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SubscribeUpdatePong& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:geyser.SubscribeUpdatePong)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 id = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_id() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
              stream, this_._internal_id(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:geyser.SubscribeUpdatePong)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SubscribeUpdatePong::ByteSizeLong(const MessageLite& base) {
  const SubscribeUpdatePong& this_ = static_cast<const SubscribeUpdatePong&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SubscribeUpdatePong::ByteSizeLong() const {
  const SubscribeUpdatePong& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:geyser.SubscribeUpdatePong)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // int32 id = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_id() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_id());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SubscribeUpdatePong::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SubscribeUpdatePong*>(&to_msg);
  auto& from = static_cast<const SubscribeUpdatePong&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:geyser.SubscribeUpdatePong)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (from._internal_id() != 0) {
      _this->_impl_.id_ = from._impl_.id_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SubscribeUpdatePong::CopyFrom(const SubscribeUpdatePong& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:geyser.SubscribeUpdatePong)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SubscribeUpdatePong::InternalSwap(SubscribeUpdatePong* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.id_, other->_impl_.id_);
}

::google::protobuf::Metadata SubscribeUpdatePong::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubscribeReplayInfoRequest::_Internal {
 public:
};

SubscribeReplayInfoRequest::SubscribeReplayInfoRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, SubscribeReplayInfoRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:geyser.SubscribeReplayInfoRequest)
}
SubscribeReplayInfoRequest::SubscribeReplayInfoRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SubscribeReplayInfoRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, SubscribeReplayInfoRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubscribeReplayInfoRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:geyser.SubscribeReplayInfoRequest)
}

inline void* PROTOBUF_NONNULL SubscribeReplayInfoRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SubscribeReplayInfoRequest(arena);
}
constexpr auto SubscribeReplayInfoRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SubscribeReplayInfoRequest),
                                            alignof(SubscribeReplayInfoRequest));
}
constexpr auto SubscribeReplayInfoRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SubscribeReplayInfoRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SubscribeReplayInfoRequest::MergeImpl,
          ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<SubscribeReplayInfoRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SubscribeReplayInfoRequest::SharedDtor,
          ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<SubscribeReplayInfoRequest>(), &SubscribeReplayInfoRequest::ByteSizeLong,
              &SubscribeReplayInfoRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SubscribeReplayInfoRequest, _impl_._cached_size_),
          false,
      },
      &SubscribeReplayInfoRequest::kDescriptorMethods,
      &descriptor_table_geyser_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SubscribeReplayInfoRequest_class_data_ =
        SubscribeReplayInfoRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SubscribeReplayInfoRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SubscribeReplayInfoRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SubscribeReplayInfoRequest_class_data_.tc_table);
  return SubscribeReplayInfoRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2>
SubscribeReplayInfoRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    SubscribeReplayInfoRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::geyser::SubscribeReplayInfoRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, // no field_entries, or aux_entries
  {{
  }},
};







::google::protobuf::Metadata SubscribeReplayInfoRequest::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubscribeReplayInfoResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SubscribeReplayInfoResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SubscribeReplayInfoResponse, _impl_._has_bits_);
};

SubscribeReplayInfoResponse::SubscribeReplayInfoResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SubscribeReplayInfoResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:geyser.SubscribeReplayInfoResponse)
}
SubscribeReplayInfoResponse::SubscribeReplayInfoResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SubscribeReplayInfoResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SubscribeReplayInfoResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE SubscribeReplayInfoResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void SubscribeReplayInfoResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.first_available_ = {};
}
SubscribeReplayInfoResponse::~SubscribeReplayInfoResponse() {
  // @@protoc_insertion_point(destructor:geyser.SubscribeReplayInfoResponse)
  SharedDtor(*this);
}
inline void SubscribeReplayInfoResponse::SharedDtor(MessageLite& self) {
  SubscribeReplayInfoResponse& this_ = static_cast<SubscribeReplayInfoResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SubscribeReplayInfoResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SubscribeReplayInfoResponse(arena);
}
constexpr auto SubscribeReplayInfoResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SubscribeReplayInfoResponse),
                                            alignof(SubscribeReplayInfoResponse));
}
constexpr auto SubscribeReplayInfoResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SubscribeReplayInfoResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SubscribeReplayInfoResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SubscribeReplayInfoResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SubscribeReplayInfoResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SubscribeReplayInfoResponse>(), &SubscribeReplayInfoResponse::ByteSizeLong,
              &SubscribeReplayInfoResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SubscribeReplayInfoResponse, _impl_._cached_size_),
          false,
      },
      &SubscribeReplayInfoResponse::kDescriptorMethods,
      &descriptor_table_geyser_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SubscribeReplayInfoResponse_class_data_ =
        SubscribeReplayInfoResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SubscribeReplayInfoResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SubscribeReplayInfoResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SubscribeReplayInfoResponse_class_data_.tc_table);
  return SubscribeReplayInfoResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
SubscribeReplayInfoResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SubscribeReplayInfoResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    SubscribeReplayInfoResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::geyser::SubscribeReplayInfoResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional uint64 first_available = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SubscribeReplayInfoResponse, _impl_.first_available_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(SubscribeReplayInfoResponse, _impl_.first_available_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint64 first_available = 1;
    {PROTOBUF_FIELD_OFFSET(SubscribeReplayInfoResponse, _impl_.first_available_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void SubscribeReplayInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:geyser.SubscribeReplayInfoResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.first_available_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SubscribeReplayInfoResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SubscribeReplayInfoResponse& this_ = static_cast<const SubscribeReplayInfoResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SubscribeReplayInfoResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SubscribeReplayInfoResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:geyser.SubscribeReplayInfoResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint64 first_available = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this_._internal_first_available(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:geyser.SubscribeReplayInfoResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SubscribeReplayInfoResponse::ByteSizeLong(const MessageLite& base) {
  const SubscribeReplayInfoResponse& this_ = static_cast<const SubscribeReplayInfoResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SubscribeReplayInfoResponse::ByteSizeLong() const {
  const SubscribeReplayInfoResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:geyser.SubscribeReplayInfoResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // optional uint64 first_available = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_first_available());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SubscribeReplayInfoResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SubscribeReplayInfoResponse*>(&to_msg);
  auto& from = static_cast<const SubscribeReplayInfoResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:geyser.SubscribeReplayInfoResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _this->_impl_.first_available_ = from._impl_.first_available_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SubscribeReplayInfoResponse::CopyFrom(const SubscribeReplayInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:geyser.SubscribeReplayInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SubscribeReplayInfoResponse::InternalSwap(SubscribeReplayInfoResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.first_available_, other->_impl_.first_available_);
}

::google::protobuf::Metadata SubscribeReplayInfoResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PingRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<PingRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PingRequest, _impl_._has_bits_);
};

PingRequest::PingRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PingRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:geyser.PingRequest)
}
PingRequest::PingRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const PingRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PingRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE PingRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void PingRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.count_ = {};
}
PingRequest::~PingRequest() {
  // @@protoc_insertion_point(destructor:geyser.PingRequest)
  SharedDtor(*this);
}
inline void PingRequest::SharedDtor(MessageLite& self) {
  PingRequest& this_ = static_cast<PingRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL PingRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) PingRequest(arena);
}
constexpr auto PingRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(PingRequest),
                                            alignof(PingRequest));
}
constexpr auto PingRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_PingRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &PingRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<PingRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &PingRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<PingRequest>(), &PingRequest::ByteSizeLong,
              &PingRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(PingRequest, _impl_._cached_size_),
          false,
      },
      &PingRequest::kDescriptorMethods,
      &descriptor_table_geyser_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull PingRequest_class_data_ =
        PingRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
PingRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&PingRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(PingRequest_class_data_.tc_table);
  return PingRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
PingRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PingRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    PingRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::geyser::PingRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 count = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PingRequest, _impl_.count_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(PingRequest, _impl_.count_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 count = 1;
    {PROTOBUF_FIELD_OFFSET(PingRequest, _impl_.count_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void PingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:geyser.PingRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.count_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL PingRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const PingRequest& this_ = static_cast<const PingRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL PingRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const PingRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:geyser.PingRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 count = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_count() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
              stream, this_._internal_count(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:geyser.PingRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t PingRequest::ByteSizeLong(const MessageLite& base) {
  const PingRequest& this_ = static_cast<const PingRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t PingRequest::ByteSizeLong() const {
  const PingRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:geyser.PingRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // int32 count = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_count() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_count());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void PingRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PingRequest*>(&to_msg);
  auto& from = static_cast<const PingRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:geyser.PingRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (from._internal_count() != 0) {
      _this->_impl_.count_ = from._impl_.count_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PingRequest::CopyFrom(const PingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:geyser.PingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PingRequest::InternalSwap(PingRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.count_, other->_impl_.count_);
}

::google::protobuf::Metadata PingRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PongResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<PongResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PongResponse, _impl_._has_bits_);
};

PongResponse::PongResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PongResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:geyser.PongResponse)
}
PongResponse::PongResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const PongResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PongResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE PongResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void PongResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.count_ = {};
}
PongResponse::~PongResponse() {
  // @@protoc_insertion_point(destructor:geyser.PongResponse)
  SharedDtor(*this);
}
inline void PongResponse::SharedDtor(MessageLite& self) {
  PongResponse& this_ = static_cast<PongResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL PongResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) PongResponse(arena);
}
constexpr auto PongResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(PongResponse),
                                            alignof(PongResponse));
}
constexpr auto PongResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_PongResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &PongResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<PongResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &PongResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<PongResponse>(), &PongResponse::ByteSizeLong,
              &PongResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(PongResponse, _impl_._cached_size_),
          false,
      },
      &PongResponse::kDescriptorMethods,
      &descriptor_table_geyser_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull PongResponse_class_data_ =
        PongResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
PongResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&PongResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(PongResponse_class_data_.tc_table);
  return PongResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
PongResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PongResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    PongResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::geyser::PongResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 count = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PongResponse, _impl_.count_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(PongResponse, _impl_.count_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 count = 1;
    {PROTOBUF_FIELD_OFFSET(PongResponse, _impl_.count_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void PongResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:geyser.PongResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.count_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL PongResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const PongResponse& this_ = static_cast<const PongResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL PongResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const PongResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:geyser.PongResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 count = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_count() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
              stream, this_._internal_count(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:geyser.PongResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t PongResponse::ByteSizeLong(const MessageLite& base) {
  const PongResponse& this_ = static_cast<const PongResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t PongResponse::ByteSizeLong() const {
  const PongResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:geyser.PongResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // int32 count = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_count() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_count());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void PongResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PongResponse*>(&to_msg);
  auto& from = static_cast<const PongResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:geyser.PongResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (from._internal_count() != 0) {
      _this->_impl_.count_ = from._impl_.count_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PongResponse::CopyFrom(const PongResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:geyser.PongResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PongResponse::InternalSwap(PongResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.count_, other->_impl_.count_);
}

::google::protobuf::Metadata PongResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetLatestBlockhashRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GetLatestBlockhashRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetLatestBlockhashRequest, _impl_._has_bits_);
};

GetLatestBlockhashRequest::GetLatestBlockhashRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetLatestBlockhashRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:geyser.GetLatestBlockhashRequest)
}
GetLatestBlockhashRequest::GetLatestBlockhashRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const GetLatestBlockhashRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetLatestBlockhashRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE GetLatestBlockhashRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void GetLatestBlockhashRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.commitment_ = {};
}
GetLatestBlockhashRequest::~GetLatestBlockhashRequest() {
  // @@protoc_insertion_point(destructor:geyser.GetLatestBlockhashRequest)
  SharedDtor(*this);
}
inline void GetLatestBlockhashRequest::SharedDtor(MessageLite& self) {
  GetLatestBlockhashRequest& this_ = static_cast<GetLatestBlockhashRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GetLatestBlockhashRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetLatestBlockhashRequest(arena);
}
constexpr auto GetLatestBlockhashRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GetLatestBlockhashRequest),
                                            alignof(GetLatestBlockhashRequest));
}
constexpr auto GetLatestBlockhashRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetLatestBlockhashRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetLatestBlockhashRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetLatestBlockhashRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetLatestBlockhashRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GetLatestBlockhashRequest>(), &GetLatestBlockhashRequest::ByteSizeLong,
              &GetLatestBlockhashRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetLatestBlockhashRequest, _impl_._cached_size_),
          false,
      },
      &GetLatestBlockhashRequest::kDescriptorMethods,
      &descriptor_table_geyser_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetLatestBlockhashRequest_class_data_ =
        GetLatestBlockhashRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetLatestBlockhashRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetLatestBlockhashRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetLatestBlockhashRequest_class_data_.tc_table);
  return GetLatestBlockhashRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
GetLatestBlockhashRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetLatestBlockhashRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    GetLatestBlockhashRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::geyser::GetLatestBlockhashRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .geyser.CommitmentLevel commitment = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetLatestBlockhashRequest, _impl_.commitment_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(GetLatestBlockhashRequest, _impl_.commitment_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .geyser.CommitmentLevel commitment = 1;
    {PROTOBUF_FIELD_OFFSET(GetLatestBlockhashRequest, _impl_.commitment_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void GetLatestBlockhashRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:geyser.GetLatestBlockhashRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.commitment_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GetLatestBlockhashRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GetLatestBlockhashRequest& this_ = static_cast<const GetLatestBlockhashRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GetLatestBlockhashRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GetLatestBlockhashRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:geyser.GetLatestBlockhashRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional .geyser.CommitmentLevel commitment = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this_._internal_commitment(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:geyser.GetLatestBlockhashRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GetLatestBlockhashRequest::ByteSizeLong(const MessageLite& base) {
  const GetLatestBlockhashRequest& this_ = static_cast<const GetLatestBlockhashRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GetLatestBlockhashRequest::ByteSizeLong() const {
  const GetLatestBlockhashRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:geyser.GetLatestBlockhashRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // optional .geyser.CommitmentLevel commitment = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this_._internal_commitment());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GetLatestBlockhashRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetLatestBlockhashRequest*>(&to_msg);
  auto& from = static_cast<const GetLatestBlockhashRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:geyser.GetLatestBlockhashRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _this->_impl_.commitment_ = from._impl_.commitment_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetLatestBlockhashRequest::CopyFrom(const GetLatestBlockhashRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:geyser.GetLatestBlockhashRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetLatestBlockhashRequest::InternalSwap(GetLatestBlockhashRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.commitment_, other->_impl_.commitment_);
}

::google::protobuf::Metadata GetLatestBlockhashRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetLatestBlockhashResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GetLatestBlockhashResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetLatestBlockhashResponse, _impl_._has_bits_);
};

GetLatestBlockhashResponse::GetLatestBlockhashResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetLatestBlockhashResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:geyser.GetLatestBlockhashResponse)
}
PROTOBUF_NDEBUG_INLINE GetLatestBlockhashResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::geyser::GetLatestBlockhashResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        blockhash_(arena, from.blockhash_) {}

GetLatestBlockhashResponse::GetLatestBlockhashResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const GetLatestBlockhashResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetLatestBlockhashResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetLatestBlockhashResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, slot_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, slot_),
           offsetof(Impl_, last_valid_block_height_) -
               offsetof(Impl_, slot_) +
               sizeof(Impl_::last_valid_block_height_));

  // @@protoc_insertion_point(copy_constructor:geyser.GetLatestBlockhashResponse)
}
PROTOBUF_NDEBUG_INLINE GetLatestBlockhashResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        blockhash_(arena) {}

inline void GetLatestBlockhashResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, slot_),
           0,
           offsetof(Impl_, last_valid_block_height_) -
               offsetof(Impl_, slot_) +
               sizeof(Impl_::last_valid_block_height_));
}
GetLatestBlockhashResponse::~GetLatestBlockhashResponse() {
  // @@protoc_insertion_point(destructor:geyser.GetLatestBlockhashResponse)
  SharedDtor(*this);
}
inline void GetLatestBlockhashResponse::SharedDtor(MessageLite& self) {
  GetLatestBlockhashResponse& this_ = static_cast<GetLatestBlockhashResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.blockhash_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GetLatestBlockhashResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetLatestBlockhashResponse(arena);
}
constexpr auto GetLatestBlockhashResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GetLatestBlockhashResponse),
                                            alignof(GetLatestBlockhashResponse));
}
constexpr auto GetLatestBlockhashResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetLatestBlockhashResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetLatestBlockhashResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetLatestBlockhashResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetLatestBlockhashResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GetLatestBlockhashResponse>(), &GetLatestBlockhashResponse::ByteSizeLong,
              &GetLatestBlockhashResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetLatestBlockhashResponse, _impl_._cached_size_),
          false,
      },
      &GetLatestBlockhashResponse::kDescriptorMethods,
      &descriptor_table_geyser_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetLatestBlockhashResponse_class_data_ =
        GetLatestBlockhashResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetLatestBlockhashResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetLatestBlockhashResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetLatestBlockhashResponse_class_data_.tc_table);
  return GetLatestBlockhashResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 51, 2>
GetLatestBlockhashResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetLatestBlockhashResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    GetLatestBlockhashResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::geyser::GetLatestBlockhashResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 slot = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(GetLatestBlockhashResponse, _impl_.slot_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(GetLatestBlockhashResponse, _impl_.slot_)}},
    // string blockhash = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(GetLatestBlockhashResponse, _impl_.blockhash_)}},
    // uint64 last_valid_block_height = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(GetLatestBlockhashResponse, _impl_.last_valid_block_height_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(GetLatestBlockhashResponse, _impl_.last_valid_block_height_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 slot = 1;
    {PROTOBUF_FIELD_OFFSET(GetLatestBlockhashResponse, _impl_.slot_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // string blockhash = 2;
    {PROTOBUF_FIELD_OFFSET(GetLatestBlockhashResponse, _impl_.blockhash_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 last_valid_block_height = 3;
    {PROTOBUF_FIELD_OFFSET(GetLatestBlockhashResponse, _impl_.last_valid_block_height_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
    "\41\0\11\0\0\0\0\0"
    "geyser.GetLatestBlockhashResponse"
    "blockhash"
  }},
};
PROTOBUF_NOINLINE void GetLatestBlockhashResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:geyser.GetLatestBlockhashResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.blockhash_.ClearNonDefaultToEmpty();
  }
  if ((cached_has_bits & 0x00000006u) != 0) {
    ::memset(&_impl_.slot_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.last_valid_block_height_) -
        reinterpret_cast<char*>(&_impl_.slot_)) + sizeof(_impl_.last_valid_block_height_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GetLatestBlockhashResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GetLatestBlockhashResponse& this_ = static_cast<const GetLatestBlockhashResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GetLatestBlockhashResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GetLatestBlockhashResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:geyser.GetLatestBlockhashResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 slot = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_slot() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          1, this_._internal_slot(), target);
    }
  }

  // string blockhash = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_blockhash().empty()) {
      const ::std::string& _s = this_._internal_blockhash();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "geyser.GetLatestBlockhashResponse.blockhash");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // uint64 last_valid_block_height = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_last_valid_block_height() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          3, this_._internal_last_valid_block_height(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:geyser.GetLatestBlockhashResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GetLatestBlockhashResponse::ByteSizeLong(const MessageLite& base) {
  const GetLatestBlockhashResponse& this_ = static_cast<const GetLatestBlockhashResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GetLatestBlockhashResponse::ByteSizeLong() const {
  const GetLatestBlockhashResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:geyser.GetLatestBlockhashResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // string blockhash = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_blockhash().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_blockhash());
      }
    }
    // uint64 slot = 1;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_slot() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_slot());
      }
    }
    // uint64 last_valid_block_height = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_last_valid_block_height() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_last_valid_block_height());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GetLatestBlockhashResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetLatestBlockhashResponse*>(&to_msg);
  auto& from = static_cast<const GetLatestBlockhashResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:geyser.GetLatestBlockhashResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_blockhash().empty()) {
        _this->_internal_set_blockhash(from._internal_blockhash());
      } else {
        if (_this->_impl_.blockhash_.IsDefault()) {
          _this->_internal_set_blockhash("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_slot() != 0) {
        _this->_impl_.slot_ = from._impl_.slot_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_last_valid_block_height() != 0) {
        _this->_impl_.last_valid_block_height_ = from._impl_.last_valid_block_height_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetLatestBlockhashResponse::CopyFrom(const GetLatestBlockhashResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:geyser.GetLatestBlockhashResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetLatestBlockhashResponse::InternalSwap(GetLatestBlockhashResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.blockhash_, &other->_impl_.blockhash_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetLatestBlockhashResponse, _impl_.last_valid_block_height_)
      + sizeof(GetLatestBlockhashResponse::_impl_.last_valid_block_height_)
      - PROTOBUF_FIELD_OFFSET(GetLatestBlockhashResponse, _impl_.slot_)>(
          reinterpret_cast<char*>(&_impl_.slot_),
          reinterpret_cast<char*>(&other->_impl_.slot_));
}

::google::protobuf::Metadata GetLatestBlockhashResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetBlockHeightRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GetBlockHeightRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetBlockHeightRequest, _impl_._has_bits_);
};

GetBlockHeightRequest::GetBlockHeightRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetBlockHeightRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:geyser.GetBlockHeightRequest)
}
GetBlockHeightRequest::GetBlockHeightRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const GetBlockHeightRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetBlockHeightRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE GetBlockHeightRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void GetBlockHeightRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.commitment_ = {};
}
GetBlockHeightRequest::~GetBlockHeightRequest() {
  // @@protoc_insertion_point(destructor:geyser.GetBlockHeightRequest)
  SharedDtor(*this);
}
inline void GetBlockHeightRequest::SharedDtor(MessageLite& self) {
  GetBlockHeightRequest& this_ = static_cast<GetBlockHeightRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GetBlockHeightRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetBlockHeightRequest(arena);
}
constexpr auto GetBlockHeightRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GetBlockHeightRequest),
                                            alignof(GetBlockHeightRequest));
}
constexpr auto GetBlockHeightRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetBlockHeightRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetBlockHeightRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetBlockHeightRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetBlockHeightRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GetBlockHeightRequest>(), &GetBlockHeightRequest::ByteSizeLong,
              &GetBlockHeightRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetBlockHeightRequest, _impl_._cached_size_),
          false,
      },
      &GetBlockHeightRequest::kDescriptorMethods,
      &descriptor_table_geyser_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetBlockHeightRequest_class_data_ =
        GetBlockHeightRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetBlockHeightRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetBlockHeightRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetBlockHeightRequest_class_data_.tc_table);
  return GetBlockHeightRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
GetBlockHeightRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetBlockHeightRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    GetBlockHeightRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::geyser::GetBlockHeightRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .geyser.CommitmentLevel commitment = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetBlockHeightRequest, _impl_.commitment_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(GetBlockHeightRequest, _impl_.commitment_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .geyser.CommitmentLevel commitment = 1;
    {PROTOBUF_FIELD_OFFSET(GetBlockHeightRequest, _impl_.commitment_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void GetBlockHeightRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:geyser.GetBlockHeightRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.commitment_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GetBlockHeightRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GetBlockHeightRequest& this_ = static_cast<const GetBlockHeightRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GetBlockHeightRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GetBlockHeightRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:geyser.GetBlockHeightRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional .geyser.CommitmentLevel commitment = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this_._internal_commitment(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:geyser.GetBlockHeightRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GetBlockHeightRequest::ByteSizeLong(const MessageLite& base) {
  const GetBlockHeightRequest& this_ = static_cast<const GetBlockHeightRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GetBlockHeightRequest::ByteSizeLong() const {
  const GetBlockHeightRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:geyser.GetBlockHeightRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // optional .geyser.CommitmentLevel commitment = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this_._internal_commitment());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GetBlockHeightRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetBlockHeightRequest*>(&to_msg);
  auto& from = static_cast<const GetBlockHeightRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:geyser.GetBlockHeightRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _this->_impl_.commitment_ = from._impl_.commitment_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetBlockHeightRequest::CopyFrom(const GetBlockHeightRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:geyser.GetBlockHeightRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetBlockHeightRequest::InternalSwap(GetBlockHeightRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.commitment_, other->_impl_.commitment_);
}

::google::protobuf::Metadata GetBlockHeightRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetBlockHeightResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GetBlockHeightResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetBlockHeightResponse, _impl_._has_bits_);
};

GetBlockHeightResponse::GetBlockHeightResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetBlockHeightResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:geyser.GetBlockHeightResponse)
}
GetBlockHeightResponse::GetBlockHeightResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const GetBlockHeightResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetBlockHeightResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE GetBlockHeightResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void GetBlockHeightResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.block_height_ = {};
}
GetBlockHeightResponse::~GetBlockHeightResponse() {
  // @@protoc_insertion_point(destructor:geyser.GetBlockHeightResponse)
  SharedDtor(*this);
}
inline void GetBlockHeightResponse::SharedDtor(MessageLite& self) {
  GetBlockHeightResponse& this_ = static_cast<GetBlockHeightResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GetBlockHeightResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetBlockHeightResponse(arena);
}
constexpr auto GetBlockHeightResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GetBlockHeightResponse),
                                            alignof(GetBlockHeightResponse));
}
constexpr auto GetBlockHeightResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetBlockHeightResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetBlockHeightResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetBlockHeightResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetBlockHeightResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GetBlockHeightResponse>(), &GetBlockHeightResponse::ByteSizeLong,
              &GetBlockHeightResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetBlockHeightResponse, _impl_._cached_size_),
          false,
      },
      &GetBlockHeightResponse::kDescriptorMethods,
      &descriptor_table_geyser_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetBlockHeightResponse_class_data_ =
        GetBlockHeightResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetBlockHeightResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetBlockHeightResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetBlockHeightResponse_class_data_.tc_table);
  return GetBlockHeightResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
GetBlockHeightResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetBlockHeightResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    GetBlockHeightResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::geyser::GetBlockHeightResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 block_height = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(GetBlockHeightResponse, _impl_.block_height_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(GetBlockHeightResponse, _impl_.block_height_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 block_height = 1;
    {PROTOBUF_FIELD_OFFSET(GetBlockHeightResponse, _impl_.block_height_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void GetBlockHeightResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:geyser.GetBlockHeightResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.block_height_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GetBlockHeightResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GetBlockHeightResponse& this_ = static_cast<const GetBlockHeightResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GetBlockHeightResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GetBlockHeightResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:geyser.GetBlockHeightResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 block_height = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_block_height() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          1, this_._internal_block_height(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:geyser.GetBlockHeightResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GetBlockHeightResponse::ByteSizeLong(const MessageLite& base) {
  const GetBlockHeightResponse& this_ = static_cast<const GetBlockHeightResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GetBlockHeightResponse::ByteSizeLong() const {
  const GetBlockHeightResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:geyser.GetBlockHeightResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // uint64 block_height = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_block_height() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_block_height());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GetBlockHeightResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetBlockHeightResponse*>(&to_msg);
  auto& from = static_cast<const GetBlockHeightResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:geyser.GetBlockHeightResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (from._internal_block_height() != 0) {
      _this->_impl_.block_height_ = from._impl_.block_height_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetBlockHeightResponse::CopyFrom(const GetBlockHeightResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:geyser.GetBlockHeightResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetBlockHeightResponse::InternalSwap(GetBlockHeightResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.block_height_, other->_impl_.block_height_);
}

::google::protobuf::Metadata GetBlockHeightResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetSlotRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GetSlotRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetSlotRequest, _impl_._has_bits_);
};

GetSlotRequest::GetSlotRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetSlotRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:geyser.GetSlotRequest)
}
GetSlotRequest::GetSlotRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const GetSlotRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetSlotRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE GetSlotRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void GetSlotRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.commitment_ = {};
}
GetSlotRequest::~GetSlotRequest() {
  // @@protoc_insertion_point(destructor:geyser.GetSlotRequest)
  SharedDtor(*this);
}
inline void GetSlotRequest::SharedDtor(MessageLite& self) {
  GetSlotRequest& this_ = static_cast<GetSlotRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GetSlotRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetSlotRequest(arena);
}
constexpr auto GetSlotRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GetSlotRequest),
                                            alignof(GetSlotRequest));
}
constexpr auto GetSlotRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetSlotRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetSlotRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetSlotRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetSlotRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GetSlotRequest>(), &GetSlotRequest::ByteSizeLong,
              &GetSlotRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetSlotRequest, _impl_._cached_size_),
          false,
      },
      &GetSlotRequest::kDescriptorMethods,
      &descriptor_table_geyser_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetSlotRequest_class_data_ =
        GetSlotRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetSlotRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetSlotRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetSlotRequest_class_data_.tc_table);
  return GetSlotRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
GetSlotRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetSlotRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    GetSlotRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::geyser::GetSlotRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .geyser.CommitmentLevel commitment = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetSlotRequest, _impl_.commitment_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(GetSlotRequest, _impl_.commitment_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .geyser.CommitmentLevel commitment = 1;
    {PROTOBUF_FIELD_OFFSET(GetSlotRequest, _impl_.commitment_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void GetSlotRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:geyser.GetSlotRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.commitment_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GetSlotRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GetSlotRequest& this_ = static_cast<const GetSlotRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GetSlotRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GetSlotRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:geyser.GetSlotRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional .geyser.CommitmentLevel commitment = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this_._internal_commitment(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:geyser.GetSlotRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GetSlotRequest::ByteSizeLong(const MessageLite& base) {
  const GetSlotRequest& this_ = static_cast<const GetSlotRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GetSlotRequest::ByteSizeLong() const {
  const GetSlotRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:geyser.GetSlotRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // optional .geyser.CommitmentLevel commitment = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this_._internal_commitment());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GetSlotRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetSlotRequest*>(&to_msg);
  auto& from = static_cast<const GetSlotRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:geyser.GetSlotRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _this->_impl_.commitment_ = from._impl_.commitment_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetSlotRequest::CopyFrom(const GetSlotRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:geyser.GetSlotRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetSlotRequest::InternalSwap(GetSlotRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.commitment_, other->_impl_.commitment_);
}

::google::protobuf::Metadata GetSlotRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetSlotResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GetSlotResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetSlotResponse, _impl_._has_bits_);
};

GetSlotResponse::GetSlotResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetSlotResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:geyser.GetSlotResponse)
}
GetSlotResponse::GetSlotResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const GetSlotResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetSlotResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE GetSlotResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void GetSlotResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.slot_ = {};
}
GetSlotResponse::~GetSlotResponse() {
  // @@protoc_insertion_point(destructor:geyser.GetSlotResponse)
  SharedDtor(*this);
}
inline void GetSlotResponse::SharedDtor(MessageLite& self) {
  GetSlotResponse& this_ = static_cast<GetSlotResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GetSlotResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetSlotResponse(arena);
}
constexpr auto GetSlotResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GetSlotResponse),
                                            alignof(GetSlotResponse));
}
constexpr auto GetSlotResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetSlotResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetSlotResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetSlotResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetSlotResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GetSlotResponse>(), &GetSlotResponse::ByteSizeLong,
              &GetSlotResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetSlotResponse, _impl_._cached_size_),
          false,
      },
      &GetSlotResponse::kDescriptorMethods,
      &descriptor_table_geyser_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetSlotResponse_class_data_ =
        GetSlotResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetSlotResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetSlotResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetSlotResponse_class_data_.tc_table);
  return GetSlotResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
GetSlotResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetSlotResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    GetSlotResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::geyser::GetSlotResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 slot = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(GetSlotResponse, _impl_.slot_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(GetSlotResponse, _impl_.slot_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 slot = 1;
    {PROTOBUF_FIELD_OFFSET(GetSlotResponse, _impl_.slot_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void GetSlotResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:geyser.GetSlotResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.slot_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GetSlotResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GetSlotResponse& this_ = static_cast<const GetSlotResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GetSlotResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GetSlotResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:geyser.GetSlotResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 slot = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_slot() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          1, this_._internal_slot(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:geyser.GetSlotResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GetSlotResponse::ByteSizeLong(const MessageLite& base) {
  const GetSlotResponse& this_ = static_cast<const GetSlotResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GetSlotResponse::ByteSizeLong() const {
  const GetSlotResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:geyser.GetSlotResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // uint64 slot = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_slot() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_slot());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GetSlotResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetSlotResponse*>(&to_msg);
  auto& from = static_cast<const GetSlotResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:geyser.GetSlotResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (from._internal_slot() != 0) {
      _this->_impl_.slot_ = from._impl_.slot_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetSlotResponse::CopyFrom(const GetSlotResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:geyser.GetSlotResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetSlotResponse::InternalSwap(GetSlotResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.slot_, other->_impl_.slot_);
}

::google::protobuf::Metadata GetSlotResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetVersionRequest::_Internal {
 public:
};

GetVersionRequest::GetVersionRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, GetVersionRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:geyser.GetVersionRequest)
}
GetVersionRequest::GetVersionRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const GetVersionRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, GetVersionRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetVersionRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:geyser.GetVersionRequest)
}

inline void* PROTOBUF_NONNULL GetVersionRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetVersionRequest(arena);
}
constexpr auto GetVersionRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GetVersionRequest),
                                            alignof(GetVersionRequest));
}
constexpr auto GetVersionRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetVersionRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetVersionRequest::MergeImpl,
          ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<GetVersionRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetVersionRequest::SharedDtor,
          ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<GetVersionRequest>(), &GetVersionRequest::ByteSizeLong,
              &GetVersionRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetVersionRequest, _impl_._cached_size_),
          false,
      },
      &GetVersionRequest::kDescriptorMethods,
      &descriptor_table_geyser_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetVersionRequest_class_data_ =
        GetVersionRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetVersionRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetVersionRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetVersionRequest_class_data_.tc_table);
  return GetVersionRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2>
GetVersionRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    GetVersionRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::geyser::GetVersionRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, // no field_entries, or aux_entries
  {{
  }},
};







::google::protobuf::Metadata GetVersionRequest::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetVersionResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GetVersionResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetVersionResponse, _impl_._has_bits_);
};

GetVersionResponse::GetVersionResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetVersionResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:geyser.GetVersionResponse)
}
PROTOBUF_NDEBUG_INLINE GetVersionResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::geyser::GetVersionResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        version_(arena, from.version_) {}

GetVersionResponse::GetVersionResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const GetVersionResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetVersionResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetVersionResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:geyser.GetVersionResponse)
}
PROTOBUF_NDEBUG_INLINE GetVersionResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        version_(arena) {}

inline void GetVersionResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetVersionResponse::~GetVersionResponse() {
  // @@protoc_insertion_point(destructor:geyser.GetVersionResponse)
  SharedDtor(*this);
}
inline void GetVersionResponse::SharedDtor(MessageLite& self) {
  GetVersionResponse& this_ = static_cast<GetVersionResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.version_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GetVersionResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetVersionResponse(arena);
}
constexpr auto GetVersionResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GetVersionResponse),
                                            alignof(GetVersionResponse));
}
constexpr auto GetVersionResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetVersionResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetVersionResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetVersionResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetVersionResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GetVersionResponse>(), &GetVersionResponse::ByteSizeLong,
              &GetVersionResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetVersionResponse, _impl_._cached_size_),
          false,
      },
      &GetVersionResponse::kDescriptorMethods,
      &descriptor_table_geyser_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetVersionResponse_class_data_ =
        GetVersionResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetVersionResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetVersionResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetVersionResponse_class_data_.tc_table);
  return GetVersionResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 41, 2>
GetVersionResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetVersionResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    GetVersionResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::geyser::GetVersionResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string version = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetVersionResponse, _impl_.version_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string version = 1;
    {PROTOBUF_FIELD_OFFSET(GetVersionResponse, _impl_.version_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\31\7\0\0\0\0\0\0"
    "geyser.GetVersionResponse"
    "version"
  }},
};
PROTOBUF_NOINLINE void GetVersionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:geyser.GetVersionResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.version_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GetVersionResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GetVersionResponse& this_ = static_cast<const GetVersionResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GetVersionResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GetVersionResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:geyser.GetVersionResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string version = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_version().empty()) {
      const ::std::string& _s = this_._internal_version();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "geyser.GetVersionResponse.version");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:geyser.GetVersionResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GetVersionResponse::ByteSizeLong(const MessageLite& base) {
  const GetVersionResponse& this_ = static_cast<const GetVersionResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GetVersionResponse::ByteSizeLong() const {
  const GetVersionResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:geyser.GetVersionResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // string version = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_version().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_version());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GetVersionResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetVersionResponse*>(&to_msg);
  auto& from = static_cast<const GetVersionResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:geyser.GetVersionResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (!from._internal_version().empty()) {
      _this->_internal_set_version(from._internal_version());
    } else {
      if (_this->_impl_.version_.IsDefault()) {
        _this->_internal_set_version("");
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetVersionResponse::CopyFrom(const GetVersionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:geyser.GetVersionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetVersionResponse::InternalSwap(GetVersionResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.version_, &other->_impl_.version_, arena);
}

::google::protobuf::Metadata GetVersionResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class IsBlockhashValidRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<IsBlockhashValidRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(IsBlockhashValidRequest, _impl_._has_bits_);
};

IsBlockhashValidRequest::IsBlockhashValidRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, IsBlockhashValidRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:geyser.IsBlockhashValidRequest)
}
PROTOBUF_NDEBUG_INLINE IsBlockhashValidRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::geyser::IsBlockhashValidRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        blockhash_(arena, from.blockhash_) {}

IsBlockhashValidRequest::IsBlockhashValidRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const IsBlockhashValidRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, IsBlockhashValidRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  IsBlockhashValidRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.commitment_ = from._impl_.commitment_;

  // @@protoc_insertion_point(copy_constructor:geyser.IsBlockhashValidRequest)
}
PROTOBUF_NDEBUG_INLINE IsBlockhashValidRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        blockhash_(arena) {}

inline void IsBlockhashValidRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.commitment_ = {};
}
IsBlockhashValidRequest::~IsBlockhashValidRequest() {
  // @@protoc_insertion_point(destructor:geyser.IsBlockhashValidRequest)
  SharedDtor(*this);
}
inline void IsBlockhashValidRequest::SharedDtor(MessageLite& self) {
  IsBlockhashValidRequest& this_ = static_cast<IsBlockhashValidRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.blockhash_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL IsBlockhashValidRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) IsBlockhashValidRequest(arena);
}
constexpr auto IsBlockhashValidRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(IsBlockhashValidRequest),
                                            alignof(IsBlockhashValidRequest));
}
constexpr auto IsBlockhashValidRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_IsBlockhashValidRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &IsBlockhashValidRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<IsBlockhashValidRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &IsBlockhashValidRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<IsBlockhashValidRequest>(), &IsBlockhashValidRequest::ByteSizeLong,
              &IsBlockhashValidRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(IsBlockhashValidRequest, _impl_._cached_size_),
          false,
      },
      &IsBlockhashValidRequest::kDescriptorMethods,
      &descriptor_table_geyser_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull IsBlockhashValidRequest_class_data_ =
        IsBlockhashValidRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
IsBlockhashValidRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&IsBlockhashValidRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(IsBlockhashValidRequest_class_data_.tc_table);
  return IsBlockhashValidRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 48, 2>
IsBlockhashValidRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(IsBlockhashValidRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    IsBlockhashValidRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::geyser::IsBlockhashValidRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .geyser.CommitmentLevel commitment = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(IsBlockhashValidRequest, _impl_.commitment_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(IsBlockhashValidRequest, _impl_.commitment_)}},
    // string blockhash = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(IsBlockhashValidRequest, _impl_.blockhash_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string blockhash = 1;
    {PROTOBUF_FIELD_OFFSET(IsBlockhashValidRequest, _impl_.blockhash_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional .geyser.CommitmentLevel commitment = 2;
    {PROTOBUF_FIELD_OFFSET(IsBlockhashValidRequest, _impl_.commitment_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
    "\36\11\0\0\0\0\0\0"
    "geyser.IsBlockhashValidRequest"
    "blockhash"
  }},
};
PROTOBUF_NOINLINE void IsBlockhashValidRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:geyser.IsBlockhashValidRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.blockhash_.ClearNonDefaultToEmpty();
  }
  _impl_.commitment_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL IsBlockhashValidRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const IsBlockhashValidRequest& this_ = static_cast<const IsBlockhashValidRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL IsBlockhashValidRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const IsBlockhashValidRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:geyser.IsBlockhashValidRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string blockhash = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_blockhash().empty()) {
      const ::std::string& _s = this_._internal_blockhash();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "geyser.IsBlockhashValidRequest.blockhash");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional .geyser.CommitmentLevel commitment = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this_._internal_commitment(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:geyser.IsBlockhashValidRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t IsBlockhashValidRequest::ByteSizeLong(const MessageLite& base) {
  const IsBlockhashValidRequest& this_ = static_cast<const IsBlockhashValidRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t IsBlockhashValidRequest::ByteSizeLong() const {
  const IsBlockhashValidRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:geyser.IsBlockhashValidRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // string blockhash = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_blockhash().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_blockhash());
      }
    }
    // optional .geyser.CommitmentLevel commitment = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this_._internal_commitment());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void IsBlockhashValidRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<IsBlockhashValidRequest*>(&to_msg);
  auto& from = static_cast<const IsBlockhashValidRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:geyser.IsBlockhashValidRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_blockhash().empty()) {
        _this->_internal_set_blockhash(from._internal_blockhash());
      } else {
        if (_this->_impl_.blockhash_.IsDefault()) {
          _this->_internal_set_blockhash("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.commitment_ = from._impl_.commitment_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void IsBlockhashValidRequest::CopyFrom(const IsBlockhashValidRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:geyser.IsBlockhashValidRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void IsBlockhashValidRequest::InternalSwap(IsBlockhashValidRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.blockhash_, &other->_impl_.blockhash_, arena);
  swap(_impl_.commitment_, other->_impl_.commitment_);
}

::google::protobuf::Metadata IsBlockhashValidRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class IsBlockhashValidResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<IsBlockhashValidResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(IsBlockhashValidResponse, _impl_._has_bits_);
};

IsBlockhashValidResponse::IsBlockhashValidResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, IsBlockhashValidResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:geyser.IsBlockhashValidResponse)
}
IsBlockhashValidResponse::IsBlockhashValidResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const IsBlockhashValidResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, IsBlockhashValidResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE IsBlockhashValidResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void IsBlockhashValidResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, slot_),
           0,
           offsetof(Impl_, valid_) -
               offsetof(Impl_, slot_) +
               sizeof(Impl_::valid_));
}
IsBlockhashValidResponse::~IsBlockhashValidResponse() {
  // @@protoc_insertion_point(destructor:geyser.IsBlockhashValidResponse)
  SharedDtor(*this);
}
inline void IsBlockhashValidResponse::SharedDtor(MessageLite& self) {
  IsBlockhashValidResponse& this_ = static_cast<IsBlockhashValidResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL IsBlockhashValidResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) IsBlockhashValidResponse(arena);
}
constexpr auto IsBlockhashValidResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(IsBlockhashValidResponse),
                                            alignof(IsBlockhashValidResponse));
}
constexpr auto IsBlockhashValidResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_IsBlockhashValidResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &IsBlockhashValidResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<IsBlockhashValidResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &IsBlockhashValidResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<IsBlockhashValidResponse>(), &IsBlockhashValidResponse::ByteSizeLong,
              &IsBlockhashValidResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(IsBlockhashValidResponse, _impl_._cached_size_),
          false,
      },
      &IsBlockhashValidResponse::kDescriptorMethods,
      &descriptor_table_geyser_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull IsBlockhashValidResponse_class_data_ =
        IsBlockhashValidResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
IsBlockhashValidResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&IsBlockhashValidResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(IsBlockhashValidResponse_class_data_.tc_table);
  return IsBlockhashValidResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
IsBlockhashValidResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(IsBlockhashValidResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    IsBlockhashValidResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::geyser::IsBlockhashValidResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool valid = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(IsBlockhashValidResponse, _impl_.valid_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(IsBlockhashValidResponse, _impl_.valid_)}},
    // uint64 slot = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(IsBlockhashValidResponse, _impl_.slot_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(IsBlockhashValidResponse, _impl_.slot_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 slot = 1;
    {PROTOBUF_FIELD_OFFSET(IsBlockhashValidResponse, _impl_.slot_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // bool valid = 2;
    {PROTOBUF_FIELD_OFFSET(IsBlockhashValidResponse, _impl_.valid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void IsBlockhashValidResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:geyser.IsBlockhashValidResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    ::memset(&_impl_.slot_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.valid_) -
        reinterpret_cast<char*>(&_impl_.slot_)) + sizeof(_impl_.valid_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL IsBlockhashValidResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const IsBlockhashValidResponse& this_ = static_cast<const IsBlockhashValidResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL IsBlockhashValidResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const IsBlockhashValidResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:geyser.IsBlockhashValidResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 slot = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_slot() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          1, this_._internal_slot(), target);
    }
  }

  // bool valid = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_valid() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          2, this_._internal_valid(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:geyser.IsBlockhashValidResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t IsBlockhashValidResponse::ByteSizeLong(const MessageLite& base) {
  const IsBlockhashValidResponse& this_ = static_cast<const IsBlockhashValidResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t IsBlockhashValidResponse::ByteSizeLong() const {
  const IsBlockhashValidResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:geyser.IsBlockhashValidResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // uint64 slot = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_slot() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_slot());
      }
    }
    // bool valid = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_valid() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void IsBlockhashValidResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<IsBlockhashValidResponse*>(&to_msg);
  auto& from = static_cast<const IsBlockhashValidResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:geyser.IsBlockhashValidResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (from._internal_slot() != 0) {
        _this->_impl_.slot_ = from._impl_.slot_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_valid() != 0) {
        _this->_impl_.valid_ = from._impl_.valid_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void IsBlockhashValidResponse::CopyFrom(const IsBlockhashValidResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:geyser.IsBlockhashValidResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void IsBlockhashValidResponse::InternalSwap(IsBlockhashValidResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(IsBlockhashValidResponse, _impl_.valid_)
      + sizeof(IsBlockhashValidResponse::_impl_.valid_)
      - PROTOBUF_FIELD_OFFSET(IsBlockhashValidResponse, _impl_.slot_)>(
          reinterpret_cast<char*>(&_impl_.slot_),
          reinterpret_cast<char*>(&other->_impl_.slot_));
}

::google::protobuf::Metadata IsBlockhashValidResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace geyser
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_geyser_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
